#
# This file contains 'Framework Code' and is licensed as such
# under the terms of your license agreement with Intel or your
# vendor.  This file may not be modified, except as allowed by
# additional terms of your license agreement.
#
## @file  CpRcPkg.dec
#
#Copyright (c) 2015 - 2016, Intel Corporation. All rights reserved.
#This software and associated documentation (if any) is furnished
#under a license and may only be used or copied in accordance
#with the terms of the license. Except as permitted by such
#license, no part of this software or documentation may be
#reproduced, stored in a retrieval system, or transmitted in any
#form or by any means without the express written consent of
#Intel Corporation.
#
##


[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = CpRcPkg
  PACKAGE_GUID                   = 7DE2B07E-0E4A-4eba-B7B6-CE1E8D2B8408
  PACKAGE_VERSION                = 0.1

[Includes]
  Include
  Include/Library
# APTIOV_SERVER_OVERRIDE_RC_START : Fix build error when "RAS_SUPPORT" token enable.
  ../ServerCommonPkg/Include
  ../Build
# APTIOV_SERVER_OVERRIDE_RC_END
  Library/BaseMemoryCoreLib/Core
  Library/BaseMemoryCoreLib/Core/Include

[LibraryClasses]
  
  ##  @libraryclass  Provides services to get the silicon access library.
  SiliconAccessLib|Include/Library/UsraAccessApi.h

  ##  @libraryclass  Provides services to convert CSR to PCIE address library.
  CsrToPcieLib|CpRcPkg/Include/Library/CsrToPcieAddress.h
  
  ##  @libraryclass  Provides services to PCIE address library.
  PcieAddrLib|CpRcPkg/Include/Library/PcieAddress.h
  
  ##  @libraryclass  Provides services to get PCI Express Address Base library.
  MmPciLib|CpRcPkg/Include/Library/MmPciBaseLib.h
  
  ##  @libraryclass  Provides services to get the silicon access library.
  UsraLib|CpRcPkg/Include/Protocol/SiliconRegAccess.h

[Guids]

  ## Include/Guid/CpRcPkgTokenSpace.h
  gEfiCpRcPkgTokenSpaceGuid  = { 0xfcdd2efc, 0x6ca8, 0x4d0b, { 0x9d, 0x0, 0x6f, 0x9c, 0xfa, 0x57, 0x8f, 0x98 }}
  
[Protocols]
  ## Include/Protocol/SiliconRegAccess.h
  gUsraProtocolGuid              = { 0xfd480a76, 0xb134, 0x4ef7, { 0xad, 0xfe, 0xb0, 0xe0, 0x54, 0x63, 0x98, 0x7 }}

[PPIs]
  ## Include/Protocol/SiliconRegAccess.h
  gUsraPpiGuid                   = { 0x90766a99, 0x9ca5, 0x44de, { 0x94, 0xda, 0xdc, 0xc1, 0xd2, 0xd6, 0xda, 0x1f }}
  gMrcOemHooksPpiGuid            = { 0x59dff742, 0x7858, 0x42b0, { 0x8d, 0x5b, 0x12, 0xc2, 0xad, 0x00, 0x3d, 0x6c }}
  gMrcHooksServicesPpiGuid       = { 0xfec46340, 0xca99, 0x49fe, { 0xbc, 0xca, 0xd0, 0x9f, 0xa6, 0x06, 0x4a, 0x4a }}
  gMrcHooksChipServicesPpiGuid   = { 0x1aaf6a9b, 0xcb1b, 0x469e, { 0x94, 0x20, 0x0d, 0x39, 0x12, 0xb8, 0xe3, 0x76 }}

[PcdsFeatureFlag]
  ## Indicate whether USRA can support S3
  gEfiCpRcPkgTokenSpaceGuid.PcdUsraSupportS3|TRUE|BOOLEAN|0x00000012

  ## Use this feature PCD to support Single PCIe segment with static MMCFG Base
  gEfiCpRcPkgTokenSpaceGuid.PcdSingleSegFixMmcfg|FALSE|BOOLEAN|0x00000014

  ## enable/disable USRA trace.
  gEfiCpRcPkgTokenSpaceGuid.PcdUsraTraceEnable|FALSE|BOOLEAN|0x00000016

  ## enable/disable Quiesce feature.
  gEfiCpRcPkgTokenSpaceGuid.PcdQuiesceSupport|TRUE|BOOLEAN|0x00000017

[PcdsFixedAtBuild]
  ## Indicates the size of each PCIE segment
  gEfiCpRcPkgTokenSpaceGuid.PcdPcieSegmentSize|0x10000000|UINT64|0x00000010
  gEfiCpRcPkgTokenSpaceGuid.PcdNumOfPcieSeg|0x00000008|UINT32|0x00000013
  ## Indicates the max nested level
  gEfiCpRcPkgTokenSpaceGuid.PcdMaxNestedLevel|0x00000008|UINT32|0x00000018
  ## Maximum number of sockets supported for this firmware build.
  # This PCD should be used sparingly.  Dynamic allocation of data and
  # dynamic control flows are preferred over using this PCD for static
  # data allocation and control.
  gEfiCpRcPkgTokenSpaceGuid.PcdMaxCpuSocketCount|0x04|UINT32|0x00000019
#APTIOV_SERVER_OVERRIDE_RC_START : Resolve issue with PCI scan
  ## Indicates whether it needs to clear temp bus assignment in PCIE common init library
  gEfiCpRcPkgTokenSpaceGuid.PcdCleanTempBusAssignment|TRUE|BOOLEAN|0x0000001A
#APTIOV_SERVER_OVERRIDE_RC_END : Resolve issue with PCI scan
#APTIOV_SERVER_OVERRIDE_RC_START : To include PcdsDynamic in PcdsDynamicEx
[PcdsDynamic,PcdsDynamicEx]
#APTIOV_SERVER_OVERRIDE_RC_END : To include PcdsDynamic in PcdsDynamicEx
  ##                                                 |                           MMCFG Table Header                                 |                               Segment 0                                        |                              Segment 1                                       |                               Segment 2                                        |                               Segment 3                                       |                               Segment 4                                        |                               Segment 5                                       |                               Segment 6                                       |                               Segment 7                                      |
  gEfiCpRcPkgTokenSpaceGuid.PcdPcieMmcfgTablePtr|{0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,  0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}|VOID*|0x00000011
  gEfiCpRcPkgTokenSpaceGuid.PcdRcRevision|0|UINT32|0x00000015

[PcdsFixedAtBuild, PcdsPatchableInModule, PcdsDynamic, PcdsDynamicEx]

    
