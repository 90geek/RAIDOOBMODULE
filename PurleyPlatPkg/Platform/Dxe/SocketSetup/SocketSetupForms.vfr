//****************************************************************************
//**                                                                        **
//**            (C)Copyright 1993-2016 Supermicro Computer, Inc.            **
//**                                                                        **
//****************************************************************************
//  File History
//
//  Rev. 1.00
//    Bug Fix:  Draft template.
//    Reason:   
//    Auditor:  Kasber Chen
//    Date:     Dec/16/2016
//
//****************************************************************************
//
// This file contains an 'Intel Peripheral Driver' and is
// licensed for Intel CPUs and chipsets under the terms of your
// license agreement with Intel or your vendor.  This file may
// be modified by the user, subject to additional terms of the
// license agreement
//
// *++
//
// Copyright (c) 1999 - 2016 Intel Corporation. All rights reserved
// This software and associated documentation (if any) is furnished
// under a license and may only be used or copied in accordance
// with the terms of the license. Except as permitted by such
// license, no part of this software or documentation may be
// reproduced, stored in a retrieval system, or transmitted in any
// form or by any means without the express written consent of
// Intel Corporation.
//
//
// Module Name:
//
//   SocketSetup.vfr
//
// Abstract:
//
//   Socket Setup formset.
//
// Revision History:
//
// --*/

#include "SocketSetupStrDefs.h"
#include <Guid/SocketVariable.h>
#include <SocketConfiguration.h>
#include <MemDefaults.h>
#include "VariableCommon.hfr"


formset
  guid     = SOCKET_FORMSET_GUID,
  title    = STRING_TOKEN(STR_SOCKET_FORM),
  help     = STRING_TOKEN(STR_SOCKET_FORM_HELP),
  class    = SOCKET_CONFIG_CLASS_ID,
  subclass = SOCKET_CONFIG_SUBCLASS_ID,

  VFR_VARSTORE_SOCKET


      form formid = VFR_FORMID_SOCKET,

        title = STRING_TOKEN(STR_SOCKET_FORM);
        //
        // Jump to Processor Configuration Form
        //
        goto VFR_FORMID_PROCESSOR,
            prompt = STRING_TOKEN(STR_PROCESSOR_CONFIG_FORM_TITLE),
            help   = STRING_TOKEN(STR_PROCESSOR_CONFIG_FORM_HELP);

        //
        // Jump to CommonRc Configuration Form
        //
        goto VFR_FORMID_COMMONRC,
            prompt = STRING_TOKEN(STR_RC_COMMON_FORM_TITLE),
            help   = STRING_TOKEN(STR_RC_COMMON_FORM_HELP);

        //
        // Jump to MpLink Configuration Form
        //
        goto VFR_FORMID_KTI,
            prompt = STRING_TOKEN(STR_KTI_CONFIG_FORM_TITLE),
            help   = STRING_TOKEN(STR_KTI_CONFIG_FORM_HELP);

        //
        // Jump to MRC Configuration Form
        //
        goto VFR_FORMID_MEMORY,
            prompt = STRING_TOKEN(STR_MEMORY_CONFIG_FORM_TITLE),
            help   = STRING_TOKEN(STR_MEMORY_CONFIG_FORM_HELP);

        //
        // Jump to IIO Configuration Form
        //
        goto VFR_FORMID_IIO,
            prompt = STRING_TOKEN(STR_IIO_CONFIG_FORM_TITLE),
            help   = STRING_TOKEN(STR_IIO_CONFIG_FORM_HELP);

        // Jump to Power Management Configuration Form
        //
        suppressif SMC_SETUP_STYLE;  //SMCPKG_SUPPORT S
        goto VFR_FORMID_PWRMGT,
            prompt = STRING_TOKEN(STR_POWER_MGT_CONFIG_FORM_TITLE),
            help   = STRING_TOKEN(STR_POWER_MGT_CONFIG_FORM_HELP);
        endif;  //SMCPKG_SUPPORT E
      endform;


  #include "CommonRefCode.hfr"
  #include "KtiSetup.hfr"
  #include "KtiSvSystemConfig.hfr"
  #include "KtiPerSocketConfig.hfr"
  #include "KtiDfxSetup.hfr"
  #include "KtiPerLinkDfxSetup.hfr"
  #include "KtiPerLinkSetup.hfr"
 
 #include "IioSetup.hfr"
 #include "MemorySetup.hfr"
 #include "MemorySetupRas.hfr"
 #include "MemoryDfxSetup.hfr"
 #include "ProcessorSetup.hfr"
 #include "PowerManagementSetup.hfr"
// APTIOV_SERVER_OVERRIDE_RC_START: Defines dummy control and update value from NVRAM or HOB in order to avoid load defaults issue.
 #include "SocketSetupDummyControls.hfr"
// APTIOV_SERVER_OVERRIDE_RC_END: Defines dummy control and update value from NVRAM or HOB in order to avoid load defaults issue.
 endformset;
