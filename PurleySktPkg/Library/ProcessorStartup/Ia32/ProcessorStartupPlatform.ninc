;
; This file contains an 'Intel Pre-EFI Module' and is licensed
; for Intel CPUs and Chipsets under the terms of your license 
; agreement with Intel or your vendor.  This file may be      
; modified by the user, subject to additional terms of the    
; license agreement                                           
;
;------------------------------------------------------------------------------
;
; Copyright (c) 1999 - 2016, Intel Corporation. All rights reserved.<BR>
; This software and associated documentation (if any) is furnished
; under a license and may only be used or copied in accordance
; with the terms of the license. Except as permitted by such
; license, no part of this software or documentation may be
; reproduced, stored in a retrieval system, or transmitted in any
; form or by any means without the express written consent of
; Intel Corporation.
;
; Module Name:
;
;  ProcessorStartupPlatform.inc
;
; Abstract:
;
;
;------------------------------------------------------------------------------
;
; This is an assembly include file and is      
; licensed for Intel CPUs and chipsets under the terms of your
; license agreement with Intel or your vendor.  This file may 
; be modified by the user, subject to additional terms of the 
; license agreement                                           
;


PCIEX_BASE_ADDRESS              EQU     080000000h          ; MMCFG / PCIe Config Base Address, used as cold boot default only.
                                                            ; Use MMCFG_BASE_ADDRESS in PlatformHost.h file to
                                                            ; define platform choice of PCIe config base address

SB_RCBA                         EQU     0fed1c000h          ; South Bridge PCH RCBA Address

; IO Port 80h  POST CODE used in SEC phase
POWER_ON_POST_CODE              EQU     01h
MICROCODE_POST_CODE             EQU     02h
NEM_CACHE_INIT_POST_CODE        EQU     03h
NEM_CACHE_ENABLED_POST_CODE     EQU     04h
SBSP_PBSP_BRANCH_POST_CODE      EQU     05h
SEC_CPU_INIT_END_POST_CODE      EQU     06h

; IO Port 80h  Fatal Error CODE used in SEC phase
NON_INTEL_CPU_ERROR_CODE           EQU     0CAh
VCU_COMMAND_TIMEOUT_ERROR_CODE     EQU     0CBh
ILLEGAL_SOCKET_ID_ERROR_CODE       EQU     0CCh
MCU_LOAD_ERROR_CODE                EQU     0CDh
MMCFG_NOT_YET_ENABLED_ERROR_CODE   EQU     0CEh
NEM_NO_FREE_MTRR_ERROR_CODE        EQU     0D0h
NEM_DATA_RW_TEST_ERROR_CODE        EQU     0D1h

;
;MTRR Range Size and Alignment Requirement
;A range that is to be mapped to a variable-range MTRR must meet the following “power of 2” size and alignment rules:
;1. The minimum range size is 4 KBytes and the base address of the range must be
;   on at least a 4-KByte boundary.
;2. For ranges greater than 4 KBytes, each range must be of length 2n and its base
;   address must be aligned on a 2n boundary, where n is a value equal to or greater
;   than 12. The base-address alignment value cannot be less than its length. For
;   example, an 8-KByte range cannot be aligned on a 4-KByte boundary. It must be
;   aligned on at least an 8-KByte boundary.

;
; Define the No-Eviction Mode Code Region below 4GB
;
%IFDEF MINIBIOS_BUILD
CODE_REGION_BASE_ADDRESS      EQU 0ffd00000h                     ; Base = 4GB-3MB
CODE_REGION_SIZE              EQU   0300000h                     ; Size = 3MB
CODE_REGION_SIZE_MASK         EQU (~ (CODE_REGION_SIZE - 1))
%ENDIF

;
; Define the No-Eviction Mode DataStack region
; This must be in an address range the chipset decodes
;
; FE000000 thru FE3FFFFF must not be used for NEM (now reserved for SPI controller config space)
DATA_STACK_BASE_ADDRESS       EQU 0fe800000h
DATA_STACK_SIZE               EQU 200000h                        ; Size = 2MB
DATA_STACK_SIZE_MASK          EQU (~ (DATA_STACK_SIZE - 1))

LOCAL_APIC_BASE               EQU 0fee00000h
;
; Cache init and test values
; These are inverted to flip each bit at least once
;
CACHE_INIT_VALUE              EQU 0A5A5A5A5h
CACHE_TEST_VALUE              EQU (~ CACHE_INIT_VALUE)

%IFDEF MINIBIOS_BUILD
cpu_rom_setup_options STRUC
   ucode_region_addr  dd ?          ; uCode region base addr
   ucode_region_size  dd ?          ; uCode region total size
   nem_code_addr      dd ?          ; NEM code region base addr
   nem_code_size      dd ?          ; NEM code region size
   nem_data_addr      dd ?          ; NEM data stack region base addr
   nem_data_size      dd ?          ; NEM data stack region size
cpu_rom_setup_options ENDS
%ENDIF
