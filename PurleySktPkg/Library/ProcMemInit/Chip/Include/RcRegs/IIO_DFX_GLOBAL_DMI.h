//
// This file contains 'Framework Code' and is licensed as such
// under the terms of your license agreement with Intel or your
// vendor.  This file may not be modified, except as allowed by
// additional terms of your license agreement.
//
// **************************************************************************
// *                                                                        *
// *      Intel Restricted Secret                                           *
// *                                                                        *
// *      Reference Code                                                    *
// *                                                                        *
// *      Copyright (c) 2007-2016, Intel Corporation.                       *
// *                                                                        *
// *      This software and associated documentation (if any) is furnished  *
// *      under a license and may only be used or copied in accordance      *
// *      with the terms of the license. Except as permitted by such        *
// *      license, no part of this software or documentation may be         *
// *      reproduced, stored in a retrieval system, or transmitted in any   *
// *      form or by any means without the express written consent of       *
// *      Intel Corporation.                                                *
// *                                                                        *
// *      This program has been developed by Intel Corporation.             *
// *      Licensee has Intel's permission to incorporate this source code   *
// *      into their product, royalty free.  This source code may NOT be    *
// *      redistributed to anyone without Intel's written permission.       *
// *                                                                        *
// *      Intel specifically disclaims all warranties, express or           *
// *      implied, and all liability, including consequential and other     *
// *      indirect damages, for the use of this code, including liability   *
// *      for infringement of any proprietary rights, and including the     *
// *      warranties of merchantability and fitness for a particular        *
// *      purpose.  Intel does not assume any responsibility for any        *
// *      errors which may appear in this code nor any responsibility to    *
// *      update it.                                                        *
// *                                                                        *
// **************************************************************************
// **************************************************************************
// *                                                                        *
// *  PURPOSE:                                                              *
// *                                                                        *
// *      This file contains Silicon register definitions.                  *
// *                                                                        *
// **************************************************************************
//
/* Date Stamp: 9/13/2016 */

#ifndef IIO_DFX_GLOBAL_DMI_h
#define IIO_DFX_GLOBAL_DMI_h

#include "DataTypes.h"

/* Device and Function specifications:                                        */
/* For all target CPUs:                                                       */
/* IIO_DFX_GLOBAL_DMI_DEV 7                                                   */
/* IIO_DFX_GLOBAL_DMI_FUN 7                                                   */

/* VID_IIO_DFX_GLOBAL_DMI_REG supported on:                                   */
/*       SKX_A0 (0x2003F000)                                                  */
/*       SKX (0x2003F000)                                                     */
/* Register default value:              0x8086                                */
#define VID_IIO_DFX_GLOBAL_DMI_REG 0x12032000
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x000
 */
typedef union {
  struct {
    UINT16 vendor_identification_number : 16;
    /* vendor_identification_number - Bits[15:0], RO, default = 16'b1000000010000110 
       The value is assigned by PCI-SIG to Intel.
     */
  } Bits;
  UINT16 Data;
} VID_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DID_IIO_DFX_GLOBAL_DMI_REG supported on:                                   */
/*       SKX_A0 (0x2003F002)                                                  */
/*       SKX (0x2003F002)                                                     */
/* Register default value:              0x202D                                */
#define DID_IIO_DFX_GLOBAL_DMI_REG 0x12032002
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x002
 */
typedef union {
  struct {
    UINT16 device_identification_number : 16;
    /* device_identification_number - Bits[15:0], RO, default = 16'b0010000000101101 
       //TODO_HSXA0_SYNC
       Device ID values vary from function to function. Bits 15:8 are equal to 0x0E for 
       Ivytown. The following list is a breakdown of the function groups.0x0E00 - 
       0x0E1F : PCI Express and DMI ports 
       0x0E20 - 0x0E3F : IO Features (CBDMA, APIC, VT, RAS, LT)
       0x0E40 - 0x0E5F : Performance Monitors
       0x0E60 - 0x0E7F : DFX
       0x0E80 - 0x0E9F : Quick Path Interface
       0x0EA0 - 0x0EBF : Home Agent/Memory Controller
       0x0EC0 - 0x0EDF : Power Management
       0x0EE0 - 0x0EFF : Cbo/Ring
       //TODO_HSXA0_SYNC
       //SKX:Oct 18 2012: Post HSX sync values should be as below
       Device ID values vary from function to function. Bits 15:8 are equal to 0x2F for 
       the processor. The following list is a breakdown of the function groups. 
       0x2F00 - 0x2F1F : PCI Express and DMI ports
       0x2F20 - 0x2F3F : IO Features (CBDMA, APIC, VT, RAS, Intel TXT)
       0x2F40 - 0x2F5F : Performance Monitors
       0x2F60 - 0x2F7F : DFX
       0x2F80 - 0x2F9F : Intel Quick Path Interface
       0x2FA0 - 0x2FBF : Home Agent/Memory Controller
       0x2FC0 - 0x2FDF : Power Management
       0x2FE0 - 0x2FFF : Cbo/Ring
       
     */
  } Bits;
  UINT16 Data;
} DID_IIO_DFX_GLOBAL_DMI_STRUCT;


/* PCICMD_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x2003F004)                                                  */
/*       SKX (0x2003F004)                                                     */
/* Register default value:              0x0000                                */
#define PCICMD_IIO_DFX_GLOBAL_DMI_REG 0x12032004
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x004
 */
typedef union {
  struct {
    UINT16 iose : 1;
    /* iose - Bits[0:0], RO, default = 1'b0 
       1
     */
    UINT16 mse : 1;
    /* mse - Bits[1:1], RO, default = 1'b0 
       1
     */
    UINT16 bme : 1;
    /* bme - Bits[2:2], RO, default = 1'b0 
       1
     */
    UINT16 sce : 1;
    /* sce - Bits[3:3], RO, default = 1'b0 
       1
     */
    UINT16 mwie : 1;
    /* mwie - Bits[4:4], RO, default = 1'b0 
       1
     */
    UINT16 vga_palette_snoop_enable : 1;
    /* vga_palette_snoop_enable - Bits[5:5], RO, default = 1'b0 
       Not applicable to internal devices. Hardwired to 0.
     */
    UINT16 perre : 1;
    /* perre - Bits[6:6], RW, default = 1'b0 
       1
     */
    UINT16 idsel_stepping_wait_cycle_control : 1;
    /* idsel_stepping_wait_cycle_control - Bits[7:7], RO, default = 1'b0 
       Not applicable to internal devices. Hardwired to 0.
     */
    UINT16 serre : 1;
    /* serre - Bits[8:8], RW, default = 1'b0 
       1
     */
    UINT16 fast_back_to_back_enable : 1;
    /* fast_back_to_back_enable - Bits[9:9], RO, default = 1'b0 
       Not applicable to PCI Express and is hardwired to 0
     */
    UINT16 intx_interrupt_disable : 1;
    /* intx_interrupt_disable - Bits[10:10], RO, default = 1'b0 
       1
     */
    UINT16 rsvd : 5;
    /* rsvd - Bits[15:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} PCICMD_IIO_DFX_GLOBAL_DMI_STRUCT;


/* PCISTS_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x2003F006)                                                  */
/*       SKX (0x2003F006)                                                     */
/* Register default value:              0x0010                                */
#define PCISTS_IIO_DFX_GLOBAL_DMI_REG 0x12032006
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x006
 */
typedef union {
  struct {
    UINT16 rsvd_0 : 3;
    /* rsvd_0 - Bits[2:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 intxstat : 1;
    /* intxstat - Bits[3:3], RO, default = 1'b0 
       1
     */
    UINT16 capl : 1;
    /* capl - Bits[4:4], RO, default = 1'b1 
       1
     */
    UINT16 pci66mhz_capable : 1;
    /* pci66mhz_capable - Bits[5:5], RO, default = 1'b0 
       Not applicable to PCI Express. Hardwired to 0.
     */
    UINT16 rsvd_6 : 1;
    /* rsvd_6 - Bits[6:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 fb2b : 1;
    /* fb2b - Bits[7:7], RO, default = 1'b0 
       1
     */
    UINT16 mdpe : 1;
    /* mdpe - Bits[8:8], RO, default = 1'b0 
       1
     */
    UINT16 devselt : 2;
    /* devselt - Bits[10:9], RO, default = 2'b00 
       1
     */
    UINT16 sta : 1;
    /* sta - Bits[11:11], RO, default = 1'b0 
       1
     */
    UINT16 rta : 1;
    /* rta - Bits[12:12], RO, default = 1'b0 
       1
     */
    UINT16 rma : 1;
    /* rma - Bits[13:13], RO, default = 1'b0 
       1
     */
    UINT16 sse : 1;
    /* sse - Bits[14:14], RO, default = 1'b0 
       1
     */
    UINT16 dpe : 1;
    /* dpe - Bits[15:15], RO, default = 1'b0 
       1
     */
  } Bits;
  UINT16 Data;
} PCISTS_IIO_DFX_GLOBAL_DMI_STRUCT;


/* RID_IIO_DFX_GLOBAL_DMI_REG supported on:                                   */
/*       SKX_A0 (0x1003F008)                                                  */
/*       SKX (0x1003F008)                                                     */
/* Register default value:              0x00                                  */
#define RID_IIO_DFX_GLOBAL_DMI_REG 0x12031008
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Revision ID
 */
typedef union {
  struct {
    UINT8 revision_id : 8;
    /* revision_id - Bits[7:0], RO, default = 8'h0 
       
       	  Revision ID.
       	
     */
  } Bits;
  UINT8 Data;
} RID_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CCR_N0_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x1003F009)                                                  */
/*       SKX (0x1003F009)                                                     */
/* Register default value:              0x00                                  */
#define CCR_N0_IIO_DFX_GLOBAL_DMI_REG 0x12031009
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Class Code Register
 */
typedef union {
  struct {
    UINT8 interface : 8;
    /* interface - Bits[7:0], RO, default = 8'h0 
       
       	  Base revision.
       	
     */
  } Bits;
  UINT8 Data;
} CCR_N0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CCR_N1_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x2003F00A)                                                  */
/*       SKX (0x2003F00A)                                                     */
/* Register default value:              0x0880                                */
#define CCR_N1_IIO_DFX_GLOBAL_DMI_REG 0x1203200A
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Class Code Register
 */
typedef union {
  struct {
    UINT16 sub_class : 8;
    /* sub_class - Bits[7:0], RO, default = 8'h80 
       
       	  Base revision.
       	
     */
    UINT16 base_class : 8;
    /* base_class - Bits[15:8], RO, default = 8'h8 
       
       	  Base revision.
       	
     */
  } Bits;
  UINT16 Data;
} CCR_N1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CLSR_IIO_DFX_GLOBAL_DMI_REG supported on:                                  */
/*       SKX_A0 (0x1003F00C)                                                  */
/*       SKX (0x1003F00C)                                                     */
/* Register default value:              0x00                                  */
#define CLSR_IIO_DFX_GLOBAL_DMI_REG 0x1203100C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x00c
 */
typedef union {
  struct {
    UINT8 cacheline_size : 8;
    /* cacheline_size - Bits[7:0], RW, default = 8'b00000000  */
  } Bits;
  UINT8 Data;
} CLSR_IIO_DFX_GLOBAL_DMI_STRUCT;


/* PLAT_IIO_DFX_GLOBAL_DMI_REG supported on:                                  */
/*       SKX_A0 (0x1003F00D)                                                  */
/*       SKX (0x1003F00D)                                                     */
/* Register default value:              0x00                                  */
#define PLAT_IIO_DFX_GLOBAL_DMI_REG 0x1203100D
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x00d
 */
typedef union {
  struct {
    UINT8 primary_latency_timer : 8;
    /* primary_latency_timer - Bits[7:0], RO, default = 8'b00000000 
       Not applicable to PCI-Express. Hardwired to 00h.
     */
  } Bits;
  UINT8 Data;
} PLAT_IIO_DFX_GLOBAL_DMI_STRUCT;


/* HDR_IIO_DFX_GLOBAL_DMI_REG supported on:                                   */
/*       SKX_A0 (0x1003F00E)                                                  */
/*       SKX (0x1003F00E)                                                     */
/* Register default value:              0x80                                  */
#define HDR_IIO_DFX_GLOBAL_DMI_REG 0x1203100E
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x00e
 */
typedef union {
  struct {
    UINT8 configuration_layout : 7;
    /* configuration_layout - Bits[6:0], RO, default = 7'b0000000 
       This field identifies the format of the configuration header layout. It is Type 
       0 for all these devices. The default is 00h, indicating a 'endpoint device'. 
     */
    UINT8 multi_function_device : 1;
    /* multi_function_device - Bits[7:7], RO, default = 1'b1 
       This bit defaults to 1b since all these devices are multi-function
     */
  } Bits;
  UINT8 Data;
} HDR_IIO_DFX_GLOBAL_DMI_STRUCT;


/* BIST_IIO_DFX_GLOBAL_DMI_REG supported on:                                  */
/*       SKX_A0 (0x1003F00F)                                                  */
/*       SKX (0x1003F00F)                                                     */
/* Register default value:              0x00                                  */
#define BIST_IIO_DFX_GLOBAL_DMI_REG 0x1203100F
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x00f
 */
typedef union {
  struct {
    UINT8 bist_tests : 8;
    /* bist_tests - Bits[7:0], RO, default = 8'b00000000 
       Not supported. Hardwired to 00h
     */
  } Bits;
  UINT8 Data;
} BIST_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SVID_IIO_DFX_GLOBAL_DMI_REG supported on:                                  */
/*       SKX_A0 (0x2003F02C)                                                  */
/*       SKX (0x2003F02C)                                                     */
/* Register default value:              0x8086                                */
#define SVID_IIO_DFX_GLOBAL_DMI_REG 0x1203202C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x02c
 */
typedef union {
  struct {
    UINT16 subsystem_vendor_identification_number : 16;
    /* subsystem_vendor_identification_number - Bits[15:0], RW_O, default = 16'b1000000010000110 
       The default value specifies Intel but can be set to any value once after reset.
     */
  } Bits;
  UINT16 Data;
} SVID_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SDID_IIO_DFX_GLOBAL_DMI_REG supported on:                                  */
/*       SKX_A0 (0x2003F02E)                                                  */
/*       SKX (0x2003F02E)                                                     */
/* Register default value:              0x0000                                */
#define SDID_IIO_DFX_GLOBAL_DMI_REG 0x1203202E
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x02e
 */
typedef union {
  struct {
    UINT16 subsystem_device_identification_number : 16;
    /* subsystem_device_identification_number - Bits[15:0], RW_O, default = 16'b0000000000000000 
       Assigned by the subsystem vendor to uniquely identify the subsystem
     */
  } Bits;
  UINT16 Data;
} SDID_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CAPPTR_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x1003F034)                                                  */
/*       SKX (0x1003F034)                                                     */
/* Register default value:              0x40                                  */
#define CAPPTR_IIO_DFX_GLOBAL_DMI_REG 0x12031034
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x034
 */
typedef union {
  struct {
    UINT8 capability_pointer : 8;
    /* capability_pointer - Bits[7:0], RO, default = 8'b01000000 
       Points to the first capability structure for the device which is the PCIe 
       capability. 
     */
  } Bits;
  UINT8 Data;
} CAPPTR_IIO_DFX_GLOBAL_DMI_STRUCT;


/* INTL_IIO_DFX_GLOBAL_DMI_REG supported on:                                  */
/*       SKX_A0 (0x1003F03C)                                                  */
/*       SKX (0x1003F03C)                                                     */
/* Register default value:              0x00                                  */
#define INTL_IIO_DFX_GLOBAL_DMI_REG 0x1203103C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x03c
 */
typedef union {
  struct {
    UINT8 interrupt_line : 8;
    /* interrupt_line - Bits[7:0], RO, default = 8'b00000000 
       N/A for these devices
     */
  } Bits;
  UINT8 Data;
} INTL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* INTPIN_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x1003F03D)                                                  */
/*       SKX (0x1003F03D)                                                     */
/* Register default value:              0x00                                  */
#define INTPIN_IIO_DFX_GLOBAL_DMI_REG 0x1203103D
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x03d
 */
typedef union {
  struct {
    UINT8 interrupt_pin : 8;
    /* interrupt_pin - Bits[7:0], RO, default = 8'b00000000 
       N/A since these devices do not generate any interrupt on their own
     */
  } Bits;
  UINT8 Data;
} INTPIN_IIO_DFX_GLOBAL_DMI_STRUCT;


/* MINGNT_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x1003F03E)                                                  */
/*       SKX (0x1003F03E)                                                     */
/* Register default value:              0x00                                  */
#define MINGNT_IIO_DFX_GLOBAL_DMI_REG 0x1203103E
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x03e
 */
typedef union {
  struct {
    UINT8 mgv : 8;
    /* mgv - Bits[7:0], RO, default = 8'b00000000 
       The Device does not burst as a PCI compliant master.
     */
  } Bits;
  UINT8 Data;
} MINGNT_IIO_DFX_GLOBAL_DMI_STRUCT;


/* MAXLAT_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x1003F03F)                                                  */
/*       SKX (0x1003F03F)                                                     */
/* Register default value:              0x00                                  */
#define MAXLAT_IIO_DFX_GLOBAL_DMI_REG 0x1203103F
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x03f
 */
typedef union {
  struct {
    UINT8 mlv : 8;
    /* mlv - Bits[7:0], RO, default = 8'b00000000 
       The Device has no specific requirements for how often it needs to access the PCI 
       bus. 
     */
  } Bits;
  UINT8 Data;
} MAXLAT_IIO_DFX_GLOBAL_DMI_STRUCT;


/* PXPCAP_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x4003F040)                                                  */
/*       SKX (0x4003F040)                                                     */
/* Register default value:              0x00920010                            */
#define PXPCAP_IIO_DFX_GLOBAL_DMI_REG 0x12034040
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x040
 */
typedef union {
  struct {
    UINT32 capability_id : 8;
    /* capability_id - Bits[7:0], RO, default = 8'b00010000 
       Provides the PCI Express capability ID assigned by PCI-SIG.
     */
    UINT32 next_ptr : 8;
    /* next_ptr - Bits[15:8], RO, default = 8'b00000000 
       Pointer to the next capability. Set to 0 to indicate there are no more 
       capability structures. 
     */
    UINT32 capability_version : 4;
    /* capability_version - Bits[19:16], RO, default = 4'b0010 
       PCI Express Capability is Compliant with Version 1.0 of the PCI Express Spec.
       Note:
       This capability structure is not compliant with Versions beyond 1.0, since they 
       require additional capability registers to be reserved. The only purpose for 
       this capability structure is to make enhanced configuration space available. 
       Minimizing the size of this structure is accomplished by reporting version 1.0 
       compliancy and reporting that this is an integrated root port device. As such, 
       only three Dwords of configuration space are required for this structure. 
     */
    UINT32 device_port_type : 4;
    /* device_port_type - Bits[23:20], RO, default = 4'b1001 
       Device type is Root Complex Integrated Endpoint
     */
    UINT32 slot_implemented : 1;
    /* slot_implemented - Bits[24:24], RO, default = 1'b0 
       N/A for integrated endpoints
     */
    UINT32 interrupt_message_number : 5;
    /* interrupt_message_number - Bits[29:25], RO, default = 5'b00000 
       N/A for this device
     */
    UINT32 rsvd : 2;
    /* rsvd - Bits[31:30], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} PXPCAP_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DEVCAP_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x4003F044)                                                  */
/*       SKX (0x4003F044)                                                     */
/* Register default value:              0x00008000                            */
#define DEVCAP_IIO_DFX_GLOBAL_DMI_REG 0x12034044
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x044
 */
typedef union {
  struct {
    UINT32 max_payload_size_supported : 3;
    /* max_payload_size_supported - Bits[2:0], RO, default = 3'b000  */
    UINT32 phantom_functions_supported : 2;
    /* phantom_functions_supported - Bits[4:3], RO, default = 2'b00  */
    UINT32 extended_tag_field_supported : 1;
    /* extended_tag_field_supported - Bits[5:5], RO, default = 1'b0  */
    UINT32 endpoint_l0s_acceptable_latency : 3;
    /* endpoint_l0s_acceptable_latency - Bits[8:6], RO, default = 3'b000  */
    UINT32 endpoint_l1_acceptable_latency : 3;
    /* endpoint_l1_acceptable_latency - Bits[11:9], RO, default = 3'b000  */
    UINT32 attention_button_present : 1;
    /* attention_button_present - Bits[12:12], RO, default = 1'b0  */
    UINT32 attention_indicator_present : 1;
    /* attention_indicator_present - Bits[13:13], RO, default = 1'b0  */
    UINT32 power_indicator_present_on_device : 1;
    /* power_indicator_present_on_device - Bits[14:14], RO, default = 1'b0  */
    UINT32 role_based_error_reporting : 1;
    /* role_based_error_reporting - Bits[15:15], RO, default = 1'b1  */
    UINT32 rsvd_16 : 2;
    /* rsvd_16 - Bits[17:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 captured_slot_power_limit_value : 8;
    /* captured_slot_power_limit_value - Bits[25:18], RO, default = 8'b00000000  */
    UINT32 captured_slot_power_limit_scale : 2;
    /* captured_slot_power_limit_scale - Bits[27:26], RO, default = 2'b00  */
    UINT32 rsvd_28 : 4;
    /* rsvd_28 - Bits[31:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} DEVCAP_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DEVCON_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x2003F048)                                                  */
/*       SKX (0x2003F048)                                                     */
/* Register default value:              0x0000                                */
#define DEVCON_IIO_DFX_GLOBAL_DMI_REG 0x12032048
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * The PCI Express Device Control register controls PCI Express specific 
 * capabilities parameters associated with the device. 
 */
typedef union {
  struct {
    UINT16 correctable_error_reporting_enable : 1;
    /* correctable_error_reporting_enable - Bits[0:0], RO, default = 1'b0 
       N/A for CB DMA
     */
    UINT16 non_fatal_error_reporting_enable : 1;
    /* non_fatal_error_reporting_enable - Bits[1:1], RO, default = 1'b0 
       N/A for CB DMA
     */
    UINT16 fatal_error_reporting_enable : 1;
    /* fatal_error_reporting_enable - Bits[2:2], RO, default = 1'b0 
       N/A for CB DMA
     */
    UINT16 unsupported_request_reporting_enable : 1;
    /* unsupported_request_reporting_enable - Bits[3:3], RO, default = 1'b0 
       N/A for CB DMA
     */
    UINT16 enable_relaxed_ordering : 1;
    /* enable_relaxed_ordering - Bits[4:4], RO, default = 1'b0 
       For most parts, writes from CB DMA are relaxed ordered, except for DMA 
       completion writes. But the fact that CB DMA writes are relaxed ordered is not 
       very useful except when the writes are also non-snooped. If the writes are 
       snooped, relaxed ordering does not provide any particular advantage based on IIO 
       uArch. But when writes are non-snooped, relaxed ordering is required to get good 
       BW and this bit is expected to be set. If this bit is clear, NS writes will get 
       very poor performance. 
     */
    UINT16 max_payload_size : 3;
    /* max_payload_size - Bits[7:5], RO, default = 3'b000 
       N/A for CB DMA
     */
    UINT16 extended_tag_field_enable : 1;
    /* extended_tag_field_enable - Bits[8:8], RO, default = 1'b0  */
    UINT16 phantom_functions_enable : 1;
    /* phantom_functions_enable - Bits[9:9], RO, default = 1'b0 
       Not applicable to CB DMA since it never uses phantom functions as a requester.
     */
    UINT16 auxiliary_power_management_enable : 1;
    /* auxiliary_power_management_enable - Bits[10:10], RO, default = 1'b0 
       Not applicable to CB DMA
     */
    UINT16 enable_no_snoop : 1;
    /* enable_no_snoop - Bits[11:11], RO, default = 1'b0 
       For CB DMA, when this bit is clear, all DMA transactions must be snooped. When 
       set, DMA transactions to main memory can utilize No Snoop optimization under the 
       guidance of the device driver. 
     */
    UINT16 max_read_request_size : 3;
    /* max_read_request_size - Bits[14:12], RO, default = 3'b000 
       N/A to CB DMA since it does not issue tx on PCIE
     */
    UINT16 rsvd : 1;
    /* rsvd - Bits[15:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} DEVCON_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DEVSTS_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x2003F04A)                                                  */
/*       SKX (0x2003F04A)                                                     */
/* Register default value:              0x0000                                */
#define DEVSTS_IIO_DFX_GLOBAL_DMI_REG 0x1203204A
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x04a
 */
typedef union {
  struct {
    UINT16 correctable_error_detected : 1;
    /* correctable_error_detected - Bits[0:0], RO, default = 1'b0  */
    UINT16 non_fatal_error_detected : 1;
    /* non_fatal_error_detected - Bits[1:1], RO, default = 1'b0  */
    UINT16 fatal_error_detected : 1;
    /* fatal_error_detected - Bits[2:2], RO, default = 1'b0  */
    UINT16 unsupported_request_detected : 1;
    /* unsupported_request_detected - Bits[3:3], RO, default = 1'b0  */
    UINT16 aux_power_detected : 1;
    /* aux_power_detected - Bits[4:4], RO, default = 1'b0  */
    UINT16 transactions_pending : 1;
    /* transactions_pending - Bits[5:5], RO, default = 1'b0  */
    UINT16 rsvd : 10;
    /* rsvd - Bits[15:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} DEVSTS_IIO_DFX_GLOBAL_DMI_STRUCT;


/* LNKCAP_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x4003F04C)                                                  */
/*       SKX (0x4003F04C)                                                     */
/* Register default value:              0x003BF400                            */
#define LNKCAP_IIO_DFX_GLOBAL_DMI_REG 0x1203404C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x04c
 */
typedef union {
  struct {
    UINT32 link_speeds_supported : 4;
    /* link_speeds_supported - Bits[3:0], RO, default = 4'b0000  */
    UINT32 maximum_link_width : 6;
    /* maximum_link_width - Bits[9:4], RO, default = 6'b000000  */
    UINT32 active_state_link_pm_support : 2;
    /* active_state_link_pm_support - Bits[11:10], RO, default = 2'b01  */
    UINT32 l0s_exit_latency : 3;
    /* l0s_exit_latency - Bits[14:12], RO, default = 3'b111  */
    UINT32 l1_exit_latency : 3;
    /* l1_exit_latency - Bits[17:15], RO, default = 3'b111  */
    UINT32 clock_power_management : 1;
    /* clock_power_management - Bits[18:18], RO, default = 1'b0  */
    UINT32 surprise_down_error_reporting_capable : 1;
    /* surprise_down_error_reporting_capable - Bits[19:19], RO, default = 1'b1  */
    UINT32 data_link_layer_link_active : 1;
    /* data_link_layer_link_active - Bits[20:20], RO, default = 1'b1  */
    UINT32 link_bandwidth_notification_capability_a : 1;
    /* link_bandwidth_notification_capability_a - Bits[21:21], RO, default = 1'b1  */
    UINT32 rsvd : 2;
    /* rsvd - Bits[23:22], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 port_number : 8;
    /* port_number - Bits[31:24], RO, default = 8'b00000000  */
  } Bits;
  UINT32 Data;
} LNKCAP_IIO_DFX_GLOBAL_DMI_STRUCT;


/* LNKSTS_IIO_DFX_GLOBAL_DMI_REG supported on:                                */
/*       SKX_A0 (0x2003F052)                                                  */
/*       SKX (0x2003F052)                                                     */
/* Register default value:              0x1000                                */
#define LNKSTS_IIO_DFX_GLOBAL_DMI_REG 0x12032052
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x052
 */
typedef union {
  struct {
    UINT16 current_link_speed : 4;
    /* current_link_speed - Bits[3:0], RO, default = 4'b0000  */
    UINT16 negotiated_link_width : 6;
    /* negotiated_link_width - Bits[9:4], RO, default = 6'b000000  */
    UINT16 rsvd : 1;
    /* rsvd - Bits[10:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 link_training : 1;
    /* link_training - Bits[11:11], RO, default = 1'b0  */
    UINT16 slot_clock_configuration : 1;
    /* slot_clock_configuration - Bits[12:12], RO, default = 1'b1  */
    UINT16 data_link_layer_link_active : 1;
    /* data_link_layer_link_active - Bits[13:13], RO, default = 1'b0  */
    UINT16 link_bandwidth_management_status_this : 1;
    /* link_bandwidth_management_status_this - Bits[14:14], RO, default = 1'b0  */
    UINT16 link_autonomous_bandwidth_status_this : 1;
    /* link_autonomous_bandwidth_status_this - Bits[15:15], RO, default = 1'b0  */
  } Bits;
  UINT16 Data;
} LNKSTS_IIO_DFX_GLOBAL_DMI_STRUCT;


/* LNKCAP2_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x4003F06C)                                                  */
/*       SKX (0x4003F06C)                                                     */
/* Register default value:              0x003BF400                            */
#define LNKCAP2_IIO_DFX_GLOBAL_DMI_REG 0x1203406C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x06c
 */
typedef union {
  struct {
    UINT32 link_speeds_supported : 4;
    /* link_speeds_supported - Bits[3:0], RO, default = 4'b0000  */
    UINT32 maximum_link_width : 6;
    /* maximum_link_width - Bits[9:4], RO, default = 6'b000000  */
    UINT32 active_state_link_pm_support : 2;
    /* active_state_link_pm_support - Bits[11:10], RO, default = 2'b01  */
    UINT32 l0s_exit_latency : 3;
    /* l0s_exit_latency - Bits[14:12], RO, default = 3'b111  */
    UINT32 l1_exit_latency : 3;
    /* l1_exit_latency - Bits[17:15], RO, default = 3'b111  */
    UINT32 clock_power_management : 1;
    /* clock_power_management - Bits[18:18], RO, default = 1'b0  */
    UINT32 surprise_down_error_reporting_capable : 1;
    /* surprise_down_error_reporting_capable - Bits[19:19], RO, default = 1'b1  */
    UINT32 data_link_layer_link_active : 1;
    /* data_link_layer_link_active - Bits[20:20], RO, default = 1'b1  */
    UINT32 link_bandwidth_notification_capability_a : 1;
    /* link_bandwidth_notification_capability_a - Bits[21:21], RO, default = 1'b1  */
    UINT32 rsvd : 2;
    /* rsvd - Bits[23:22], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 port_number : 8;
    /* port_number - Bits[31:24], RO, default = 8'b00000000  */
  } Bits;
  UINT32 Data;
} LNKCAP2_IIO_DFX_GLOBAL_DMI_STRUCT;


/* LNKCON2_OLD_IIO_DFX_GLOBAL_DMI_REG supported on:                           */
/*       SKX_A0 (0x2003F070)                                                  */
/*       SKX (0x2003F070)                                                     */
/* Register default value:              0x0000                                */
#define LNKCON2_OLD_IIO_DFX_GLOBAL_DMI_REG 0x12032070
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x070
 */
typedef union {
  struct {
    UINT16 active_state_link_pm_control : 2;
    /* active_state_link_pm_control - Bits[1:0], RO, default = 2'b00  */
    UINT16 rsvd_2 : 1;
    /* rsvd_2 - Bits[2:2], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 read_completion_boundary : 1;
    /* read_completion_boundary - Bits[3:3], RO, default = 1'b0  */
    UINT16 link_disable : 1;
    /* link_disable - Bits[4:4], RO, default = 1'b0  */
    UINT16 retrain_link : 1;
    /* retrain_link - Bits[5:5], RO, default = 1'b0  */
    UINT16 common_clock_configuration : 1;
    /* common_clock_configuration - Bits[6:6], RO, default = 1'b0  */
    UINT16 extended_synch : 1;
    /* extended_synch - Bits[7:7], RO, default = 1'b0  */
    UINT16 enable_clock_power_management_na : 1;
    /* enable_clock_power_management_na - Bits[8:8], RO, default = 1'b0  */
    UINT16 hardware_autonomous_width_disable_ioh : 1;
    /* hardware_autonomous_width_disable_ioh - Bits[9:9], RO, default = 1'b0  */
    UINT16 link_bandwidth_management_interrupt_enable : 1;
    /* link_bandwidth_management_interrupt_enable - Bits[10:10], RO, default = 1'b0  */
    UINT16 link_autonomous_bandwidth_interrupt_enable : 1;
    /* link_autonomous_bandwidth_interrupt_enable - Bits[11:11], RO, default = 1'b0  */
    UINT16 rsvd_12 : 4;
    /* rsvd_12 - Bits[15:12], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} LNKCON2_OLD_IIO_DFX_GLOBAL_DMI_STRUCT;


/* LNKSTS2_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x2003F072)                                                  */
/*       SKX (0x2003F072)                                                     */
/* Register default value:              0x1000                                */
#define LNKSTS2_IIO_DFX_GLOBAL_DMI_REG 0x12032072
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x072
 */
typedef union {
  struct {
    UINT16 current_link_speed : 4;
    /* current_link_speed - Bits[3:0], RO, default = 4'b0000  */
    UINT16 negotiated_link_width : 6;
    /* negotiated_link_width - Bits[9:4], RO, default = 6'b000000  */
    UINT16 rsvd : 1;
    /* rsvd - Bits[10:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 link_training : 1;
    /* link_training - Bits[11:11], RO, default = 1'b0  */
    UINT16 slot_clock_configuration : 1;
    /* slot_clock_configuration - Bits[12:12], RO, default = 1'b1  */
    UINT16 data_link_layer_link_active : 1;
    /* data_link_layer_link_active - Bits[13:13], RO, default = 1'b0  */
    UINT16 link_bandwidth_management_status_this : 1;
    /* link_bandwidth_management_status_this - Bits[14:14], RO, default = 1'b0  */
    UINT16 link_autonomous_bandwidth_status_this : 1;
    /* link_autonomous_bandwidth_status_this - Bits[15:15], RO, default = 1'b0  */
  } Bits;
  UINT16 Data;
} LNKSTS2_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SLTCAP2_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x4003F074)                                                  */
/*       SKX (0x4003F074)                                                     */
/* Register default value:              0x00000000                            */
#define SLTCAP2_IIO_DFX_GLOBAL_DMI_REG 0x12034074
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x074
 */
typedef union {
  struct {
    UINT32 attention_button_present : 1;
    /* attention_button_present - Bits[0:0], RO, default = 1'b0  */
    UINT32 power_controller_present : 1;
    /* power_controller_present - Bits[1:1], RO, default = 1'b0  */
    UINT32 mrl_sensor_present : 1;
    /* mrl_sensor_present - Bits[2:2], RO, default = 1'b0  */
    UINT32 attention_indicator_present : 1;
    /* attention_indicator_present - Bits[3:3], RO, default = 1'b0  */
    UINT32 power_indicator_present : 1;
    /* power_indicator_present - Bits[4:4], RO, default = 1'b0  */
    UINT32 hotplug_surprise : 1;
    /* hotplug_surprise - Bits[5:5], RO, default = 1'b0  */
    UINT32 hotplug_capable : 1;
    /* hotplug_capable - Bits[6:6], RO, default = 1'b0  */
    UINT32 slot_power_limit_value : 8;
    /* slot_power_limit_value - Bits[14:7], RO, default = 8'b00000000  */
    UINT32 slot_power_limit_scale : 2;
    /* slot_power_limit_scale - Bits[16:15], RO, default = 2'b00  */
    UINT32 electromechanical_interlock_present : 1;
    /* electromechanical_interlock_present - Bits[17:17], RO, default = 1'b0  */
    UINT32 command_complete_not_capable : 1;
    /* command_complete_not_capable - Bits[18:18], RO, default = 1'b0  */
    UINT32 physical_slot_number : 13;
    /* physical_slot_number - Bits[31:19], RO, default = 13'b0000000000000  */
  } Bits;
  UINT32 Data;
} SLTCAP2_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SLTSTS2_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x2003F07A)                                                  */
/*       SKX (0x2003F07A)                                                     */
/* Register default value:              0x0000                                */
#define SLTSTS2_IIO_DFX_GLOBAL_DMI_REG 0x1203207A
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x07a
 */
typedef union {
  struct {
    UINT16 attention_button_pressed : 1;
    /* attention_button_pressed - Bits[0:0], RO, default = 1'b0  */
    UINT16 power_fault_detected : 1;
    /* power_fault_detected - Bits[1:1], RO, default = 1'b0  */
    UINT16 mrl_sensor_changed : 1;
    /* mrl_sensor_changed - Bits[2:2], RO, default = 1'b0  */
    UINT16 presence_detect_changed : 1;
    /* presence_detect_changed - Bits[3:3], RO, default = 1'b0  */
    UINT16 command_completed : 1;
    /* command_completed - Bits[4:4], RO, default = 1'b0  */
    UINT16 mrl_sensor_state : 1;
    /* mrl_sensor_state - Bits[5:5], RO, default = 1'b0  */
    UINT16 presence_detect_state : 1;
    /* presence_detect_state - Bits[6:6], RO, default = 1'b0  */
    UINT16 electromechanical_latch_status : 1;
    /* electromechanical_latch_status - Bits[7:7], RO, default = 1'b0  */
    UINT16 data_link_layer_state_changed : 1;
    /* data_link_layer_state_changed - Bits[8:8], RO, default = 1'b0  */
    UINT16 rsvd : 7;
    /* rsvd - Bits[15:9], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} SLTSTS2_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSCNTRL0_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F110)                                                  */
/*       SKX (0x4003F110)                                                     */
/* Register default value:              0x00000000                            */
#define DBGBUSCNTRL0_IIO_DFX_GLOBAL_DMI_REG 0x12034110
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x110
 */
typedef union {
  struct {
    UINT32 ln0delay : 3;
    /* ln0delay - Bits[2:0], RWS_L, default = 3'b000  */
    UINT32 ln1delay : 3;
    /* ln1delay - Bits[5:3], RWS_L, default = 3'b000  */
    UINT32 ln2delay : 3;
    /* ln2delay - Bits[8:6], RWS_L, default = 3'b000  */
    UINT32 ln3delay : 3;
    /* ln3delay - Bits[11:9], RWS_L, default = 3'b000  */
    UINT32 ln4delay : 3;
    /* ln4delay - Bits[14:12], RWS_L, default = 3'b000  */
    UINT32 ln5delay : 3;
    /* ln5delay - Bits[17:15], RWS_L, default = 3'b000  */
    UINT32 ln6delay : 3;
    /* ln6delay - Bits[20:18], RWS_L, default = 3'b000  */
    UINT32 ln7delay : 3;
    /* ln7delay - Bits[23:21], RWS_L, default = 3'b000  */
    UINT32 ln8delay : 3;
    /* ln8delay - Bits[26:24], RWS_L, default = 3'b000  */
    UINT32 rsvd : 5;
    /* rsvd - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} DBGBUSCNTRL0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSCNTRL1_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x2003F114)                                                  */
/*       SKX (0x2003F114)                                                     */
/* Register default value:              0x0001                                */
#define DBGBUSCNTRL1_IIO_DFX_GLOBAL_DMI_REG 0x12032114
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x114
 */
typedef union {
  struct {
    UINT16 dbgbusmatchand : 1;
    /* dbgbusmatchand - Bits[0:0], RWS_L, default = 1'b1  */
    UINT16 matchinv : 1;
    /* matchinv - Bits[1:1], RWS_L, default = 1'b0  */
    UINT16 seqtrigsel : 1;
    /* seqtrigsel - Bits[2:2], RWS_L, default = 1'b0  */
    UINT16 rsvd : 5;
    /* rsvd - Bits[7:3], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 dbssen : 1;
    /* dbssen - Bits[8:8], RWS_L, default = 1'b0  */
    UINT16 dbssmode : 1;
    /* dbssmode - Bits[9:9], RWS_L, default = 1'b0  */
    UINT16 dbssclr : 1;
    /* dbssclr - Bits[10:10], RWS_L, default = 1'b0  */
    UINT16 dbsstrig : 3;
    /* dbsstrig - Bits[13:11], RWS_L, default = 3'b000  */
    UINT16 dbssacc : 1;
    /* dbssacc - Bits[14:14], RWS_L, default = 1'b0  */
    UINT16 dbgbusen : 1;
    /* dbgbusen - Bits[15:15], RWS_L, default = 1'b0  */
  } Bits;
  UINT16 Data;
} DBGBUSCNTRL1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSCNTRL2_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x2003F118)                                                  */
/*       SKX (0x2003F118)                                                     */
/* Register default value:              0x0000                                */
#define DBGBUSCNTRL2_IIO_DFX_GLOBAL_DMI_REG 0x12032118
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x118
 */
typedef union {
  struct {
    UINT16 seqen : 1;
    /* seqen - Bits[0:0], RWS_L, default = 1'b0  */
    UINT16 seqst1en : 1;
    /* seqst1en - Bits[1:1], RWS_L, default = 1'b0  */
    UINT16 seqst2en : 1;
    /* seqst2en - Bits[2:2], RWS_L, default = 1'b0  */
    UINT16 rsvd : 1;
    /* rsvd - Bits[3:3], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 seqtmoutval : 12;
    /* seqtmoutval - Bits[15:4], RWS_L, default = 12'b000000000000  */
  } Bits;
  UINT16 Data;
} DBGBUSCNTRL2_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DFX_HVM_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x4003F11C)                                                  */
/*       SKX (0x4003F11C)                                                     */
/* Register default value:              0x000A0808                            */
#define DFX_HVM_IIO_DFX_GLOBAL_DMI_REG 0x1203411C
/* Struct format extracted from XML file SKX_A0\0.7.7.CFG.xml.
 * generated by critter 07_7_0x11c
 */
typedef union {
  struct {
    UINT32 short_rst : 1;
    /* short_rst - Bits[0:0], RW_L, default = 1'b0 
       Enables short reset for HVM testing. Counters are shortened in PCIe.
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 digital_loopback : 1;
    /* digital_loopback - Bits[1:1], RW_L, default = 1'b0 
       Enables digital loopback for HVM testing
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 en_pllclkdistoff : 1;
    /* en_pllclkdistoff - Bits[2:2], RW_L, default = 1'b0 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 cfg_invalid_dev_mmio_chk_dis : 1;
    /* cfg_invalid_dev_mmio_chk_dis - Bits[3:3], RW_L, default = 1'b1 
       Disables reads to invalid device/functions returning -1 and writes from being 
       dropped. When disabled, all writes will work if they hit an existing register 
       and reads return 0 unless hit an existing register. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 msgchan_gateclkdis : 1;
    /* msgchan_gateclkdis - Bits[4:4], RW_L, default = 1'b0 
       Disables clock gating for the message channel
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 cfg_clkgate_dis : 1;
    /* cfg_clkgate_dis - Bits[5:5], RW_L, default = 1'b0 
       Disables clock gating on the config logic.
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 cfg_fastpath_dis : 1;
    /* cfg_fastpath_dis - Bits[6:6], RW_L, default = 1'b0 
       Disables fast path only on config ring. When enabled, decodes config transaction 
       and will send it down just the fast path if able. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 reutmbpenable : 1;
    /* reutmbpenable - Bits[7:7], RW_L, default = 1'b0 
       MBP to REUT Enable
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 free_delay_count : 4;
    /* free_delay_count - Bits[11:8], RW_L, default = 4'b1000 
       Provides backpressure on message channel to separate back to back transactions. 
       Set to zero to disable. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 dis_msgchan_pmrsblock : 1;
    /* dis_msgchan_pmrsblock - Bits[12:12], RW_L, default = 1'b0 
       If 0, the PMRsBlock blocks traffic to the message channel bgf.
       If 1, the PMRsBlock does not traffic to the message channel bgf, and message 
       channel requests can be lost during GV flows. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 rsvd_13 : 1;
    /* rsvd_13 - Bits[13:13], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 spare_cfg : 2;
    /* spare_cfg - Bits[15:14], RW_L, default = 2'b00 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 disable_msgchan_msi_ordering : 1;
    /* disable_msgchan_msi_ordering - Bits[16:16], RW_L, default = 1'b0 
       When 0, msg channel completions for requestors selected by msi_request_ord will 
       be ordered to message signalled interrupts.  
          When 1, msg channel completions for requestors selected by msi_request_ord 
       will not be ordered to message signalled interrupts. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 msi_ordered_request : 1;
    /* msi_ordered_request - Bits[17:17], RW_L, default = 1'b1 
       When 0, all message channel operations with the IA bit set will be orderable to 
       MSIs. 
          When 1, only message channel operations with a ubox srcid with the IA bit set 
       will be orderable to MSIs. 
       	  disable_msgchan_msi_ordering must be 0 for this CSR to have an effect.
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 msi_injection : 1;
    /* msi_injection - Bits[18:18], RW_L, default = 1'b0 
       When 1, enable short duration injections to the msg channel logic as if an MSI 
       were pending. When 0, no injection is enabled. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 block_msgchan_bgf : 1;
    /* block_msgchan_bgf - Bits[19:19], RW_L, default = 1'b1 
       When 1, the IIMI msg channel wrapper blocks incoming msg channel requests at the 
       BGF and at the router. 
          When 0, the IIMI msg channel wrapper blocks incoming msg channel requests at 
       the router only. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 aggressive_back_pressure : 1;
    /* aggressive_back_pressure - Bits[20:20], RW_L, default = 1'b0 
       We use this CSR to aggressively backpressure messages from Router to EP.
     */
    UINT32 rtr2ep_p_np_arb_en : 1;
    /* rtr2ep_p_np_arb_en - Bits[21:21], RW_L, default = 1'b0 
       We use this CSR to enable arbitration of p and np messages from router to EP.
     */
    UINT32 rtr2ep_p_np_arb_force_dis : 1;
    /* rtr2ep_p_np_arb_force_dis - Bits[22:22], RW_L, default = 1'b0 
       We use this CSR to enable arbitration of p and np messages from router to EP.
     */
    UINT32 rsvd_23 : 9;
    /* rsvd_23 - Bits[31:23], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} DFX_HVM_IIO_DFX_GLOBAL_DMI_A0_STRUCT;

/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x11c
 */
typedef union {
  struct {
    UINT32 short_rst : 1;
    /* short_rst - Bits[0:0], RW_L, default = 1'b0 
       Enables short reset for HVM testing. Counters are shortened in PCIe.
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 digital_loopback : 1;
    /* digital_loopback - Bits[1:1], RW_L, default = 1'b0 
       Enables digital loopback for HVM testing
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 en_pllclkdistoff : 1;
    /* en_pllclkdistoff - Bits[2:2], RW_L, default = 1'b0 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 cfg_invalid_dev_mmio_chk_dis : 1;
    /* cfg_invalid_dev_mmio_chk_dis - Bits[3:3], RW_L, default = 1'b1 
       Disables reads to invalid device/functions returning -1 and writes from being 
       dropped. When disabled, all writes will work if they hit an existing register 
       and reads return 0 unless hit an existing register. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 msgchan_gateclkdis : 1;
    /* msgchan_gateclkdis - Bits[4:4], RW_L, default = 1'b0 
       Disables clock gating for the message channel
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 cfg_clkgate_dis : 1;
    /* cfg_clkgate_dis - Bits[5:5], RW_L, default = 1'b0 
       Disables clock gating on the config logic.
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 cfg_fastpath_dis : 1;
    /* cfg_fastpath_dis - Bits[6:6], RW_L, default = 1'b0 
       Disables fast path only on config ring. When enabled, decodes config transaction 
       and will send it down just the fast path if able. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 reutmbpenable : 1;
    /* reutmbpenable - Bits[7:7], RW_L, default = 1'b0 
       MBP to REUT Enable
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 free_delay_count : 4;
    /* free_delay_count - Bits[11:8], RW_L, default = 4'b1000 
       Provides backpressure on message channel to separate back to back transactions. 
       Set to zero to disable. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 dis_msgchan_pmrsblock : 1;
    /* dis_msgchan_pmrsblock - Bits[12:12], RW_L, default = 1'b0 
       If 0, the PMRsBlock blocks traffic to the message channel bgf.
       If 1, the PMRsBlock does not traffic to the message channel bgf, and message 
       channel requests can be lost during GV flows. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 rsvd_13 : 1;
    /* rsvd_13 - Bits[13:13], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 spare_cfg0 : 1;
    /* spare_cfg0 - Bits[14:14], RW_L, default = 1'b0 
       
       0 - enable fix for 304741
       1 - disable fix for 304741
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 spare_cfg1 : 1;
    /* spare_cfg1 - Bits[15:15], RW_L, default = 1'b0 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 disable_msgchan_msi_ordering : 1;
    /* disable_msgchan_msi_ordering - Bits[16:16], RW_L, default = 1'b0 
       When 0, msg channel completions for requestors selected by msi_request_ord will 
       be ordered to message signalled interrupts.  
          When 1, msg channel completions for requestors selected by msi_request_ord 
       will not be ordered to message signalled interrupts. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 msi_ordered_request : 1;
    /* msi_ordered_request - Bits[17:17], RW_L, default = 1'b1 
       When 0, all message channel operations with the IA bit set will be orderable to 
       MSIs. 
          When 1, only message channel operations with a ubox srcid with the IA bit set 
       will be orderable to MSIs. 
       	  disable_msgchan_msi_ordering must be 0 for this CSR to have an effect.
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 msi_injection : 1;
    /* msi_injection - Bits[18:18], RW_L, default = 1'b0 
       When 1, enable short duration injections to the msg channel logic as if an MSI 
       were pending. When 0, no injection is enabled. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 block_msgchan_bgf : 1;
    /* block_msgchan_bgf - Bits[19:19], RW_L, default = 1'b1 
       When 1, the IIMI msg channel wrapper blocks incoming msg channel requests at the 
       BGF and at the router. 
          When 0, the IIMI msg channel wrapper blocks incoming msg channel requests at 
       the router only. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 aggressive_back_pressure : 1;
    /* aggressive_back_pressure - Bits[20:20], RW_L, default = 1'b0 
       We use this CSR to aggressively backpressure messages from Router to EP.
     */
    UINT32 rtr2ep_p_np_arb_en : 1;
    /* rtr2ep_p_np_arb_en - Bits[21:21], RW_L, default = 1'b0 
       We use this CSR to enable arbitration of p and np messages from router to EP.
     */
    UINT32 rtr2ep_p_np_arb_force_dis : 1;
    /* rtr2ep_p_np_arb_force_dis - Bits[22:22], RW_L, default = 1'b0 
       We use this CSR to enable arbitration of p and np messages from router to EP.
     */
    UINT32 rsvd_23 : 9;
    /* rsvd_23 - Bits[31:23], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} DFX_HVM_IIO_DFX_GLOBAL_DMI_STRUCT;



/* DBGBUSCNTRL3_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F138)                                                  */
/*       SKX (0x4003F138)                                                     */
/* Register default value:              0x00000000                            */
#define DBGBUSCNTRL3_IIO_DFX_GLOBAL_DMI_REG 0x12034138
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x138
 */
typedef union {
  struct {
    UINT32 st0mask : 9;
    /* st0mask - Bits[8:0], RWS_L, default = 9'b000000000  */
    UINT32 st1mask : 9;
    /* st1mask - Bits[17:9], RWS_L, default = 9'b000000000  */
    UINT32 st2mask : 9;
    /* st2mask - Bits[26:18], RWS_L, default = 9'b000000000  */
    UINT32 rsvd : 5;
    /* rsvd - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} DBGBUSCNTRL3_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSCNTRL4_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F13C)                                                  */
/*       SKX (0x4003F13C)                                                     */
/* Register default value:              0x00000000                            */
#define DBGBUSCNTRL4_IIO_DFX_GLOBAL_DMI_REG 0x1203413C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x13c
 */
typedef union {
  struct {
    UINT32 ln0delay : 1;
    /* ln0delay - Bits[0:0], RWS_L, default = 1'b0  */
    UINT32 ln1delay : 1;
    /* ln1delay - Bits[1:1], RWS_L, default = 1'b0  */
    UINT32 ln2delay : 1;
    /* ln2delay - Bits[2:2], RWS_L, default = 1'b0  */
    UINT32 ln3delay : 1;
    /* ln3delay - Bits[3:3], RWS_L, default = 1'b0  */
    UINT32 ln4delay : 1;
    /* ln4delay - Bits[4:4], RWS_L, default = 1'b0  */
    UINT32 ln5delay : 1;
    /* ln5delay - Bits[5:5], RWS_L, default = 1'b0  */
    UINT32 ln6delay : 1;
    /* ln6delay - Bits[6:6], RWS_L, default = 1'b0  */
    UINT32 ln7delay : 1;
    /* ln7delay - Bits[7:7], RWS_L, default = 1'b0  */
    UINT32 ln8delay : 1;
    /* ln8delay - Bits[8:8], RWS_L, default = 1'b0  */
    UINT32 slice0_filt_sel : 1;
    /* slice0_filt_sel - Bits[9:9], RWS_L, default = 1'b0 
       slice0 filter type
       0 : bitwise OR lane matcher output
       1 : bitwise AND lane matcher output
     */
    UINT32 slice1_filt_sel : 1;
    /* slice1_filt_sel - Bits[10:10], RWS_L, default = 1'b0 
       slice1 filter type
       0 : bitwise OR lane matcher output
       1 : bitwise AND lane matcher output
     */
    UINT32 slice0_mmenab : 9;
    /* slice0_mmenab - Bits[19:11], RWS_L, default = 9'b000000000 
       slice0 match enables for dbgbus lanes 8-0
     */
    UINT32 slice1_mmenab : 9;
    /* slice1_mmenab - Bits[28:20], RWS_L, default = 9'b000000000 
       slice1 match enables for dbgbus lanes 8-0
     */
    UINT32 rsvd : 3;
    /* rsvd - Bits[31:29], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} DBGBUSCNTRL4_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_EINJ0_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x2003F158)                                                  */
/*       SKX (0x2003F158)                                                     */
/* Register default value:              0x00CA                                */
#define IIMI_EINJ0_IIO_DFX_GLOBAL_DMI_REG 0x12032158
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x158
 */
typedef union {
  struct {
    UINT16 start_sel : 4;
    /* start_sel - Bits[3:0], RWS_LV, default = 4'b1010  */
    UINT16 stop_sel : 4;
    /* stop_sel - Bits[7:4], RWS_LV, default = 4'b1100  */
    UINT16 rvser : 8;
    /* rvser - Bits[15:8], RW, default = 8'b00000000  */
  } Bits;
  UINT16 Data;
} IIMI_EINJ0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_EINJ1_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x2003F15A)                                                  */
/*       SKX (0x2003F15A)                                                     */
/* Register default value:              0x00CA                                */
#define IIMI_EINJ1_IIO_DFX_GLOBAL_DMI_REG 0x1203215A
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x15a
 */
typedef union {
  struct {
    UINT16 start_sel : 4;
    /* start_sel - Bits[3:0], RWS_LV, default = 4'b1010  */
    UINT16 stop_sel : 4;
    /* stop_sel - Bits[7:4], RWS_LV, default = 4'b1100  */
    UINT16 rvser : 8;
    /* rvser - Bits[15:8], RW, default = 8'b00000000  */
  } Bits;
  UINT16 Data;
} IIMI_EINJ1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_DBGMKRCRL_IIO_DFX_GLOBAL_DMI_REG supported on:                        */
/*       SKX_A0 (0x2003F15C)                                                  */
/*       SKX (0x2003F15C)                                                     */
/* Register default value:              0x0000                                */
#define IIMI_DBGMKRCRL_IIO_DFX_GLOBAL_DMI_REG 0x1203215C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x15c
 */
typedef union {
  struct {
    UINT16 mrken : 1;
    /* mrken - Bits[0:0], RWS_LV, default = 1'b0  */
    UINT16 rvser : 15;
    /* rvser - Bits[15:1], RW, default = 15'b000000000000000  */
  } Bits;
  UINT16 Data;
} IIMI_DBGMKRCRL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ERR_IIO_DFX_GLOBAL_DMI_REG supported on:                              */
/*       SKX_A0 (0x2003F164)                                                  */
/*       SKX (0x2003F164)                                                     */
/* Register default value:              0x0000                                */
#define IIMI_ERR_IIO_DFX_GLOBAL_DMI_REG 0x12032164
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * This register allows debug signals to be observable on the Error[2:0] pins.
 */
typedef union {
  struct {
    UINT16 rsvd_0 : 3;
    /* rsvd_0 - Bits[2:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 iiodbg_disable : 3;
    /* iiodbg_disable - Bits[5:3], RWS_L, default = 3'b000 
       
       Notes:
       Locked by RSPLCK
     */
    UINT16 rsvd_6 : 3;
    /* rsvd_6 - Bits[8:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 dbg_sel : 1;
    /* dbg_sel - Bits[9:9], RWS_L, default = 1'b0 
       
       Notes;
       Locked by RSPLCK
     */
    UINT16 rvser : 6;
    /* rvser - Bits[15:10], RWS_L, default = 6'b000000 
       
       Notes:
       Locked by RSPLCK
     */
  } Bits;
  UINT16 Data;
} IIMI_ERR_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IMI_DBGPMON_IIO_DFX_GLOBAL_DMI_REG supported on:                           */
/*       SKX_A0 (0x4003F188)                                                  */
/*       SKX (0x4003F188)                                                     */
/* Register default value:              0x00000000                            */
#define IMI_DBGPMON_IIO_DFX_GLOBAL_DMI_REG 0x12034188
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Enable special PMON debug modes for IIMI PMON counters
 */
typedef union {
  struct {
    UINT32 pto_source : 4;
    /* pto_source - Bits[3:0], RWS, default = 4'b0000 
       
                 1 bit per PMON counter:
                 0 - PTO signalled on a counter increment
                 1 - PTO signalled on a counter overflow
               
     */
    UINT32 clr_en : 4;
    /* clr_en - Bits[7:4], RW, default = 4'b0000 
       
                 1 bit per PMON counter. When set, the corresponding PMON counter is 
       cleared whenever the counter selected by clr_source increments 
               
     */
    UINT32 clr_source : 8;
    /* clr_source - Bits[15:8], RW, default = 8'h00 
       
                 2 bits per PMON counter. Selects which PMON counter to use for 
       triggering the clearing of this counter. 
                 For example, if clr_source[3:2] = 3, then PMON counter 1 will be 
       cleared whenever PMON counter 3 increments. 
               
     */
    UINT32 count_en : 4;
    /* count_en - Bits[19:16], RW, default = 4'b0000 
       
                 1 bit per PMON counter. When set, the corresponding PMON counter is 
       enabled only if the counter selected by count_source is non-zero 
               
     */
    UINT32 count_source : 8;
    /* count_source - Bits[27:20], RW, default = 8'h00 
       
                 2 bits per PMON counter. Selects which PMON counter to use for 
       enabling this counter. 
                 For example, if count_source[3:2] = 3, then PMON counter 1 will be 
       enabled only if PMON counter 3 is non-zero. 
               
     */
    UINT32 rsvd : 4;
    /* rsvd - Bits[31:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IMI_DBGPMON_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSMATCHLOW_IIO_DFX_GLOBAL_DMI_REG supported on:                        */
/*       SKX_A0 (0x4003F18C)                                                  */
/*       SKX (0x4003F18C)                                                     */
/* Register default value:              0x00000000                            */
#define DBGBUSMATCHLOW_IIO_DFX_GLOBAL_DMI_REG 0x1203418C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x18c
 */
typedef union {
  struct {
    UINT32 dbgbusmatchlow : 32;
    /* dbgbusmatchlow - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} DBGBUSMATCHLOW_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSMATCHMID_IIO_DFX_GLOBAL_DMI_REG supported on:                        */
/*       SKX_A0 (0x4003F190)                                                  */
/*       SKX (0x4003F190)                                                     */
/* Register default value:              0x00000000                            */
#define DBGBUSMATCHMID_IIO_DFX_GLOBAL_DMI_REG 0x12034190
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x190
 */
typedef union {
  struct {
    UINT32 dbgbusmatchmid : 32;
    /* dbgbusmatchmid - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} DBGBUSMATCHMID_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSMATCHHIGH_IIO_DFX_GLOBAL_DMI_REG supported on:                       */
/*       SKX_A0 (0x1003F194)                                                  */
/*       SKX (0x1003F194)                                                     */
/* Register default value:              0x00                                  */
#define DBGBUSMATCHHIGH_IIO_DFX_GLOBAL_DMI_REG 0x12031194
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x194
 */
typedef union {
  struct {
    UINT8 dbgbusmatchhigh : 8;
    /* dbgbusmatchhigh - Bits[7:0], RWS_L, default = 8'b00000000  */
  } Bits;
  UINT8 Data;
} DBGBUSMATCHHIGH_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSMASKLOW_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F198)                                                  */
/*       SKX (0x4003F198)                                                     */
/* Register default value:              0x00000000                            */
#define DBGBUSMASKLOW_IIO_DFX_GLOBAL_DMI_REG 0x12034198
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x198
 */
typedef union {
  struct {
    UINT32 dbgbusmasklow : 32;
    /* dbgbusmasklow - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} DBGBUSMASKLOW_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSMASKMID_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F19C)                                                  */
/*       SKX (0x4003F19C)                                                     */
/* Register default value:              0x00000000                            */
#define DBGBUSMASKMID_IIO_DFX_GLOBAL_DMI_REG 0x1203419C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x19c
 */
typedef union {
  struct {
    UINT32 dbgbusmaskmid : 32;
    /* dbgbusmaskmid - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} DBGBUSMASKMID_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBGBUSMASKHIGH_IIO_DFX_GLOBAL_DMI_REG supported on:                        */
/*       SKX_A0 (0x1003F1A0)                                                  */
/*       SKX (0x1003F1A0)                                                     */
/* Register default value:              0x00                                  */
#define DBGBUSMASKHIGH_IIO_DFX_GLOBAL_DMI_REG 0x120311A0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1a0
 */
typedef union {
  struct {
    UINT8 dbgbusmaskhigh : 8;
    /* dbgbusmaskhigh - Bits[7:0], RWS_L, default = 8'b00000000  */
  } Bits;
  UINT8 Data;
} DBGBUSMASKHIGH_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASCCONTROL_IIO_DFX_GLOBAL_DMI_REG supported on:                       */
/*       SKX_A0 (0x2003F1A4)                                                  */
/*       SKX (0x2003F1A4)                                                     */
/* Register default value:              0x0000                                */
#define IIMI_ASCCONTROL_IIO_DFX_GLOBAL_DMI_REG 0x120321A4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1a4
 */
typedef union {
  struct {
    UINT16 asc0state : 1;
    /* asc0state - Bits[0:0], RWS_LV, default = 1'b0  */
    UINT16 asc0en : 1;
    /* asc0en - Bits[1:1], RWS_L, default = 1'b0  */
    UINT16 asc0mode : 2;
    /* asc0mode - Bits[3:2], RWS_L, default = 2'b00  */
    UINT16 asc1state : 1;
    /* asc1state - Bits[4:4], RWS_LV, default = 1'b0  */
    UINT16 asc1en : 1;
    /* asc1en - Bits[5:5], RWS_L, default = 1'b0  */
    UINT16 asc1mode : 1;
    /* asc1mode - Bits[6:6], RWS_L, default = 1'b0  */
    UINT16 mbpqual : 1;
    /* mbpqual - Bits[7:7], RWS_L, default = 1'b0  */
    UINT16 mbpsel : 1;
    /* mbpsel - Bits[8:8], RWS_L, default = 1'b0  */
    UINT16 asc0clronstop : 1;
    /* asc0clronstop - Bits[9:9], RWS_L, default = 1'b0  */
    UINT16 asc1clronstop : 1;
    /* asc1clronstop - Bits[10:10], RWS_L, default = 1'b0  */
    UINT16 asc2state : 1;
    /* asc2state - Bits[11:11], RWS_LV, default = 1'b0  */
    UINT16 asc2en : 1;
    /* asc2en - Bits[12:12], RWS_L, default = 1'b0  */
    UINT16 asc2mode : 1;
    /* asc2mode - Bits[13:13], RWS_L, default = 1'b0  */
    UINT16 asc2clronstop : 1;
    /* asc2clronstop - Bits[14:14], RWS_L, default = 1'b0  */
    UINT16 rsvd : 1;
    /* rsvd - Bits[15:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} IIMI_ASCCONTROL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASC0CNTR_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F1A8)                                                  */
/*       SKX (0x4003F1A8)                                                     */
/* Register default value:              0x00000000                            */
#define IIMI_ASC0CNTR_IIO_DFX_GLOBAL_DMI_REG 0x120341A8
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1a8
 */
typedef union {
  struct {
    UINT32 ascval : 32;
    /* ascval - Bits[31:0], RWS_LV, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} IIMI_ASC0CNTR_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASC1CNTR_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F1AC)                                                  */
/*       SKX (0x4003F1AC)                                                     */
/* Register default value:              0x00000000                            */
#define IIMI_ASC1CNTR_IIO_DFX_GLOBAL_DMI_REG 0x120341AC
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1ac
 */
typedef union {
  struct {
    UINT32 ascval : 32;
    /* ascval - Bits[31:0], RWS_LV, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} IIMI_ASC1CNTR_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASC0LDVALLO_IIO_DFX_GLOBAL_DMI_REG supported on:                      */
/*       SKX_A0 (0x4003F1B0)                                                  */
/*       SKX (0x4003F1B0)                                                     */
/* Register default value:              0x00000000                            */
#define IIMI_ASC0LDVALLO_IIO_DFX_GLOBAL_DMI_REG 0x120341B0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1b0
 */
typedef union {
  struct {
    UINT32 ldlowval : 32;
    /* ldlowval - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} IIMI_ASC0LDVALLO_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASC0LDVALHI_IIO_DFX_GLOBAL_DMI_REG supported on:                      */
/*       SKX_A0 (0x4003F1B4)                                                  */
/*       SKX (0x4003F1B4)                                                     */
/* Register default value:              0x00000000                            */
#define IIMI_ASC0LDVALHI_IIO_DFX_GLOBAL_DMI_REG 0x120341B4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1b4
 */
typedef union {
  struct {
    UINT32 ldhival : 32;
    /* ldhival - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} IIMI_ASC0LDVALHI_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASC1LDVALLO_IIO_DFX_GLOBAL_DMI_REG supported on:                      */
/*       SKX_A0 (0x4003F1B8)                                                  */
/*       SKX (0x4003F1B8)                                                     */
/* Register default value:              0x00000000                            */
#define IIMI_ASC1LDVALLO_IIO_DFX_GLOBAL_DMI_REG 0x120341B8
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1b8
 */
typedef union {
  struct {
    UINT32 ldlowval : 32;
    /* ldlowval - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} IIMI_ASC1LDVALLO_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASC1LDVALHI_IIO_DFX_GLOBAL_DMI_REG supported on:                      */
/*       SKX_A0 (0x4003F1BC)                                                  */
/*       SKX (0x4003F1BC)                                                     */
/* Register default value:              0x00000000                            */
#define IIMI_ASC1LDVALHI_IIO_DFX_GLOBAL_DMI_REG 0x120341BC
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1bc
 */
typedef union {
  struct {
    UINT32 ldhival : 32;
    /* ldhival - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} IIMI_ASC1LDVALHI_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASC2CNTR_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F1C0)                                                  */
/*       SKX (0x4003F1C0)                                                     */
/* Register default value:              0x00000000                            */
#define IIMI_ASC2CNTR_IIO_DFX_GLOBAL_DMI_REG 0x120341C0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1ac
 */
typedef union {
  struct {
    UINT32 ascval : 32;
    /* ascval - Bits[31:0], RWS_LV, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} IIMI_ASC2CNTR_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASC2LDVALLO_IIO_DFX_GLOBAL_DMI_REG supported on:                      */
/*       SKX_A0 (0x4003F1C4)                                                  */
/*       SKX (0x4003F1C4)                                                     */
/* Register default value:              0x00000000                            */
#define IIMI_ASC2LDVALLO_IIO_DFX_GLOBAL_DMI_REG 0x120341C4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1b8
 */
typedef union {
  struct {
    UINT32 ldlowval : 32;
    /* ldlowval - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} IIMI_ASC2LDVALLO_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIMI_ASC2LDVALHI_IIO_DFX_GLOBAL_DMI_REG supported on:                      */
/*       SKX_A0 (0x4003F1C8)                                                  */
/*       SKX (0x4003F1C8)                                                     */
/* Register default value:              0x00000000                            */
#define IIMI_ASC2LDVALHI_IIO_DFX_GLOBAL_DMI_REG 0x120341C8
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x1bc
 */
typedef union {
  struct {
    UINT32 ldhival : 32;
    /* ldhival - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} IIMI_ASC2LDVALHI_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TSWCTL0_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x4003F30C)                                                  */
/*       SKX (0x4003F30C)                                                     */
/* Register default value:              0x04000000                            */
#define TSWCTL0_IIO_DFX_GLOBAL_DMI_REG 0x1203430C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x30c
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 2;
    /* rsvd_0 - Bits[1:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 block_multiple_err_for_same_ent : 1;
    /* block_multiple_err_for_same_ent - Bits[2:2], RWS_O, default = 1'b0  */
    UINT32 me_disable : 1;
    /* me_disable - Bits[3:3], RWS_O, default = 1'b0  */
    UINT32 allow_ib_mmio_cfg : 1;
    /* allow_ib_mmio_cfg - Bits[4:4], RWS_O, default = 1'b0  */
    UINT32 ignore_acs_p2p_ma_lpbk : 1;
    /* ignore_acs_p2p_ma_lpbk - Bits[5:5], RW_O, default = 1'b0  */
    UINT32 shutdown_intack_cpl_abrt_cfg : 1;
    /* shutdown_intack_cpl_abrt_cfg - Bits[6:6], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 csr_vlw_throttle_cpl_disable : 1;
    /* csr_vlw_throttle_cpl_disable - Bits[7:7], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_8 : 5;
    /* rsvd_8 - Bits[12:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 disable_jsm_lock_throttle : 1;
    /* disable_jsm_lock_throttle - Bits[13:13], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 me_eoibroad_en : 1;
    /* me_eoibroad_en - Bits[14:14], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_15 : 1;
    /* rsvd_15 - Bits[15:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 csi1_present : 1;
    /* csi1_present - Bits[16:16], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 msi_pend_cpl_disable : 1;
    /* msi_pend_cpl_disable - Bits[17:17], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 convert_ob_ca_to_ma : 1;
    /* convert_ob_ca_to_ma - Bits[18:18], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 convert_ib_ca_to_ma : 1;
    /* convert_ib_ca_to_ma - Bits[19:19], RW_L, default = 1'b0 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 rsvd_20 : 5;
    /* rsvd_20 - Bits[24:20], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 lock_oldmode : 1;
    /* lock_oldmode - Bits[25:25], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 lock_target_np : 1;
    /* lock_target_np - Bits[26:26], RW_L, default = 1'b1 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_27 : 1;
    /* rsvd_27 - Bits[27:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 suppress_mem_rd_lock : 1;
    /* suppress_mem_rd_lock - Bits[28:28], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_29 : 1;
    /* rsvd_29 - Bits[29:29], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 csr_dfx_dis_vphold_ignore_all : 1;
    /* csr_dfx_dis_vphold_ignore_all - Bits[30:30], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_31 : 1;
    /* rsvd_31 - Bits[31:31], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TSWCTL0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TSWDBGERRSTDIS1_IIO_DFX_GLOBAL_DMI_REG supported on:                       */
/*       SKX_A0 (0x4003F35C)                                                  */
/*       SKX (0x4003F35C)                                                     */
/* Register default value:              0x00000000                            */
#define TSWDBGERRSTDIS1_IIO_DFX_GLOBAL_DMI_REG 0x1203435C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x35c
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 14;
    /* rsvd_0 - Bits[13:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dmipcieib_underflowdis : 5;
    /* dmipcieib_underflowdis - Bits[18:14], RWS_L, default = 5'b00000 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 dmipcieib_overflowdis : 5;
    /* dmipcieib_overflowdis - Bits[23:19], RWS_L, default = 5'b00000 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_24 : 8;
    /* rsvd_24 - Bits[31:24], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TSWDBGERRSTDIS1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TSWEXTEND_IIO_DFX_GLOBAL_DMI_REG supported on:                             */
/*       SKX_A0 (0x4003F368)                                                  */
/*       SKX (0x4003F368)                                                     */
/* Register default value:              0x00000000                            */
#define TSWEXTEND_IIO_DFX_GLOBAL_DMI_REG 0x12034368
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x368
 */
typedef union {
  struct {
    UINT32 dmipcieib_underflowdis : 1;
    /* dmipcieib_underflowdis - Bits[0:0], RWS_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 dmipcieib_overflowdis : 1;
    /* dmipcieib_overflowdis - Bits[1:1], RWS_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd : 30;
    /* rsvd - Bits[31:2], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TSWEXTEND_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SWDBGCTL0_IIO_DFX_GLOBAL_DMI_REG supported on:                             */
/*       SKX_A0 (0x4003F3C4)                                                  */
/*       SKX (0x4003F3C4)                                                     */
/* Register default value:              0x00000000                            */
#define SWDBGCTL0_IIO_DFX_GLOBAL_DMI_REG 0x120343C4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x3c4
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 12;
    /* rsvd_0 - Bits[11:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 set_dmi_cfg_type0 : 1;
    /* set_dmi_cfg_type0 - Bits[12:12], RW_L, default = 1'b0 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 rsvd_13 : 13;
    /* rsvd_13 - Bits[25:13], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dis_dmi_vt_pf : 1;
    /* dis_dmi_vt_pf - Bits[26:26], RW_L, default = 1'b0 
       Turns off prefetches from DMI (VC1/VCp/VC0/VCm). Set this to 1 if you like 
       forward progress on VC1. 
       VC0 and VCp should be able to handle VTd prefetches with the HSX VTd TLB 
       management changes. 
       Notes:
       Locked by RSPLCK
     */
    UINT32 dfr_en_intremap : 1;
    /* dfr_en_intremap - Bits[27:27], RW_L, default = 1'b0  */
    UINT32 dis_jsm_squash : 1;
    /* dis_jsm_squash - Bits[28:28], RW_L, default = 1'b0  */
    UINT32 dis_msi_ord_ecn152 : 1;
    /* dis_msi_ord_ecn152 - Bits[29:29], RW_L, default = 1'b0  */
    UINT32 en_one_active_msi : 1;
    /* en_one_active_msi - Bits[30:30], RW_L, default = 1'b0  */
    UINT32 rsvd_31 : 1;
    /* rsvd_31 - Bits[31:31], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} SWDBGCTL0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SPARE_SWNORTH_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F3E0)                                                  */
/*       SKX (0x4003F3E0)                                                     */
/* Register default value:              0x00000240                            */
#define SPARE_SWNORTH_IIO_DFX_GLOBAL_DMI_REG 0x120343E0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x3e0
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 1;
    /* rsvd_0 - Bits[0:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 knl_smpt_enable : 1;
    /* knl_smpt_enable - Bits[1:1], RW_L, default = 1'b0  */
    UINT32 rsvd_2 : 4;
    /* rsvd_2 - Bits[5:2], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 cpl_coalesce_type : 2;
    /* cpl_coalesce_type - Bits[7:6], RW_L, default = 2'b01  */
    UINT32 rsvd_8 : 1;
    /* rsvd_8 - Bits[8:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 en_hsx_req_id_translation : 1;
    /* en_hsx_req_id_translation - Bits[9:9], RW_L, default = 1'b1  */
    UINT32 rsvd_10 : 22;
    /* rsvd_10 - Bits[31:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} SPARE_SWNORTH_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DBG_MUX40_IIO_DFX_GLOBAL_DMI_REG supported on:                             */
/*       SKX_A0 (0x4003F4F0)                                                  */
/*       SKX (0x4003F4F0)                                                     */
/* Register default value:              0x00000000                            */
#define DBG_MUX40_IIO_DFX_GLOBAL_DMI_REG 0x120344F0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x4f0
 */
typedef union {
  struct {
    UINT32 rsvd : 31;
    /* rsvd - Bits[30:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 pribar45_hit_dbgrng_sel : 1;
    /* pribar45_hit_dbgrng_sel - Bits[31:31], RWS_L, default = 1'b0 
       
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} DBG_MUX40_IIO_DFX_GLOBAL_DMI_STRUCT;


/* PSMI_HVM_GLOBAL_REG_IIO_DFX_GLOBAL_DMI_REG supported on:                   */
/*       SKX_A0 (0x4003F500)                                                  */
/*       SKX (0x4003F500)                                                     */
/* Register default value:              0x80000018                            */
#define PSMI_HVM_GLOBAL_REG_IIO_DFX_GLOBAL_DMI_REG 0x12034500
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x500
 */
typedef union {
  struct {
    UINT32 psmi_capture_mode : 1;
    /* psmi_capture_mode - Bits[0:0], RW_L, default = 1'b0 
       Notes:
       Locked by SPARELCK
     */
    UINT32 psmi_replay_mode : 1;
    /* psmi_replay_mode - Bits[1:1], RW_L, default = 1'b0 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 psmi_wipe_disable : 1;
    /* psmi_wipe_disable - Bits[2:2], RW_L, default = 1'b0 
       If this bit is set, then the PSMI Wipe signal is gated in the IIO cluster.
       Notes:
       Locked by SPARELCK
     */
    UINT32 psmi_ebinit_seperation : 4;
    /* psmi_ebinit_seperation - Bits[6:3], RW_L, default = 4'b0011 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 ltssm_hvm_mode : 1;
    /* ltssm_hvm_mode - Bits[7:7], RW_L, default = 1'b0 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 rsvd_8 : 1;
    /* rsvd_8 - Bits[8:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 psmi_mode : 1;
    /* psmi_mode - Bits[9:9], RW_L, default = 1'b0 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 psmi_timeout : 6;
    /* psmi_timeout - Bits[15:10], RW_L, default = 6'b000000 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 psmi_idle_timeout : 8;
    /* psmi_idle_timeout - Bits[23:16], RW_L, default = 8'b00000000 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 csr_psmi_ignore_lo2phy_empty : 1;
    /* csr_psmi_ignore_lo2phy_empty - Bits[24:24], RW_L, default = 1'b0 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 psmi_delay_reg : 3;
    /* psmi_delay_reg - Bits[27:25], RW_L, default = 3'b000 
       
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 rsvd_28 : 1;
    /* rsvd_28 - Bits[28:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 csr_en_send_1stskptime_innfts_inreclck : 1;
    /* csr_en_send_1stskptime_innfts_inreclck - Bits[29:29], RW_L, default = 1'b0 
       
       Notes:
       Locked by SPARELCK
     */
    UINT32 rsvd_30 : 1;
    /* rsvd_30 - Bits[30:30], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 enable_pwrmtr : 1;
    /* enable_pwrmtr - Bits[31:31], RWS, default = 1'b1 
       1
     */
  } Bits;
  UINT32 Data;
} PSMI_HVM_GLOBAL_REG_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIO_DFX_LCK_CTL_CSR_IIO_DFX_GLOBAL_DMI_REG supported on:                   */
/*       SKX_A0 (0x2003F504)                                                  */
/*       SKX (0x2003F504)                                                     */
/* Register default value:              0x0000                                */
#define IIO_DFX_LCK_CTL_CSR_IIO_DFX_GLOBAL_DMI_REG 0x12032504
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x504
 */
typedef union {
  struct {
    UINT16 dbgbuslck : 1;
    /* dbgbuslck - Bits[0:0], RW_O, default = 1'b0  */
    UINT16 asclck : 1;
    /* asclck - Bits[1:1], RW_O, default = 1'b0  */
    UINT16 noalck : 1;
    /* noalck - Bits[2:2], RW_O, default = 1'b0  */
    UINT16 rsplck : 1;
    /* rsplck - Bits[3:3], RW_O, default = 1'b0  */
    UINT16 sparelck : 1;
    /* sparelck - Bits[4:4], RW_O, default = 1'b0  */
    UINT16 reutenglck : 1;
    /* reutenglck - Bits[5:5], RW_LB, default = 1'b0 
       This bit locks accesses to the REUT engine control registers when set. Reads are 
       allowed even when the registers are locked. 
       This is AND'd with the similarly named bit in the IIO_DFX_LCK_CTL uCR register.
       BIOS must write this register after reset. This bit is RW-LB instead of RW-O 
       because this needs to be unlocked as part of the hot add flow. 
     */
    UINT16 reuteplck : 1;
    /* reuteplck - Bits[6:6], RW_O, default = 1'b0 
       This bit locks accesses to the REUT Electrical Parameter control registers when 
       set. 
       This is AND'd with the similarly named bit in the IIO_DFX_LCK_CTL uCR register.
       BIOS must write this register after reset.
     */
    UINT16 dfxuniphylck : 1;
    /* dfxuniphylck - Bits[7:7], RW_O, default = 1'b0  */
    UINT16 ntblck : 1;
    /* ntblck - Bits[8:8], RW_O, default = 1'b0  */
    UINT16 genviral_lck : 1;
    /* genviral_lck - Bits[9:9], RWS_LB, default = 1'b0  */
    UINT16 rsvd : 6;
    /* rsvd - Bits[15:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} IIO_DFX_LCK_CTL_CSR_IIO_DFX_GLOBAL_DMI_STRUCT;








/* PSMI_HVM_GLOBAL_STATUS_REG_IIO_DFX_GLOBAL_DMI_REG supported on:            */
/*       SKX_A0 (0x4003F520)                                                  */
/*       SKX (0x4003F520)                                                     */
/* Register default value:              0x00000000                            */
#define PSMI_HVM_GLOBAL_STATUS_REG_IIO_DFX_GLOBAL_DMI_REG 0x12034520
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x520
 */
typedef union {
  struct {
    UINT32 psmi_rcvrlock_err : 1;
    /* psmi_rcvrlock_err - Bits[0:0], RO_V, default = 1'b0  */
    UINT32 psmi_rcvrcfg_err : 1;
    /* psmi_rcvrcfg_err - Bits[1:1], RO_V, default = 1'b0  */
    UINT32 psmi_idle_err : 1;
    /* psmi_idle_err - Bits[2:2], RO_V, default = 1'b0  */
    UINT32 rsvd : 29;
    /* rsvd - Bits[31:3], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} PSMI_HVM_GLOBAL_STATUS_REG_IIO_DFX_GLOBAL_DMI_STRUCT;


/* STAGGER_GLOBAL_REG_IIO_DFX_GLOBAL_DMI_REG supported on:                    */
/*       SKX_A0 (0x4003F524)                                                  */
/*       SKX (0x4003F524)                                                     */
/* Register default value:              0x00000002                            */
#define STAGGER_GLOBAL_REG_IIO_DFX_GLOBAL_DMI_REG 0x12034524
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x524
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 1;
    /* rsvd_0 - Bits[0:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 tx_stgr_sqcntr : 4;
    /* tx_stgr_sqcntr - Bits[4:1], RW_L, default = 4'b0001  */
    UINT32 rsvd_5 : 27;
    /* rsvd_5 - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} STAGGER_GLOBAL_REG_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPSMIC_0_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F58C)                                                  */
/*       SKX (0x4003F58C)                                                     */
/* Register default value:              0x00000000                            */
#define CSIPSMIC_0_IIO_DFX_GLOBAL_DMI_REG 0x1203458C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x58c
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 16;
    /* rsvd_0 - Bits[15:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 interrupt_data_vector : 8;
    /* interrupt_data_vector - Bits[23:16], RW, default = 8'b00000000  */
    UINT32 rsvd_24 : 8;
    /* rsvd_24 - Bits[31:24], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} CSIPSMIC_0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPSMIC_1_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F590)                                                  */
/*       SKX (0x4003F590)                                                     */
/* Register default value:              0xFFFFFFFF                            */
#define CSIPSMIC_1_IIO_DFX_GLOBAL_DMI_REG 0x12034590
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x590
 */
typedef union {
  struct {
    UINT32 destination_id : 32;
    /* destination_id - Bits[31:0], RW_L, default = 32'b11111111111111111111111111111111  */
  } Bits;
  UINT32 Data;
} CSIPSMIC_1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPNMIC_1_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F594)                                                  */
/*       SKX (0x4003F594)                                                     */
/* Register default value:              0xFFFFFFFF                            */
#define CSIPNMIC_1_IIO_DFX_GLOBAL_DMI_REG 0x12034594
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x594
 */
typedef union {
  struct {
    UINT32 destination_id : 32;
    /* destination_id - Bits[31:0], RW_L, default = 32'b11111111111111111111111111111111  */
  } Bits;
  UINT32 Data;
} CSIPNMIC_1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPMCAC_0_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F598)                                                  */
/*       SKX (0x4003F598)                                                     */
/* Register default value:              0x00FF0000                            */
#define CSIPMCAC_0_IIO_DFX_GLOBAL_DMI_REG 0x12034598
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x598
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 16;
    /* rsvd_0 - Bits[15:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 interrupt_data_vector : 8;
    /* interrupt_data_vector - Bits[23:16], RW, default = 8'b11111111  */
    UINT32 rsvd_24 : 8;
    /* rsvd_24 - Bits[31:24], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} CSIPMCAC_0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPMCAC_1_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F59C)                                                  */
/*       SKX (0x4003F59C)                                                     */
/* Register default value:              0xFFFFFFFF                            */
#define CSIPMCAC_1_IIO_DFX_GLOBAL_DMI_REG 0x1203459C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x59c
 */
typedef union {
  struct {
    UINT32 destination_id : 32;
    /* destination_id - Bits[31:0], RW_L, default = 32'b11111111111111111111111111111111  */
  } Bits;
  UINT32 Data;
} CSIPMCAC_1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPINITC_1_IIO_DFX_GLOBAL_DMI_REG supported on:                           */
/*       SKX_A0 (0x4003F5A0)                                                  */
/*       SKX (0x4003F5A0)                                                     */
/* Register default value:              0xFFFFFFFF                            */
#define CSIPINITC_1_IIO_DFX_GLOBAL_DMI_REG 0x120345A0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x5a0
 */
typedef union {
  struct {
    UINT32 destination_id : 32;
    /* destination_id - Bits[31:0], RW_L, default = 32'b11111111111111111111111111111111  */
  } Bits;
  UINT32 Data;
} CSIPINITC_1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CC_SPARE_ADDL_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F640)                                                  */
/*       SKX (0x4003F640)                                                     */
/* Register default value:              0x00000003                            */
#define CC_SPARE_ADDL_IIO_DFX_GLOBAL_DMI_REG 0x12034640
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x640
 */
typedef union {
  struct {
    UINT32 cc_spare_addl_bits : 32;
    /* cc_spare_addl_bits - Bits[31:0], RWS_L, default = 32'b00000000000000000000000000000011  */
  } Bits;
  UINT32 Data;
} CC_SPARE_ADDL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* UNIPHY_FUSE_CTRL_IIO_DFX_GLOBAL_DMI_REG supported on:                      */
/*       SKX_A0 (0x1003F654)                                                  */
/*       SKX (0x1003F654)                                                     */
/* Register default value:              0x00                                  */
#define UNIPHY_FUSE_CTRL_IIO_DFX_GLOBAL_DMI_REG 0x12031654
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x654
 */
typedef union {
  struct {
    UINT8 csr_override : 1;
    /* csr_override - Bits[0:0], RWS_L, default = 1'b0  */
    UINT8 rsvd : 7;
    /* rsvd - Bits[7:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT8 Data;
} UNIPHY_FUSE_CTRL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* DFX_NTL_CTL_IIO_DFX_GLOBAL_DMI_REG supported on:                           */
/*       SKX_A0 (0x4003F660)                                                  */
/*       SKX (0x4003F660)                                                     */
/* Register default value:              0x00000000                            */
#define DFX_NTL_CTL_IIO_DFX_GLOBAL_DMI_REG 0x12034660
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x660
 */
typedef union {
  struct {
    UINT32 rx_pullhi_n_even : 1;
    /* rx_pullhi_n_even - Bits[0:0], RWS_L, default = 1'b0  */
    UINT32 rx_pullhi_n_odd : 1;
    /* rx_pullhi_n_odd - Bits[1:1], RWS_L, default = 1'b0  */
    UINT32 rx_pullhi_p_even : 1;
    /* rx_pullhi_p_even - Bits[2:2], RWS_L, default = 1'b0  */
    UINT32 rx_pullhi_p_odd : 1;
    /* rx_pullhi_p_odd - Bits[3:3], RWS_L, default = 1'b0  */
    UINT32 tx_pullhi_n_even : 1;
    /* tx_pullhi_n_even - Bits[4:4], RWS_L, default = 1'b0  */
    UINT32 tx_pullhi_n_odd : 1;
    /* tx_pullhi_n_odd - Bits[5:5], RWS_L, default = 1'b0  */
    UINT32 tx_pullhi_p_even : 1;
    /* tx_pullhi_p_even - Bits[6:6], RWS_L, default = 1'b0  */
    UINT32 tx_pullhi_p_odd : 1;
    /* tx_pullhi_p_odd - Bits[7:7], RWS_L, default = 1'b0  */
    UINT32 ntl_capt_mode : 2;
    /* ntl_capt_mode - Bits[9:8], RWS_L, default = 2'b00  */
    UINT32 rsvd_10 : 6;
    /* rsvd_10 - Bits[15:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 ntl_ovrd_rx_pullhi_n_val : 2;
    /* ntl_ovrd_rx_pullhi_n_val - Bits[17:16], RWS_L, default = 2'b00  */
    UINT32 ntl_ovrd_rx_pullhi_p_val : 2;
    /* ntl_ovrd_rx_pullhi_p_val - Bits[19:18], RWS_L, default = 2'b00  */
    UINT32 ntl_ovrd_tx_pullhi_n_val : 2;
    /* ntl_ovrd_tx_pullhi_n_val - Bits[21:20], RWS_L, default = 2'b00  */
    UINT32 ntl_ovrd_tx_pullhi_p_val : 2;
    /* ntl_ovrd_tx_pullhi_p_val - Bits[23:22], RWS_L, default = 2'b00  */
    UINT32 rsvd_24 : 8;
    /* rsvd_24 - Bits[31:24], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} DFX_NTL_CTL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIO_IIOS_CLK_GATE_OVR_IIO_DFX_GLOBAL_DMI_REG supported on:                 */
/*       SKX_A0 (0x1003F664)                                                  */
/*       SKX (0x1003F664)                                                     */
/* Register default value:              0x00                                  */
#define IIO_IIOS_CLK_GATE_OVR_IIO_DFX_GLOBAL_DMI_REG 0x12031664
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x664
 */
typedef union {
  struct {
    UINT8 cfg_clk_ovr : 1;
    /* cfg_clk_ovr - Bits[0:0], RWS_L, default = 1'b0  */
    UINT8 rsvd : 7;
    /* rsvd - Bits[7:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT8 Data;
} IIO_IIOS_CLK_GATE_OVR_IIO_DFX_GLOBAL_DMI_STRUCT;


/* IIO_DFX_L1_CLK_GATING_REG_IIO_DFX_GLOBAL_DMI_REG supported on:             */
/*       SKX_A0 (0x4003F668)                                                  */
/*       SKX (0x4003F668)                                                     */
/* Register default value:              0x00000000                            */
#define IIO_DFX_L1_CLK_GATING_REG_IIO_DFX_GLOBAL_DMI_REG 0x12034668
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x668
 */
typedef union {
  struct {
    UINT32 blkl1_exit_en : 1;
    /* blkl1_exit_en - Bits[0:0], RW, default = 1'b0  */
    UINT32 rsvd : 31;
    /* rsvd - Bits[31:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IIO_DFX_L1_CLK_GATING_REG_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TSWCTL3_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x4003F670)                                                  */
/*       SKX (0x4003F670)                                                     */
/* Register default value:              0x00000200                            */
#define TSWCTL3_IIO_DFX_GLOBAL_DMI_REG 0x12034670
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x670
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 5;
    /* rsvd_0 - Bits[4:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 csr_dfx_disable_lt_pcie_fix : 1;
    /* csr_dfx_disable_lt_pcie_fix - Bits[5:5], RW_L, default = 1'b0  */
    UINT32 rsvd_6 : 1;
    /* rsvd_6 - Bits[6:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 csr_en_vc1_ma : 1;
    /* csr_en_vc1_ma - Bits[7:7], RW_L, default = 1'b0 
       For IVT only, which allow Vcm but not vc1 
     */
    UINT32 csr_en_ds_lt_in_vira : 1;
    /* csr_en_ds_lt_in_vira - Bits[8:8], RW_L, default = 1'b0 
       Enable outbound address from processing downstream lt transactions during vira
       Locked by RSPLCK
     */
    UINT32 csr_en_ds_msg_in_vira : 1;
    /* csr_en_ds_msg_in_vira - Bits[9:9], RW_L, default = 1'b1 
       Enable outbound address from processing downstream msg transactions during vira
       Locked by RSPLCK
     */
    UINT32 csr_en_ds_cfg_in_vira : 1;
    /* csr_en_ds_cfg_in_vira - Bits[10:10], RW_L, default = 1'b0 
       Enable outbound address from processing downstream cfg transactions during vira
       Locked by RSPLCK
     */
    UINT32 cfg_mabt_hint_disable : 1;
    /* cfg_mabt_hint_disable - Bits[11:11], RW_L, default = 1'b0 
       Disable outbound address from processing MABT Hint for downstream config 
       transactions initiated from coherent interface. 
       Locked by RSPLCK
     */
    UINT32 lt_mabt_hint_disable : 1;
    /* lt_mabt_hint_disable - Bits[12:12], RW_L, default = 1'b0 
       Disable CSI FIFO controller from propagating the MABT_HINT for LT transactions.
       Locked by RSPLCK
     */
    UINT32 lt_mabt_errlog_enable : 1;
    /* lt_mabt_errlog_enable - Bits[13:13], RW_L, default = 1'b0 
       Enable error logging for LT cycles that were MABT'ed
       Locked by RSPLCK
     */
    UINT32 rsvd_14 : 1;
    /* rsvd_14 - Bits[14:14], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 csr_disable_bar_access_in_viral : 1;
    /* csr_disable_bar_access_in_viral - Bits[15:15], RW_L, default = 1'b0 
       Disable MMIO access during viral
       Locked by RSPLCK
     */
    UINT32 rsvd_16 : 3;
    /* rsvd_16 - Bits[18:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 irp_mabt_hint_disable : 1;
    /* irp_mabt_hint_disable - Bits[19:19], RW_L, default = 1'b0 
       Ignore the master abort hint from IRP on outbound requests.
       Locked by RSPLCK
     */
    UINT32 rsvd_20 : 12;
    /* rsvd_20 - Bits[31:20], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TSWCTL3_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TCSNAPSHOTCTL_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F674)                                                  */
/*       SKX (0x4003F674)                                                     */
/* Register default value:              0x00000000                            */
#define TCSNAPSHOTCTL_IIO_DFX_GLOBAL_DMI_REG 0x12034674
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Control for reading out the TC tracker contents into the itcsnapshotdata and 
 * otcsnapshotdata registers 
 */
typedef union {
  struct {
    UINT32 automode : 1;
    /* automode - Bits[0:0], RW_L, default = 1'b0 
       
       When set to 0, software must write the busy bit along with the new address to 
       initiate a new read of the corresponding array. 
       When set to 1, each read of itcsnapshotdata or otcsnapshotdata will increment 
       the respective address and initiate a new read by setting itc_busy or otc_busy. 
                
     */
    UINT32 itc_busy : 1;
    /* itc_busy - Bits[1:1], RW_LV, default = 1'b0 
       When written to 1, hardware will look up the array entry specified by itc_addr 
       and load it into itcsnapshotdata. Once the data has been loaded, hardware will 
       clear itc_busy. 
     */
    UINT32 otc_busy : 1;
    /* otc_busy - Bits[2:2], RW_LV, default = 1'b0 
       When written to 1, hardware will look up the array entry specified by otc_addr 
       and load it into otcsnapshotdata. Once the data has been loaded, hardware will 
       clear otc_busy. 
     */
    UINT32 itc_err : 1;
    /* itc_err - Bits[3:3], RW_LV, default = 1'b0 
       Indicates that itcsnapshotdata was read before the data corresponding to 
       itc_addr was loaded 
     */
    UINT32 otc_err : 1;
    /* otc_err - Bits[4:4], RW_LV, default = 1'b0 
       Indicates that otcsnapshotdata was read before the data corresponding to 
       otc_addr was loaded 
     */
    UINT32 itc_addr : 5;
    /* itc_addr - Bits[9:5], RW_LV, default = 1'b0 
       Bits 4:3 - FC of the tracker array to read. Bits 2:0 - channel of the tracker 
       array to read. 
     */
    UINT32 otc_addr : 5;
    /* otc_addr - Bits[14:10], RW_LV, default = 1'b0 
       Bits 4:3 - FC of the tracker array to read. Bits 2:0 - channel of the tracker 
       array to read. 
     */
    UINT32 array_sel : 4;
    /* array_sel - Bits[18:15], RW_L, default = 1'b0 
       ID of the array to read:
       0-6: reserved
       7: vtd_counts and vtd_f_head_ptrs
       8: hdr_counts and hdr_f_head_ptrs
       9: hdr_f_amap
       10: hdr_pf_amap
       11: reserved
       12: tail_ptrs, hdr_pf_head_ptrs, and vtd_pf_head_ptrs
       13: hdr_f_misc and hdr_pf_misc
       14: OrderState
       15: reserved
                
     */
    UINT32 chunk_sel : 2;
    /* chunk_sel - Bits[20:19], RW_LV, default = 1'b0 
       Chunk of the array to read (for arrays that are bigger than 32 bits per entry):
       0-13: not applicable
       14: OrderState
          2'b00:
             p_empty,
             p_np_in,
             p_c_in,
             np_inc_done,
             c_inc_done,
             count_p_np[9:0],
             count_p_c[9:0],
             np_head_p_bit,
             c_head_p_bit,
             prh_head_done,
             prh_head_ncp2pb,
             prh_head_hdr_crdt
          2'b01:
             prh_head_ptr[7:0],
             prh_2nd_ptr[7:0],
             prh_f_ptr[7:0],
             prh_f_2nd_ptr[7:0]
          2'b10:
             prh_f_ptr_vld,
             p_dest_change,
             prh_f_pf_ack,
             prh_tail_ptr[7:0],
             prh_empty,
             prh_all_f_done,
             prh_all_f_done_destchange,
             prh_all_f_done_so,
             p_block,
             p_head_order[1:0]
       15: not applicable
                
     */
    UINT32 rsvd : 11;
    /* rsvd - Bits[31:21], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TCSNAPSHOTCTL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCSNAPSHOTDATA_IIO_DFX_GLOBAL_DMI_REG supported on:                       */
/*       SKX_A0 (0x4003F678)                                                  */
/*       SKX (0x4003F678)                                                     */
/* Register default value:              0x00000000                            */
#define ITCSNAPSHOTDATA_IIO_DFX_GLOBAL_DMI_REG 0x12034678
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Data captured from the ITC array specified by tcsnapshotctl
 */
typedef union {
  struct {
    UINT32 data : 32;
    /* data - Bits[31:0], RW_LV, default = 1'b0  */
  } Bits;
  UINT32 Data;
} ITCSNAPSHOTDATA_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCSNAPSHOTDATA_IIO_DFX_GLOBAL_DMI_REG supported on:                       */
/*       SKX_A0 (0x4003F67C)                                                  */
/*       SKX (0x4003F67C)                                                     */
/* Register default value:              0x00000000                            */
#define OTCSNAPSHOTDATA_IIO_DFX_GLOBAL_DMI_REG 0x1203467C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Data captured from the OTC array specified by tcsnapshotctl
 */
typedef union {
  struct {
    UINT32 data : 32;
    /* data - Bits[31:0], RW_LV, default = 1'b0  */
  } Bits;
  UINT32 Data;
} OTCSNAPSHOTDATA_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TSWCTL1_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x4003F68C)                                                  */
/*       SKX (0x4003F68C)                                                     */
/* Register default value:              0x00000200                            */
#define TSWCTL1_IIO_DFX_GLOBAL_DMI_REG 0x1203468C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x308
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 9;
    /* rsvd_0 - Bits[8:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 gpe_routing_id : 1;
    /* gpe_routing_id - Bits[9:9], RW_L, default = 1'b1 
       This CSR is to select the MSB routing ID used for Assert/Deassert GPE VDMs sent 
       to the DMI interface. 
       '1' : r[2:0] = "100"
       '0' : r[2:0] = "000"
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_10 : 22;
    /* rsvd_10 - Bits[31:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TSWCTL1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TSWCTL2_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x4003F690)                                                  */
/*       SKX (0x4003F690)                                                     */
/* Register default value:              0x00100000                            */
#define TSWCTL2_IIO_DFX_GLOBAL_DMI_REG 0x12034690
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x30c
 */
typedef union {
  struct {
    UINT32 fastpath_disabled : 1;
    /* fastpath_disabled - Bits[0:0], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_1 : 9;
    /* rsvd_1 - Bits[9:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 global_nosnoop_disable : 1;
    /* global_nosnoop_disable - Bits[10:10], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_11 : 9;
    /* rsvd_11 - Bits[19:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 override_routing_method : 1;
    /* override_routing_method - Bits[20:20], RW_L, default = 1'b1 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_21 : 7;
    /* rsvd_21 - Bits[27:21], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dis_abort_fdfe_range : 1;
    /* dis_abort_fdfe_range - Bits[28:28], RW_L, default = 1'b0 
       
       Disable hardware abort of requests to the 0xFD00-0xFEDF and 0xFEF0-0xFFFF 
       ranges. 
       Locked by RSPLCK
     */
    UINT32 rsvd_29 : 3;
    /* rsvd_29 - Bits[31:29], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TSWCTL2_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TSWCTL4_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x4003F694)                                                  */
/*       SKX (0x4003F694)                                                     */
/* Register default value:              0x00000001                            */
#define TSWCTL4_IIO_DFX_GLOBAL_DMI_REG 0x12034694
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x678
 */
typedef union {
  struct {
    UINT32 csr_jkt_enable_vtdcorruption_fix : 1;
    /* csr_jkt_enable_vtdcorruption_fix - Bits[0:0], RW_L, default = 1'b1 
       
       Notes:
       Locked by RSPLCK
     */
    UINT32 rsvd_1 : 3;
    /* rsvd_1 - Bits[3:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 csr_dfx_disable_fail_link_ma : 1;
    /* csr_dfx_disable_fail_link_ma - Bits[4:4], RW_L, default = 1'b0  */
    UINT32 rsvd_5 : 27;
    /* rsvd_5 - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TSWCTL4_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TSWCTL5_IIO_DFX_GLOBAL_DMI_REG supported on:                               */
/*       SKX_A0 (0x4003F698)                                                  */
/*       SKX (0x4003F698)                                                     */
/* Register default value:              0x00000001                            */
#define TSWCTL5_IIO_DFX_GLOBAL_DMI_REG 0x12034698
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x674
 */
typedef union {
  struct {
    UINT32 en_tph_with_ro : 1;
    /* en_tph_with_ro - Bits[0:0], RW_L, default = 1'b1 
       Enable TPH hints to propagate for RO=1 writes.
     */
    UINT32 force_no_snp_on_vc1_vcm : 1;
    /* force_no_snp_on_vc1_vcm - Bits[1:1], RW_L, default = 1'b0 
       Force VC1 and VCm traffic to be nonsnoop.
     */
    UINT32 vc1m_ns_disable : 1;
    /* vc1m_ns_disable - Bits[2:2], RW_L, default = 1'b0 
       Prevent VC1 and VCm traffic from being nonsnoop.
     */
    UINT32 disable_ma_ats_inv_msg : 1;
    /* disable_ma_ats_inv_msg - Bits[3:3], RW_L, default = 1'b0 
       Disable Master Abort of ATS invalidation message when it is not confined p2p 
       request. 
     */
    UINT32 csr_dbg_tswctl5 : 28;
    /* csr_dbg_tswctl5 - Bits[31:4], RW_L, default = 28'b0000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} TSWCTL5_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SWDBGCTL1_IIO_DFX_GLOBAL_DMI_REG supported on:                             */
/*       SKX_A0 (0x4003F69C)                                                  */
/*       SKX (0x4003F69C)                                                     */
/* Register default value:              0x00800000                            */
#define SWDBGCTL1_IIO_DFX_GLOBAL_DMI_REG 0x1203469C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x3c4
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 23;
    /* rsvd_0 - Bits[22:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 enable_irp_set : 1;
    /* enable_irp_set - Bits[23:23], RW_L, default = 1'b1  */
    UINT32 rsvd_24 : 1;
    /* rsvd_24 - Bits[24:24], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 vtpf_delay_dis : 1;
    /* vtpf_delay_dis - Bits[25:25], RW_L, default = 1'b0  */
    UINT32 rsvd_26 : 5;
    /* rsvd_26 - Bits[30:26], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dis_hsx_hsd_4571261_fix : 1;
    /* dis_hsx_hsd_4571261_fix - Bits[31:31], RW_L, default = 1'b0  */
  } Bits;
  UINT32 Data;
} SWDBGCTL1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* LOCK_CTRL_IIO_DFX_GLOBAL_DMI_REG supported on:                             */
/*       SKX_A0 (0x2003F6A0)                                                  */
/*       SKX (0x2003F6A0)                                                     */
/* Register default value:              0x0000                                */
#define LOCK_CTRL_IIO_DFX_GLOBAL_DMI_REG 0x120326A0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x3c0
 */
typedef union {
  struct {
    UINT16 allow_lock_vtd_vc0p : 1;
    /* allow_lock_vtd_vc0p - Bits[0:0], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT16 allow_lock_vtd_vc1 : 1;
    /* allow_lock_vtd_vc1 - Bits[1:1], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT16 quiesce_done_dmisrc : 1;
    /* quiesce_done_dmisrc - Bits[2:2], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT16 quiesce_done_csisrc_np : 1;
    /* quiesce_done_csisrc_np - Bits[3:3], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT16 quiesce_done_csisrc_p : 1;
    /* quiesce_done_csisrc_p - Bits[4:4], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT16 allow_msi : 1;
    /* allow_msi - Bits[5:5], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT16 set_msi_quiesce : 1;
    /* set_msi_quiesce - Bits[6:6], RW_L, default = 1'b0 
       
       Notes:
       Locked by RSPLCK
     */
    UINT16 rsvd : 9;
    /* rsvd - Bits[15:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} LOCK_CTRL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SPARE_SWEAST_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F6A4)                                                  */
/*       SKX (0x4003F6A4)                                                     */
/* Register default value:              0x00000001                            */
#define SPARE_SWEAST_IIO_DFX_GLOBAL_DMI_REG 0x120346A4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x3d8
 */
typedef union {
  struct {
    UINT32 locks_skip_vtd_check : 1;
    /* locks_skip_vtd_check - Bits[0:0], RW_L, default = 1'b1  */
    UINT32 locks_use_quiesce_flow : 1;
    /* locks_use_quiesce_flow - Bits[1:1], RW_L, default = 1'b0  */
    UINT32 rsvd : 28;
    /* rsvd - Bits[29:2], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 viral_autoack : 2;
    /* viral_autoack - Bits[31:30], RW_L, default = 2'b00 
       "00": Default: A0 behavior: only auto-ack Reset_warn during viral
       "01": Auto-ack all GO_S* messages incl. Reset_warn (i.e. DMICTRL.AUTOCOMPLETE_PM 
       behavior) 
       When the bit is set, the corresponding ring messages are dropped (auto-ack sent 
       to DMI) 
       "10": Do not auto-ack any Go_S* messages incl. Reset_warn.
       Allow messages to propagate to ring and ack to propagate downstream to DMI
       "11": Illegal case. This is reserved.
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} SPARE_SWEAST_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCDBG_HDRMASK_N0_IIO_DFX_GLOBAL_DMI_REG supported on:                     */
/*       SKX_A0 (0x4003F6A8)                                                  */
/*       SKX (0x4003F6A8)                                                     */
/* Register default value:              0x00000000                            */
#define ITCDBG_HDRMASK_N0_IIO_DFX_GLOBAL_DMI_REG 0x120346A8
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * header mask for ITC DFD logic
 */
typedef union {
  struct {
    UINT32 mask0 : 32;
    /* mask0 - Bits[31:0], RWS_L, default = 32'b0 
       
       Mask applied to one of the 4 32-bit chunks of the incoming header. The chunk is 
       selected by TcDfdTagCtrl.ItcHdrChunkSel0. 
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} ITCDBG_HDRMASK_N0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCDBG_HDRMASK_N1_IIO_DFX_GLOBAL_DMI_REG supported on:                     */
/*       SKX_A0 (0x4003F6AC)                                                  */
/*       SKX (0x4003F6AC)                                                     */
/* Register default value:              0x00000000                            */
#define ITCDBG_HDRMASK_N1_IIO_DFX_GLOBAL_DMI_REG 0x120346AC
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * header mask for ITC DFD logic
 */
typedef union {
  struct {
    UINT32 mask1 : 32;
    /* mask1 - Bits[31:0], RWS_L, default = 32'b0 
       
       Mask applied to one of the 4 32-bit chunks of the incoming header. The chunk is 
       selected by TcDfdTagCtrl.ItcHdrChunkSel1. 
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} ITCDBG_HDRMASK_N1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCDBG_HDRMATCH_N0_IIO_DFX_GLOBAL_DMI_REG supported on:                    */
/*       SKX_A0 (0x4003F6B0)                                                  */
/*       SKX (0x4003F6B0)                                                     */
/* Register default value:              0x00000000                            */
#define ITCDBG_HDRMATCH_N0_IIO_DFX_GLOBAL_DMI_REG 0x120346B0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * header match for ITC DFD logic
 */
typedef union {
  struct {
    UINT32 match0 : 32;
    /* match0 - Bits[31:0], RWS_L, default = 32'b0 
       
       Match applied to one of the 4 32-bit chunks of the incoming header. The chunk is 
       selected by TcDfdTagCtrl.ItcHdrChunkSel0. 
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} ITCDBG_HDRMATCH_N0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCDBG_HDRMATCH_N1_IIO_DFX_GLOBAL_DMI_REG supported on:                    */
/*       SKX_A0 (0x4003F6B4)                                                  */
/*       SKX (0x4003F6B4)                                                     */
/* Register default value:              0x00000000                            */
#define ITCDBG_HDRMATCH_N1_IIO_DFX_GLOBAL_DMI_REG 0x120346B4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * header match for ITC DFD logic
 */
typedef union {
  struct {
    UINT32 match1 : 32;
    /* match1 - Bits[31:0], RWS_L, default = 32'b0 
       
       Match applied to one of the 4 32-bit chunks of the incoming header. The chunk is 
       selected by TcDfdTagCtrl.ItcHdrChunkSel1. 
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} ITCDBG_HDRMATCH_N1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SPARE_SWWEST2_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F6B8)                                                  */
/*       SKX (0x4003F6B8)                                                     */
/* Register default value:              0x80000000                            */
#define SPARE_SWWEST2_IIO_DFX_GLOBAL_DMI_REG 0x120346B8
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x3dc
 */
typedef union {
  struct {
    UINT32 rsvd : 1;
    /* rsvd - Bits[0:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 disable_intr_in_viral : 1;
    /* disable_intr_in_viral - Bits[1:1], RW, default = 1'b0 
       
       '0' : Enable interrupts in viral mode from APIC subagent
       '1' : Disable interrupts in viral mode from APIC subagent
       
     */
    UINT32 disable_pm_resp_in_viral : 1;
    /* disable_pm_resp_in_viral - Bits[2:2], RW, default = 1'b0 
       
       '0' : Enable PM_RESP from DMI to flow during viral mode.
       '1' : Disable PM_RESP from DMI to flow during viral mode.
       
     */
    UINT32 enable_vlw_in_viral : 1;
    /* enable_vlw_in_viral - Bits[3:3], RW, default = 1'b0 
       
       '0' : Disable VLW from DMI to flow during viral mode.
       '1' : Enable VLW from DMI to flow during viral mode.
       
     */
    UINT32 spare_csr : 27;
    /* spare_csr - Bits[30:4], RW_L, default = 27'b0 
       
           4 - csr_disable_tgt_abort_confined_p2p
           5 - csr_disable_tgt_abort_viral
        7: 6 - sw2cb_ext_data_stall
           8 - csr_disable_mailbox_to_nonlegacy_dmi: prevent PECI mailbox access to 
       downstream non-legacy DMI registers 
           9 - visa_sel_based_on_phase: alternate between capturing Hdr and VTd pipes 
       based on the phase 
          10 - visa_hdr_over_vtd: give priority to Hdr if both Hdr and VTd pipes are 
       valid in the same cycle 
          11 - visa_del_hdr: delay the header 1 cycle before capturing it
          12 - visa_sel_pump: choose which group of data to capture within Vtd and Hdr 
       pipes 
          13 - when set to 1, allows ITC to log a CA/MA error on the same transaction 
       that has the CA/MA hint set from PCIE (i.e. allows double-logging - SKX HSD 
       b306116) 
          14 - when set to 1, prevents inbound CFG local misses from being MA'ed
          15 - when set to 1, enables the reqid check for inbound posted mem/p2p 
       accesses that was added as a result of b306596 
          16 - when set to 1, disables the reqid check for inbound non-posted mem/mmio 
       accesses that was added as a result of b306596 
          17 - when set to 1, enables the reqid check for inbound posted/non-posted 
       mem/mmio accesses over DMI that was added as a result of b306596 
          18 - when set to 1, removes the PrhPend credit bypass in order to 
       re-introduce the deadlock from SKX HSD b306619 
          19 - when set to 1, ITC starts ignoring the busy signal from VtD. it is a new 
       chicken bit added as part of b310838 for b310702. 
          20 - when set to 1, ITC stops looking at VTD channel for the busy signal, and 
       applies it to all channels. chicken bit for b310838. 
          21 - when set to 1, zeroes out the "atomic completion" indication to the 
       transaction layer, undoing the fix for SKX HSD b311070 
       
     */
    UINT32 disable_ro_override : 1;
    /* disable_ro_override - Bits[31:31], RW_L, default = 1'b1  */
  } Bits;
  UINT32 Data;
} SPARE_SWWEST2_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPOOLDFX2_IIO_DFX_GLOBAL_DMI_REG supported on:                           */
/*       SKX_A0 (0x4003F6BC)                                                  */
/*       SKX (0x4003F6BC)                                                     */
/* Register default value:              0x00000000                            */
#define CSIPOOLDFX2_IIO_DFX_GLOBAL_DMI_REG 0x120346BC
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x410
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 3;
    /* rsvd_0 - Bits[2:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 datacdt_hoard : 5;
    /* datacdt_hoard - Bits[7:3], RW_L, default = 5'b00000  */
    UINT32 rsvd_8 : 24;
    /* rsvd_8 - Bits[31:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} CSIPOOLDFX2_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPISOCRES_IIO_DFX_GLOBAL_DMI_REG supported on:                           */
/*       SKX_A0 (0x4003F6C0)                                                  */
/*       SKX (0x4003F6C0)                                                     */
/* Register default value:              0x00000000                            */
#define CSIPISOCRES_IIO_DFX_GLOBAL_DMI_REG 0x120346C0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x388
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 16;
    /* rsvd_0 - Bits[15:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 isoc_enabled : 1;
    /* isoc_enabled - Bits[16:16], RW_L, default = 1'b0 
       This is the isoch enabled bit to enable the isoch reserved entry programmed in 
       vc1_reserved, vc1_maximum, vcp_reserved and vcp_maximum 
     */
    UINT32 merge_vc0_cnt : 1;
    /* merge_vc0_cnt - Bits[17:17], RW_L, default = 1'b0 
       If set, revert to legacy behavior of comparing max_cache_vc0 to total cache 
       usage instead of VC0 cache usage. 
     */
    UINT32 rsvd_18 : 14;
    /* rsvd_18 - Bits[31:18], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} CSIPISOCRES_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPCTRL_0_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F6C4)                                                  */
/*       SKX (0x4003F6C4)                                                     */
/* Register default value:              0xC0000000                            */
#define CSIPCTRL_0_IIO_DFX_GLOBAL_DMI_REG 0x120346C4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x584
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 26;
    /* rsvd_0 - Bits[25:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 vc0_priority : 2;
    /* vc0_priority - Bits[27:26], RW_LB, default = 2'b00  */
    UINT32 rsvd_28 : 2;
    /* rsvd_28 - Bits[29:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 vc1_priority : 2;
    /* vc1_priority - Bits[31:30], RW_LB, default = 2'b11  */
  } Bits;
  UINT32 Data;
} CSIPCTRL_0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPCTRL_1_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F6C8)                                                  */
/*       SKX (0x4003F6C8)                                                     */
/* Register default value:              0x00000000                            */
#define CSIPCTRL_1_IIO_DFX_GLOBAL_DMI_REG 0x120346C8
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x588
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 13;
    /* rsvd_0 - Bits[12:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 write_cache_flush : 1;
    /* write_cache_flush - Bits[13:13], RW_LB, default = 1'b0  */
    UINT32 rsvd_14 : 18;
    /* rsvd_14 - Bits[31:14], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} CSIPCTRL_1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSI0PRPRIVC1_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F6CC)                                                  */
/*       SKX (0x4003F6CC)                                                     */
/* Register default value:              0x20000000                            */
#define CSI0PRPRIVC1_IIO_DFX_GLOBAL_DMI_REG 0x120346CC
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x378
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 29;
    /* rsvd_0 - Bits[28:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 use_isoc_ovf_q : 1;
    /* use_isoc_ovf_q - Bits[29:29], RWS_L, default = 1'b1  */
    UINT32 rsvd_30 : 2;
    /* rsvd_30 - Bits[31:30], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} CSI0PRPRIVC1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIRTCTRL_IIO_DFX_GLOBAL_DMI_REG supported on:                             */
/*       SKX_A0 (0x4003F6D4)                                                  */
/*       SKX (0x4003F6D4)                                                     */
/* Register default value:              0x00000000                            */
#define CSIRTCTRL_IIO_DFX_GLOBAL_DMI_REG 0x120346D4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x580
 */
typedef union {
  struct {
    UINT32 inbound_routing_method : 1;
    /* inbound_routing_method - Bits[0:0], RW_LB, default = 1'b0  */
    UINT32 rsvd : 31;
    /* rsvd - Bits[31:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} CSIRTCTRL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPSUBSAD_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F6D8)                                                  */
/*       SKX (0x4003F6D8)                                                     */
/* Register default value:              0x00000000                            */
#define CSIPSUBSAD_IIO_DFX_GLOBAL_DMI_REG 0x120346D8
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x5a8
 */
typedef union {
  struct {
    UINT32 valid : 1;
    /* valid - Bits[0:0], RW, default = 1'b0  */
    UINT32 rsvd_1 : 7;
    /* rsvd_1 - Bits[7:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 legacy_ioh_nodeid5 : 6;
    /* legacy_ioh_nodeid5 - Bits[13:8], RW, default = 6'b000000  */
    UINT32 rsvd_14 : 18;
    /* rsvd_14 - Bits[31:14], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} CSIPSUBSAD_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TSWVTDBG0_IIO_DFX_GLOBAL_DMI_REG supported on:                             */
/*       SKX_A0 (0x4003F6DC)                                                  */
/*       SKX (0x4003F6DC)                                                     */
/* Register default value:              0x00000000                            */
#define TSWVTDBG0_IIO_DFX_GLOBAL_DMI_REG 0x120346DC
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_7_0x4cc
 */
typedef union {
  struct {
    UINT32 vt_disabled_agent : 17;
    /* vt_disabled_agent - Bits[16:0], RW_L, default = 17'b00000000000000000  */
    UINT32 disable_vt_snoops : 1;
    /* disable_vt_snoops - Bits[17:17], RW_L, default = 1'b0  */
    UINT32 disable_vtpf_cbagt0 : 1;
    /* disable_vtpf_cbagt0 - Bits[18:18], RW_L, default = 1'b0  */
    UINT32 rsvd : 13;
    /* rsvd - Bits[31:19], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TSWVTDBG0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* EOI_CTRL_IIO_DFX_GLOBAL_DMI_REG supported on:                              */
/*       SKX_A0 (0x1003F6E0)                                                  */
/*       SKX (0x1003F6E0)                                                     */
/* Register default value:              0x00                                  */
#define EOI_CTRL_IIO_DFX_GLOBAL_DMI_REG 0x120316E0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 06_2_0x0fc
 */
typedef union {
  struct {
    UINT8 drop_eoi : 1;
    /* drop_eoi - Bits[0:0], RW, default = 1'b0  */
    UINT8 rsvd : 7;
    /* rsvd - Bits[7:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT8 Data;
} EOI_CTRL_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TCERRDIS_IIO_DFX_GLOBAL_DMI_REG supported on:                              */
/*       SKX_A0 (0x4003F6E4)                                                  */
/*       SKX (0x4003F6E4)                                                     */
/* Register default value:              0x00000000                            */
#define TCERRDIS_IIO_DFX_GLOBAL_DMI_REG 0x120346E4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Traffic Controller Error Detection defeature
 */
typedef union {
  struct {
    UINT32 otc_ob_cred_uf : 1;
    /* otc_ob_cred_uf - Bits[0:0], RWS_L, default = 'b0 
       
                    OTC OB credit enable underflow
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ob_cred_of : 1;
    /* otc_ob_cred_of - Bits[1:1], RWS_L, default = 'b0 
       
                    OTC OB credit enable overflow
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_hdr_rf : 1;
    /* otc_par_hdr_rf - Bits[2:2], RWS_L, default = 'b0 
       
                    Parity error enable in the OTC hdr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_addr_rf : 1;
    /* otc_par_addr_rf - Bits[3:3], RWS_L, default = 'b0 
       
                    Parity error enable in the OTC addr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ecc_uncor_rf : 1;
    /* otc_ecc_uncor_rf - Bits[4:4], RWS_L, default = 'b0 
       
                    ECC uncorrected error enable in the OTC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_cabort : 1;
    /* otc_cabort - Bits[5:5], RWS_L, default = 'b0 
       
                    Completer abort enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mabort : 1;
    /* otc_mabort - Bits[6:6], RWS_L, default = 'b0 
       
                    Master abort enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mtc_tgt_err : 1;
    /* otc_mtc_tgt_err - Bits[7:7], RWS_L, default = 'b0 
       
                    Multicast target error for ITC only
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ecc_cor_rf : 1;
    /* otc_ecc_cor_rf - Bits[8:8], RWS_L, default = 'b0 
       
                    ECC corrected error enable in the OTC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mctp_bcast_to_dmi : 1;
    /* otc_mctp_bcast_to_dmi - Bits[9:9], RWS_L, default = 'b0 
       
                    MCTP broadcast request to DMI enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_rte : 1;
    /* otc_par_rte - Bits[10:10], RWS_L, default = 'b0 
       
                    IOAPIC RTE parity error enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_irp_dat_par : 1;
    /* otc_irp_dat_par - Bits[11:11], RWS_L, default = 'b0 
       
                    parity error on incoming data from IRP enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_irp_addr_par : 1;
    /* otc_irp_addr_par - Bits[12:12], RWS_L, default = 'b0 
       
                    Parity error on incoming addr from IRP enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 rsvd_13 : 3;
    /* rsvd_13 - Bits[15:13], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 itc_irp_cred_uf : 1;
    /* itc_irp_cred_uf - Bits[16:16], RWS_L, default = 'b0 
       
                    ITC IRP credit underflow enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_irp_cred_of : 1;
    /* itc_irp_cred_of - Bits[17:17], RWS_L, default = 'b0 
       
                    ITC IRP credit overflow enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_pcie_dat : 1;
    /* itc_par_pcie_dat - Bits[18:18], RWS_L, default = 'b0 
       
                    Parity error enable in the incoming data from PCIE
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_hdr_rf : 1;
    /* itc_par_hdr_rf - Bits[19:19], RWS_L, default = 'b0 
       
                    Parity error enable in the ITC hdr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_vtmisc_hdr_rf : 1;
    /* itc_vtmisc_hdr_rf - Bits[20:20], RWS_L, default = 'b0 
       
                    Parity error enable in the ITC vtd_misc_info RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_addr_rf : 1;
    /* itc_par_addr_rf - Bits[21:21], RWS_L, default = 'b0 
       
                    Parity error enable in the ITC addr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_ecc_cor_rf : 1;
    /* itc_ecc_cor_rf - Bits[22:22], RWS_L, default = 'b0 
       
                    ECC corrected error enable in the ITC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_ecc_uncor_rf : 1;
    /* itc_ecc_uncor_rf - Bits[23:23], RWS_L, default = 'b0 
       
                    ECC uncorrected error enable in the ITC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_cabort : 1;
    /* itc_cabort - Bits[24:24], RWS_L, default = 'b0 
       
                    Completer abort enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_mabort : 1;
    /* itc_mabort - Bits[25:25], RWS_L, default = 'b0 
       
                    Master abort enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_mtc_tgt_err : 1;
    /* itc_mtc_tgt_err - Bits[26:26], RWS_L, default = 'b0 
       
                    Multicast target error enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_enq_overflow : 1;
    /* itc_enq_overflow - Bits[27:27], RWS_L, default = 'b0 
       
                    ITC inbound FIFO overflow
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_misc_prh_overflow : 1;
    /* itc_misc_prh_overflow - Bits[28:28], RWS_L, default = 'b0 
       
                    ITC received a misc channel prh header when a prh_complete on that 
       same channel was still pending 
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 rsvd_29 : 3;
    /* rsvd_29 - Bits[31:29], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TCERRDIS_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCCREDTHROTTLE_IIO_DFX_GLOBAL_DMI_REG supported on:                       */
/*       SKX_A0 (0x4003F6F0)                                                  */
/*       SKX (0x4003F6F0)                                                     */
/* Register default value:              0x00000000                            */
#define OTCCREDTHROTTLE_IIO_DFX_GLOBAL_DMI_REG 0x120346F0
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *          Throttle credit returns to IRP
 *       
 */
typedef union {
  struct {
    UINT32 enable : 3;
    /* enable - Bits[2:0], RW, default = None 
       
          0 - Disabled
          1 - Always enabled
          2 - Enable based on response function 0
          3 - Enable based on response function 1
          4 - Enable based on response function 2
                
     */
    UINT32 throttleprh : 1;
    /* throttleprh - Bits[3:3], RW, default = None 
       Throttle return of Prh credits to IRP when throttling is enabled via 
       OtcCredThrottle.Enable 
     */
    UINT32 throttleprd : 1;
    /* throttleprd - Bits[4:4], RW, default = None 
       Throttle return of Prd credits to IRP when throttling is enabled via 
       OtcCredThrottle.Enable 
     */
    UINT32 throttlenprh : 1;
    /* throttlenprh - Bits[5:5], RW, default = None 
       Throttle return of Nprh credits to IRP when throttling is enabled via 
       OtcCredThrottle.Enable 
     */
    UINT32 throttlenprd : 1;
    /* throttlenprd - Bits[6:6], RW, default = None 
       Throttle return of Nprd credits to IRP when throttling is enabled via 
       OtcCredThrottle.Enable 
     */
    UINT32 throttlecph : 1;
    /* throttlecph - Bits[7:7], RW, default = None 
       Throttle return of Cph credits to IRP when throttling is enabled via 
       OtcCredThrottle.Enable 
     */
    UINT32 throttlecpd : 1;
    /* throttlecpd - Bits[8:8], RW, default = None 
       Throttle return of Cpd credits to IRP when throttling is enabled via 
       OtcCredThrottle.Enable 
     */
    UINT32 rsvd : 23;
    /* rsvd - Bits[31:9], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCCREDTHROTTLE_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCPIPEHAZARD_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F6F4)                                                  */
/*       SKX (0x4003F6F4)                                                     */
/* Register default value:              0x00000000                            */
#define ITCPIPEHAZARD_IIO_DFX_GLOBAL_DMI_REG 0x120346F4
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *    Constrain the Hdr and VTd pipeline arbiters to avoid certain bypass 
 * conditions 
 *       
 */
typedef union {
  struct {
    UINT32 enable : 3;
    /* enable - Bits[2:0], RW, default = None 
       
          0 - Disabled
          1 - Always enabled
          2 - Enable based on response function 0
          3 - Enable based on response function 1
          4 - Enable based on response function 2
                
     */
    UINT32 mode : 4;
    /* mode - Bits[6:3], RW, default = None 
       
          [0] - When set, block only requests to the same FC that caused the trigger
          [1] - When set, block only requests to the same chnl that caused the trigger
          [2] - When set, block only requests to the same pipe (Hdr or Vtd) that caused 
       the trigger 
          [3] - When set, block only requests to the same type (e.g. Pf, FP F, normal 
       F) that caused the trigger 
                
     */
    UINT32 lteq : 1;
    /* lteq - Bits[7:7], RW, default = None 
       
          0 - Block requests for Thresh cycles in a row
          1 - Block requests exactly Thresh cycles behind the trigger
                
     */
    UINT32 thresh : 4;
    /* thresh - Bits[11:8], RW, default = None 
       
          Number of cycles that requests in Block mask will be blocked after a request 
       in Trigger mask occurs 
                
     */
    UINT32 trigger : 8;
    /* trigger - Bits[19:12], RW, default = None 
       
          What classes of request should trigger the blocking:
          [7] - Hdr Data
          [6] - HdrPf
          [5] - HdrF FP
          [4] - HdrF Norm
          [3] - rsvd
          [2] - VTdF that doesn't access VTd
          [1] - VTdF that accesses VTd
          [0] - VTdPf
                
     */
    UINT32 block : 8;
    /* block - Bits[27:20], RW, default = None 
       
          What class of request should be blocked:
          [7] - Hdr Data
          [6] - HdrPf
          [5] - HdrF FP
          [4] - HdrF Norm
          [3] - rsvd
          [2] - VTdF that doesn't access VTd
          [1] - VTdF that accesses VTd
          [0] - VTdPf
                
     */
    UINT32 rsvd : 4;
    /* rsvd - Bits[31:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCPIPEHAZARD_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCARBBLOCK_IIO_DFX_GLOBAL_DMI_REG supported on:                           */
/*       SKX_A0 (0x4003F6F8)                                                  */
/*       SKX (0x4003F6F8)                                                     */
/* Register default value:              0x00000000                            */
#define ITCARBBLOCK_IIO_DFX_GLOBAL_DMI_REG 0x120346F8
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *    Block certain requestors from the VTd and Hdr pipelines
 *       
 */
typedef union {
  struct {
    UINT32 enable : 3;
    /* enable - Bits[2:0], RW, default = None 
       
          0 - Disabled
          1 - Always enabled
          2 - Enable based on response function 0
          3 - Enable based on response function 1
          4 - Enable based on response function 2
                
     */
    UINT32 chnlmask : 8;
    /* chnlmask - Bits[10:3], RW, default = None 
       
          Channels to block
                
     */
    UINT32 fcmask : 3;
    /* fcmask - Bits[13:11], RW, default = None 
       
          FCs to block:
          [2] - C
          [1] - NP
          [0] - P
                
     */
    UINT32 typemask : 8;
    /* typemask - Bits[21:14], RW, default = None 
       
          Pipelines to block:
          [7] - Hdr Data
          [6] - HdrPf
          [5] - HdrF FP
          [4] - HdrF Norm
          [3] - rsvd
          [2] - VTdF that doesn't access VTd
          [1] - VTdF that accesses VTd
          [0] - VTdPf
                
     */
    UINT32 rsvd : 10;
    /* rsvd - Bits[31:22], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCARBBLOCK_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCPIPEHAZARD_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F700)                                                  */
/*       SKX (0x4003F700)                                                     */
/* Register default value:              0x00000000                            */
#define OTCPIPEHAZARD_IIO_DFX_GLOBAL_DMI_REG 0x12034700
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *    Constrain the Hdr and VTd pipeline arbiters to avoid certain bypass 
 * conditions 
 *       
 */
typedef union {
  struct {
    UINT32 enable : 3;
    /* enable - Bits[2:0], RW, default = None 
       
          0 - Disabled
          1 - Always enabled
          2 - Enable based on response function 0
          3 - Enable based on response function 1
          4 - Enable based on response function 2
                
     */
    UINT32 mode : 4;
    /* mode - Bits[6:3], RW, default = None 
       
          [0] - When set, block only requests to the same FC that caused the trigger
          [1] - When set, block only requests to the same chnl that caused the trigger
          [2] - When set, block only requests to the same pipe (Hdr or Vtd) that caused 
       the trigger 
          [3] - When set, block only requests to the same type (e.g. Pf, FP F, normal 
       F) that caused the trigger 
                
     */
    UINT32 lteq : 1;
    /* lteq - Bits[7:7], RW, default = None 
       
          0 - Block requests for Thresh cycles in a row
          1 - Block requests exactly Thresh cycles behind the trigger
                
     */
    UINT32 thresh : 4;
    /* thresh - Bits[11:8], RW, default = None 
       
          Number of cycles that requests in Block mask will be blocked after a request 
       in Trigger mask occurs 
                
     */
    UINT32 trigger : 8;
    /* trigger - Bits[19:12], RW, default = None 
       
          What class of request should trigger the blocking:
          [7] - rsvd
          [6] - HdrPf
          [5] - rsvd
          [4] - HdrF Norm
          [3] - rsvd
          [2] - VTdF
          [1] - rsvd
          [0] - rsvd
                
     */
    UINT32 block : 8;
    /* block - Bits[27:20], RW, default = None 
       
          What class of request should be blocked:
          [7] - rsvd
          [6] - HdrPf
          [5] - rsvd
          [4] - HdrF Norm
          [3] - rsvd
          [2] - VTdF
          [1] - rsvd
          [0] - rsvd
                
     */
    UINT32 rsvd : 4;
    /* rsvd - Bits[31:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCPIPEHAZARD_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCARBBLOCK_IIO_DFX_GLOBAL_DMI_REG supported on:                           */
/*       SKX_A0 (0x4003F704)                                                  */
/*       SKX (0x4003F704)                                                     */
/* Register default value:              0x00000000                            */
#define OTCARBBLOCK_IIO_DFX_GLOBAL_DMI_REG 0x12034704
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *    Block certain requestors from the VTd and Hdr pipelines
 *       
 */
typedef union {
  struct {
    UINT32 enable : 3;
    /* enable - Bits[2:0], RW, default = None 
       
          0 - Disabled
          1 - Always enabled
          2 - Enable based on response function 0
          3 - Enable based on response function 1
          4 - Enable based on response function 2
                
     */
    UINT32 chnlmask : 8;
    /* chnlmask - Bits[10:3], RW, default = None 
       
          Channels to block
                
     */
    UINT32 fcmask : 3;
    /* fcmask - Bits[13:11], RW, default = None 
       
          FCs to block:
          [2] - C
          [1] - NP
          [0] - P
                
     */
    UINT32 typemask : 8;
    /* typemask - Bits[21:14], RW, default = None 
       
          Pipelines to block:
          [7] - rsvd
          [6] - HdrPf
          [5] - rsvd
          [4] - HdrF Norm
          [3] - rsvd
          [2] - VTdF
          [1] - rsvd
          [0] - rsvd
                
     */
    UINT32 rsvd : 10;
    /* rsvd - Bits[31:22], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCARBBLOCK_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCFRCREJECT_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F708)                                                  */
/*       SKX (0x4003F708)                                                     */
/* Register default value:              0x00000000                            */
#define ITCFRCREJECT_IIO_DFX_GLOBAL_DMI_REG 0x12034708
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *    Prevent requests from certain VTd and Hdr pipes from advancing to the next 
 * stage 
 *       
 */
typedef union {
  struct {
    UINT32 enable : 3;
    /* enable - Bits[2:0], RW, default = None 
       
          0 - Disabled
          1 - Always enabled
          2 - Enable based on response function 0
          3 - Enable based on response function 1
          4 - Enable based on response function 2
                
     */
    UINT32 chnlmask : 8;
    /* chnlmask - Bits[10:3], RW, default = None 
       
          Channels to block
                
     */
    UINT32 fcmask : 3;
    /* fcmask - Bits[13:11], RW, default = None 
       
          FCs to block:
          [2] - C
          [1] - NP
          [0] - P
                
     */
    UINT32 typemask : 6;
    /* typemask - Bits[19:14], RW, default = None 
       
          Pipelines to block:
          [5] - Hdr Data
          [4] - Hdr FP F
          [3] - Hdr Normal F
          [2] - Hdr Pf
          [1] - VTd F
          [0] - VTd Pf
                
     */
    UINT32 rejmode : 1;
    /* rejmode - Bits[20:20], RW, default = None 
       When 0, always reject; when 1, reject only when the following stage has more 
       requests than the configured threshold 
     */
    UINT32 threshold : 10;
    /* threshold - Bits[30:21], RW, default = None 
       Number of requests in a stage above which the previous stage will be 
       backpressured 
     */
    UINT32 rsvd : 1;
    /* rsvd - Bits[31:31], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCFRCREJECT_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCRSPFUNC_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F70C)                                                  */
/*       SKX (0x4003F70C)                                                     */
/* Register default value:              0x00000000                            */
#define OTCRSPFUNC_IIO_DFX_GLOBAL_DMI_REG 0x1203470C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *    Select the start and stop triggers for the response logic
 *       
 */
typedef union {
  struct {
    UINT32 startsel0 : 4;
    /* startsel0 - Bits[3:0], RWS, default = None 
       
                
     */
    UINT32 stopsel0 : 4;
    /* stopsel0 - Bits[7:4], RWS, default = None 
       
                
     */
    UINT32 startsel1 : 4;
    /* startsel1 - Bits[11:8], RWS, default = None 
       
                
     */
    UINT32 stopsel1 : 4;
    /* stopsel1 - Bits[15:12], RWS, default = None 
       
                
     */
    UINT32 startsel2 : 4;
    /* startsel2 - Bits[19:16], RWS, default = None 
       
                
     */
    UINT32 stopsel2 : 4;
    /* stopsel2 - Bits[23:20], RWS, default = None 
       
                
     */
    UINT32 pto_en : 1;
    /* pto_en - Bits[24:24], RWS, default = None 
       
       Enable OTC as a DFD trigger source, via the PTO signal.
       Currently, the only PTO input is the enqueue header mask/match.
                
     */
    UINT32 rsvd : 7;
    /* rsvd - Bits[31:25], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCRSPFUNC_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCRSPFUNC_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F710)                                                  */
/*       SKX (0x4003F710)                                                     */
/* Register default value:              0x00000000                            */
#define ITCRSPFUNC_IIO_DFX_GLOBAL_DMI_REG 0x12034710
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *    Select the start and stop triggers for the response logic
 *       
 */
typedef union {
  struct {
    UINT32 startsel0 : 4;
    /* startsel0 - Bits[3:0], RWS, default = None 
       
                
     */
    UINT32 stopsel0 : 4;
    /* stopsel0 - Bits[7:4], RWS, default = None 
       
                
     */
    UINT32 startsel1 : 4;
    /* startsel1 - Bits[11:8], RWS, default = None 
       
                
     */
    UINT32 stopsel1 : 4;
    /* stopsel1 - Bits[15:12], RWS, default = None 
       
                
     */
    UINT32 startsel2 : 4;
    /* startsel2 - Bits[19:16], RWS, default = None 
       
                
     */
    UINT32 stopsel2 : 4;
    /* stopsel2 - Bits[23:20], RWS, default = None 
       
                
     */
    UINT32 pto_en : 1;
    /* pto_en - Bits[24:24], RWS, default = None 
       
       Enable ITC as a DFD trigger source, via the PTO signal.
       Currently, the only PTO input is the enqueue header mask/match.
                
     */
    UINT32 rsvd : 7;
    /* rsvd - Bits[31:25], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCRSPFUNC_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCMISCARBBLOCK_IIO_DFX_GLOBAL_DMI_REG supported on:                       */
/*       SKX_A0 (0x4003F714)                                                  */
/*       SKX (0x4003F714)                                                     */
/* Register default value:              0x00000000                            */
#define OTCMISCARBBLOCK_IIO_DFX_GLOBAL_DMI_REG 0x12034714
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *    Block certain requestors from access to ITC
 *       
 */
typedef union {
  struct {
    UINT32 enable : 3;
    /* enable - Bits[2:0], RW, default = None 
       
          0 - Disabled
          1 - Always enabled
          2 - Enable based on response function 0
          3 - Enable based on response function 1
          4 - Enable based on response function 2
                
     */
    UINT32 mask : 10;
    /* mask - Bits[12:3], RW, default = None 
       
          [9] - JSM NP
          [8] - Cfg C
          [7] - Msg C
          [6] - JSM P
          [5] - HPPM P
          [4] - APIC P
          [3] - Msg P
          [2] - VC0 P
          [1] - VC0 NP
          [0] - VC1 NP
                
     */
    UINT32 rsvd : 19;
    /* rsvd - Bits[31:13], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCMISCARBBLOCK_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCOBARBBLOCK_IIO_DFX_GLOBAL_DMI_REG supported on:                         */
/*       SKX_A0 (0x4003F718)                                                  */
/*       SKX (0x4003F718)                                                     */
/* Register default value:              0x00000000                            */
#define OTCOBARBBLOCK_IIO_DFX_GLOBAL_DMI_REG 0x12034718
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * 
 *    Block the sending of hdr and data to PCIE
 *       
 */
typedef union {
  struct {
    UINT32 enable : 3;
    /* enable - Bits[2:0], RW, default = None 
       
          0 - Disabled
          1 - Always enabled
          2 - Enable based on response function 0
          3 - Enable based on response function 1
          4 - Enable based on response function 2
                
     */
    UINT32 typemask : 3;
    /* typemask - Bits[5:3], RW, default = None 
       
          [2] - Crdt
          [1] - Data
          [0] - Hdr
                
     */
    UINT32 chnlmask : 8;
    /* chnlmask - Bits[13:6], RW, default = None 
       
          Channels to block
                
     */
    UINT32 fcmask : 3;
    /* fcmask - Bits[16:14], RW, default = None 
       
          FCs to block:
          [2] - C
          [1] - NP
          [0] - P
                
     */
    UINT32 rsvd : 15;
    /* rsvd - Bits[31:17], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCOBARBBLOCK_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCDBG_HDRMASK_N0_IIO_DFX_GLOBAL_DMI_REG supported on:                     */
/*       SKX_A0 (0x4003F720)                                                  */
/*       SKX (0x4003F720)                                                     */
/* Register default value:              0x00000000                            */
#define OTCDBG_HDRMASK_N0_IIO_DFX_GLOBAL_DMI_REG 0x12034720
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * header mask for OTC DFD logic
 */
typedef union {
  struct {
    UINT32 mask0 : 32;
    /* mask0 - Bits[31:0], RWS_L, default = 32'b0 
       
       Mask applied to one of the 4 32-bit chunks of the incoming header. The chunk is 
       selected by TcDfdTagCtrl.OtcHdrChunkSel0. 
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} OTCDBG_HDRMASK_N0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCDBG_HDRMASK_N1_IIO_DFX_GLOBAL_DMI_REG supported on:                     */
/*       SKX_A0 (0x4003F724)                                                  */
/*       SKX (0x4003F724)                                                     */
/* Register default value:              0x00000000                            */
#define OTCDBG_HDRMASK_N1_IIO_DFX_GLOBAL_DMI_REG 0x12034724
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * header mask for OTC DFD logic
 */
typedef union {
  struct {
    UINT32 mask1 : 32;
    /* mask1 - Bits[31:0], RWS_L, default = 32'b0 
       
       Mask applied to one of the 4 32-bit chunks of the incoming header. The chunk is 
       selected by TcDfdTagCtrl.OtcHdrChunkSel1. 
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} OTCDBG_HDRMASK_N1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCDBG_HDRMATCH_N0_IIO_DFX_GLOBAL_DMI_REG supported on:                    */
/*       SKX_A0 (0x4003F728)                                                  */
/*       SKX (0x4003F728)                                                     */
/* Register default value:              0x00000000                            */
#define OTCDBG_HDRMATCH_N0_IIO_DFX_GLOBAL_DMI_REG 0x12034728
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * header match for OTC DFD logic
 */
typedef union {
  struct {
    UINT32 match0 : 32;
    /* match0 - Bits[31:0], RWS_L, default = 32'b0 
       
       Match applied to one of the 4 32-bit chunks of the incoming header. The chunk is 
       selected by TcDfdTagCtrl.OtcHdrChunkSel0. 
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} OTCDBG_HDRMATCH_N0_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCDBG_HDRMATCH_N1_IIO_DFX_GLOBAL_DMI_REG supported on:                    */
/*       SKX_A0 (0x4003F72C)                                                  */
/*       SKX (0x4003F72C)                                                     */
/* Register default value:              0x00000000                            */
#define OTCDBG_HDRMATCH_N1_IIO_DFX_GLOBAL_DMI_REG 0x1203472C
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * header match for OTC DFD logic
 */
typedef union {
  struct {
    UINT32 match1 : 32;
    /* match1 - Bits[31:0], RWS_L, default = 32'b0 
       
       Match applied to one of the 4 32-bit chunks of the incoming header. The chunk is 
       selected by TcDfdTagCtrl.OtcHdrChunkSel1. 
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} OTCDBG_HDRMATCH_N1_IIO_DFX_GLOBAL_DMI_STRUCT;


/* TCDBG_TXNTAG_N0_IIO_DFX_GLOBAL_DMI_REG supported on:                       */
/*       SKX_A0 (0x4003F730)                                                  */
/*       SKX (0x4003F730)                                                     */
/* Register default value:              0x00000000                            */
#define TCDBG_TXNTAG_N0_IIO_DFX_GLOBAL_DMI_REG 0x12034730
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Control for transactional tagging
 */
typedef union {
  struct {
    UINT32 enable : 1;
    /* enable - Bits[0:0], RWS_L, default = 1'b0 
       
       Enable transactional tagging
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 itc_tag_requests : 1;
    /* itc_tag_requests - Bits[1:1], RWS_L, default = 1'b0 
       
       Enable tagging of new inbound requests based on the mask/match logic in 
       itcdbg_hdrmask and itcdbg_hdrmatch 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 otc_tag_requests : 1;
    /* otc_tag_requests - Bits[2:2], RWS_L, default = 1'b0 
       
       Enable tagging of new outbound requests based on the mask/match logic in 
       otcdbg_hdrmask and otcdbg_hdrmatch 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 frequency : 2;
    /* frequency - Bits[4:3], RWS_L, default = 1'b0 
       
       Frequency of tagging (within ITC or OTC):
       00 - Tag all matching requests
       01 - Only allow one outstanding tagged request within ITC or OTC
       10 - Only allow one tagged request ever (can be cleared by writing 0 to the 
       tag_done bit, or by doing a warm reset) 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 itc_tag_done : 1;
    /* itc_tag_done - Bits[5:5], RWS_LV, default = 1'b0 
       
       Transaction has been tagged in ITC
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 otc_tag_done : 1;
    /* otc_tag_done - Bits[6:6], RWS_LV, default = 1'b0 
       
       Transaction has been tagged in OTC
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 itc_tag_in_queue : 1;
    /* itc_tag_in_queue - Bits[7:7], RWS_LV, default = 1'b0 
       
       Tagged transaction is in ITC
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 otc_tag_in_queue : 1;
    /* otc_tag_in_queue - Bits[8:8], RWS_LV, default = 1'b0 
       
       Tagged transaction is in OTC
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 itcchunksel0 : 2;
    /* itcchunksel0 - Bits[10:9], RWS_L, default = 2'b0 
       
       Which 32-bit chunk of the ITC header to apply the itcdbg_hdr_mask/match0 to
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 itcchunksel1 : 2;
    /* itcchunksel1 - Bits[12:11], RWS_L, default = 2'b0 
       
       Which 32-bit chunk of the ITC header to apply the itcdbg_hdr_mask/match1 to
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 otcchunksel0 : 2;
    /* otcchunksel0 - Bits[14:13], RWS_L, default = 2'b0 
       
       Which 32-bit chunk of the OTC header to apply the otcdbg_hdr_mask/match0 to
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 otcchunksel1 : 2;
    /* otcchunksel1 - Bits[16:15], RWS_L, default = 2'b0 
       
       Which 32-bit chunk of the OTC header to apply the otcdbg_hdr_mask/match1 to
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 en_irp_mem_tag : 1;
    /* en_irp_mem_tag - Bits[17:17], RWS_L, default = 1'b0 
       
       Enable IRP tagging for Memory reads and writes. Along with this, you need to 
       reduce number of ctag entries and number of FAF SQIDs to less than 32. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 rsvd : 14;
    /* rsvd - Bits[31:18], n/a, default = n/a 
       This field was split. It's value spans this field and the field of similar name 
       in the next/preceding struct. 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TCDBG_TXNTAG_N0_IIO_DFX_GLOBAL_DMI_STRUCT;




/* OTCASSERTLOG_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F780)                                                  */
/*       SKX (0x4003F780)                                                     */
/* Register default value:              0x00000000                            */
#define OTCASSERTLOG_IIO_DFX_GLOBAL_DMI_REG 0x12034780
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Inbound traffic controller hardware assert log
 */
typedef union {
  struct {
    UINT32 assert_log : 8;
    /* assert_log - Bits[7:0], RW1CS, default = 'b0 
       
                    Each bit represents a consistency check implemented in hardware.  
       For each bit: 
                    0: The check did not file since the log was cleared
                    1: The check failed since the log was last cleared.
                 
     */
    UINT32 rsvd : 24;
    /* rsvd - Bits[31:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCASSERTLOG_IIO_DFX_GLOBAL_DMI_STRUCT;


/* OTCASSERTMCA_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F788)                                                  */
/*       SKX (0x4003F788)                                                     */
/* Register default value:              0x000000FF                            */
#define OTCASSERTMCA_IIO_DFX_GLOBAL_DMI_REG 0x12034788
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Outbound traffic controller hardware assert MCA enable
 */
typedef union {
  struct {
    UINT32 enable : 8;
    /* enable - Bits[7:0], RWS, default = 'b11111111 
       
                    Each bit represents a consistency check implemented in hardware.  
       For each bit: 
                    0: No MCA will be triggered if the check fails
                    1: OTC_HW_ASSERT machine check wiil be triggered if check fails
                 
     */
    UINT32 rsvd : 24;
    /* rsvd - Bits[31:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCASSERTMCA_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCASSERTLOG_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F790)                                                  */
/*       SKX (0x4003F790)                                                     */
/* Register default value:              0x00000000                            */
#define ITCASSERTLOG_IIO_DFX_GLOBAL_DMI_REG 0x12034790
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Outbound traffic controller hardware assert log
 */
typedef union {
  struct {
    UINT32 assert_log : 12;
    /* assert_log - Bits[11:0], RW1CS, default = 'b0 
       
                    Each bit represents a consistency check implemented in hardware.  
       For each bit: 
                    0: The check did not file since the log was cleared
                    1: The check failed since the log was last cleared.
                 
     */
    UINT32 rsvd : 20;
    /* rsvd - Bits[31:12], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCASSERTLOG_IIO_DFX_GLOBAL_DMI_STRUCT;


/* ITCASSERTMCA_IIO_DFX_GLOBAL_DMI_REG supported on:                          */
/*       SKX_A0 (0x4003F798)                                                  */
/*       SKX (0x4003F798)                                                     */
/* Register default value:              0x00000FFF                            */
#define ITCASSERTMCA_IIO_DFX_GLOBAL_DMI_REG 0x12034798
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * Outbound traffic controller hardware assert MCA enable
 */
typedef union {
  struct {
    UINT32 enable : 12;
    /* enable - Bits[11:0], RWS, default = 'b111111111111 
       
                    Each bit represents a consistency check implemented in hardware.  
       For each bit: 
                    0: No MCA will be triggered if the check fails
                    1: ITC_HW_ASSERT machine check wiil be triggered if check fails
                 
     */
    UINT32 rsvd : 20;
    /* rsvd - Bits[31:12], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCASSERTMCA_IIO_DFX_GLOBAL_DMI_STRUCT;


/* SPARE_IOTC_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F79C)                                                  */
/*       SKX (0x4003F79C)                                                     */
/* Register default value on SKX_A0:    0x00000000                            */
/* Register default value on SKX:       0x0000002F                            */
#define SPARE_IOTC_IIO_DFX_GLOBAL_DMI_REG 0x1203479C
/* Struct format extracted from XML file SKX_A0\0.7.7.CFG.xml.
 * OTC spare csr
 */
typedef union {
  struct {
    UINT32 dfx : 32;
    /* dfx - Bits[31:0], RWS_L, default = 'h0  */
  } Bits;
  UINT32 Data;
} SPARE_IOTC_IIO_DFX_GLOBAL_DMI_A0_STRUCT;

/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * OTC spare csr
 */
typedef union {
  struct {
    UINT32 ntb_bar_sz_check : 8;
    /* ntb_bar_sz_check - Bits[7:0], RWS_L, default = 8'h2f 
       
                 Bit 7 - When set, disables the fix for SKX HSD b307157, which does not 
       check a max limit on BAR sizes in NTB mode.  
                 Bit 6:0 - If bit 7 is 0, it used to check the max allowed BAR size 
       programmed by BIOS. Unused if bit 7 is 1. 
               
     */
    UINT32 dfx : 24;
    /* dfx - Bits[31:8], RWS_L, default = 'h0 
       
                 Bit 31 - When set, disables the fix for SKX HSD b304803, which 
       prevents multicast requests that don't hit a RP BAR from being aborted. 
                 Bit 30 - When set, disables the fix for SKX HSD b304467, which aborts 
       requests with illegal length or byte enables. 
                 Bit 29 - When set, disables the fix for SKX HSD b305855, which allows 
       IRP NP pool to arb for free credits if a VMD CFGBAR write is pending. 
               
     */
  } Bits;
  UINT32 Data;
} SPARE_IOTC_IIO_DFX_GLOBAL_DMI_STRUCT;



/* NCMEM_BASE_IIO_DFX_GLOBAL_DMI_REG supported on:                            */
/*       SKX_A0 (0x4003F900)                                                  */
/*       SKX (0x4003F900)                                                     */
/* Register default value:              0x00001F00                            */
#define NCMEM_BASE_IIO_DFX_GLOBAL_DMI_REG 0x12034900
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x900
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 8;
    /* rsvd_0 - Bits[7:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 nmi_mask : 1;
    /* nmi_mask - Bits[8:8], RW, default = 1'b1 
       1
     */
    UINT32 init_mask : 1;
    /* init_mask - Bits[9:9], RW, default = 1'b1 
       1
     */
    UINT32 smi_mask : 1;
    /* smi_mask - Bits[10:10], RW, default = 1'b1 
       1
     */
    UINT32 intr_mask : 1;
    /* intr_mask - Bits[11:11], RW, default = 1'b1 
       1
     */
    UINT32 a20m_mask : 1;
    /* a20m_mask - Bits[12:12], RW, default = 1'b1 
       1
     */
    UINT32 rsvd_13 : 18;
    /* rsvd_13 - Bits[30:13], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dbg_mux_en : 1;
    /* dbg_mux_en - Bits[31:31], RWS_L, default = 1'b0 
       Turns on the debug muxes (clocks, etc).
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} NCMEM_BASE_IIO_DFX_GLOBAL_DMI_STRUCT;


/* CSIPINTRC_1_IIO_DFX_GLOBAL_DMI_REG supported on:                           */
/*       SKX_A0 (0x4003F904)                                                  */
/*       SKX (0x4003F904)                                                     */
/* Register default value:              0x00001816                            */
#define CSIPINTRC_1_IIO_DFX_GLOBAL_DMI_REG 0x12034904
/* Struct format extracted from XML file SKX\0.7.7.CFG.xml.
 * generated by critter 07_7_0x904
 */
typedef union {
  struct {
    UINT32 nmi_invert : 1;
    /* nmi_invert - Bits[0:0], RW, default = 1'b0  */
    UINT32 init_invert : 1;
    /* init_invert - Bits[1:1], RW, default = 1'b1  */
    UINT32 smi_invert : 1;
    /* smi_invert - Bits[2:2], RW, default = 1'b1  */
    UINT32 intr_invert : 1;
    /* intr_invert - Bits[3:3], RW, default = 1'b0  */
    UINT32 a20m_invert : 1;
    /* a20m_invert - Bits[4:4], RW, default = 1'b1  */
    UINT32 ferr_invert : 1;
    /* ferr_invert - Bits[5:5], RW, default = 1'b0  */
    UINT32 rsvd_6 : 2;
    /* rsvd_6 - Bits[7:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 nmi_det : 1;
    /* nmi_det - Bits[8:8], RW, default = 1'b0  */
    UINT32 init_det : 1;
    /* init_det - Bits[9:9], RW, default = 1'b0  */
    UINT32 smi_det : 1;
    /* smi_det - Bits[10:10], RW, default = 1'b0  */
    UINT32 intr_det : 1;
    /* intr_det - Bits[11:11], RW, default = 1'b1  */
    UINT32 a20m_det : 1;
    /* a20m_det - Bits[12:12], RW, default = 1'b1  */
    UINT32 rsvd_13 : 19;
    /* rsvd_13 - Bits[31:13], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} CSIPINTRC_1_IIO_DFX_GLOBAL_DMI_STRUCT;


#endif /* IIO_DFX_GLOBAL_DMI_h */
