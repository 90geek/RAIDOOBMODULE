//
// This file contains 'Framework Code' and is licensed as such
// under the terms of your license agreement with Intel or your
// vendor.  This file may not be modified, except as allowed by
// additional terms of your license agreement.
//
// **************************************************************************
// *                                                                        *
// *      Intel Restricted Secret                                           *
// *                                                                        *
// *      Reference Code                                                    *
// *                                                                        *
// *      Copyright (c) 2007-2016, Intel Corporation.                       *
// *                                                                        *
// *      This software and associated documentation (if any) is furnished  *
// *      under a license and may only be used or copied in accordance      *
// *      with the terms of the license. Except as permitted by such        *
// *      license, no part of this software or documentation may be         *
// *      reproduced, stored in a retrieval system, or transmitted in any   *
// *      form or by any means without the express written consent of       *
// *      Intel Corporation.                                                *
// *                                                                        *
// *      This program has been developed by Intel Corporation.             *
// *      Licensee has Intel's permission to incorporate this source code   *
// *      into their product, royalty free.  This source code may NOT be    *
// *      redistributed to anyone without Intel's written permission.       *
// *                                                                        *
// *      Intel specifically disclaims all warranties, express or           *
// *      implied, and all liability, including consequential and other     *
// *      indirect damages, for the use of this code, including liability   *
// *      for infringement of any proprietary rights, and including the     *
// *      warranties of merchantability and fitness for a particular        *
// *      purpose.  Intel does not assume any responsibility for any        *
// *      errors which may appear in this code nor any responsibility to    *
// *      update it.                                                        *
// *                                                                        *
// **************************************************************************
// **************************************************************************
// *                                                                        *
// *  PURPOSE:                                                              *
// *                                                                        *
// *      This file contains Silicon register definitions.                  *
// *                                                                        *
// **************************************************************************
//
/* Date Stamp: 9/13/2016 */

#ifndef IIO_RAS_h
#define IIO_RAS_h

#include "DataTypes.h"

/* Device and Function specifications:                                        */
/* For all target CPUs:                                                       */
/* IIO_RAS_DEV 5                                                              */
/* IIO_RAS_FUN 2                                                              */

/* VID_IIO_RAS_REG supported on:                                              */
/*       SKX_A0 (0x2012A000)                                                  */
/*       SKX (0x2012A000)                                                     */
/* Register default value:              0x8086                                */
#define VID_IIO_RAS_REG 0x11022000
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x000
 */
typedef union {
  struct {
    UINT16 vendor_identification_number : 16;
    /* vendor_identification_number - Bits[15:0], RO, default = 16'b1000000010000110 
       The value is assigned by PCI-SIG to Intel.
     */
  } Bits;
  UINT16 Data;
} VID_IIO_RAS_STRUCT;


/* DID_IIO_RAS_REG supported on:                                              */
/*       SKX_A0 (0x2012A002)                                                  */
/*       SKX (0x2012A002)                                                     */
/* Register default value:              0x2035                                */
#define DID_IIO_RAS_REG 0x11022002
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x002
 */
typedef union {
  struct {
    UINT16 device_identification_number : 16;
    /* device_identification_number - Bits[15:0], RO, default = 16'b0010000000110101 
       //TODO_HSXA0_SYNC
       Device ID values vary from function to function. Bits 15:8 are equal to 0x0E for 
       Ivytown. The following list is a breakdown of the function groups.0x0E00 - 
       0x0E1F : PCI Express and DMI ports 
       0x0E20 - 0x0E3F : IO Features (CBDMA, APIC, VT, RAS, LT)
       0x0E40 - 0x0E5F : Performance Monitors
       0x0E60 - 0x0E7F : DFX
       0x0E80 - 0x0E9F : Quick Path Interface
       0x0EA0 - 0x0EBF : Home Agent/Memory Controller
       0x0EC0 - 0x0EDF : Power Management
       0x0EE0 - 0x0EFF : Cbo/Ring
       //TODO_HSXA0_SYNC
       //SKX:Oct 18 2012: Post HSX sync values should be as below
       Device ID values vary from function to function. Bits 15:8 are equal to 0x2F for 
       the processor. The following list is a breakdown of the function groups. 
       0x2F00 - 0x2F1F : PCI Express and DMI ports
       0x2F20 - 0x2F3F : IO Features (CBDMA, APIC, VT, RAS, Intel TXT)
       0x2F40 - 0x2F5F : Performance Monitors
       0x2F60 - 0x2F7F : DFX
       0x2F80 - 0x2F9F : Intel Quick Path Interface
       0x2FA0 - 0x2FBF : Home Agent/Memory Controller
       0x2FC0 - 0x2FDF : Power Management
       0x2FE0 - 0x2FFF : Cbo/Ring
       
     */
  } Bits;
  UINT16 Data;
} DID_IIO_RAS_STRUCT;


/* PCICMD_IIO_RAS_REG supported on:                                           */
/*       SKX_A0 (0x2012A004)                                                  */
/*       SKX (0x2012A004)                                                     */
/* Register default value:              0x0000                                */
#define PCICMD_IIO_RAS_REG 0x11022004
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x004
 */
typedef union {
  struct {
    UINT16 io_space_enable : 1;
    /* io_space_enable - Bits[0:0], RO, default = 1'b0 
       Hardwired to 0 since these devices don't decode any IO BARs
     */
    UINT16 memory_space_enable : 1;
    /* memory_space_enable - Bits[1:1], RO, default = 1'b0 
       Hardwired to 0 since these devices don't decode any memory BARs
     */
    UINT16 bus_master_enable : 1;
    /* bus_master_enable - Bits[2:2], RO, default = 1'b0 
       Hardwired to 0 since these devices don't generate any transactions
     */
    UINT16 special_cycle_enable : 1;
    /* special_cycle_enable - Bits[3:3], RO, default = 1'b0 
       Not applicable. Hardwired to 0.
     */
    UINT16 memory_write_and_invalidate_enable : 1;
    /* memory_write_and_invalidate_enable - Bits[4:4], RO, default = 1'b0 
       Not applicable to internal devices. Hardwired to 0.
     */
    UINT16 vga_palette_snoop_enable : 1;
    /* vga_palette_snoop_enable - Bits[5:5], RO, default = 1'b0 
       Not applicable to internal devices. Hardwired to 0.
     */
    UINT16 parity_error_response : 1;
    /* parity_error_response - Bits[6:6], RO, default = 1'b0 
       This bit has no impact on error reporting from these devices
     */
    UINT16 idsel_stepping_wait_cycle_control : 1;
    /* idsel_stepping_wait_cycle_control - Bits[7:7], RO, default = 1'b0 
       Not applicable to internal devices. Hardwired to 0.
     */
    UINT16 serr_enable : 1;
    /* serr_enable - Bits[8:8], RO, default = 1'b0 
       This bit has no impact on error reporting from these devices
     */
    UINT16 fast_back_to_back_enable : 1;
    /* fast_back_to_back_enable - Bits[9:9], RO, default = 1'b0 
       Not applicable to PCI Express and is hardwired to 0
     */
    UINT16 intx_disable : 1;
    /* intx_disable - Bits[10:10], RO, default = 1'b0 
       N/A for these devices
     */
    UINT16 rsvd : 5;
    /* rsvd - Bits[15:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} PCICMD_IIO_RAS_STRUCT;


/* PCISTS_IIO_RAS_REG supported on:                                           */
/*       SKX_A0 (0x2012A006)                                                  */
/*       SKX (0x2012A006)                                                     */
/* Register default value:              0x0010                                */
#define PCISTS_IIO_RAS_REG 0x11022006
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x006
 */
typedef union {
  struct {
    UINT16 rsvd_0 : 3;
    /* rsvd_0 - Bits[2:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 intx_status : 1;
    /* intx_status - Bits[3:3], RO, default = 1'b0 
       Hardwired to 0
     */
    UINT16 capabilities_list : 1;
    /* capabilities_list - Bits[4:4], RO, default = 1'b1 
       This bit indicates the presence of a capabilities list structure
     */
    UINT16 pci66mhz_capable : 1;
    /* pci66mhz_capable - Bits[5:5], RO, default = 1'b0 
       Not applicable to PCI Express. Hardwired to 0.
     */
    UINT16 rsvd_6 : 1;
    /* rsvd_6 - Bits[6:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 fast_back_to_back : 1;
    /* fast_back_to_back - Bits[7:7], RO, default = 1'b0 
       Not applicable to PCI Express. Hardwired to 0.
     */
    UINT16 master_data_parity_error : 1;
    /* master_data_parity_error - Bits[8:8], RO, default = 1'b0 
       Hardwired to 0
     */
    UINT16 devsel_timing : 2;
    /* devsel_timing - Bits[10:9], RO, default = 2'b00 
       Not applicable to PCI Express. Hardwired to 0.
     */
    UINT16 signaled_target_abort : 1;
    /* signaled_target_abort - Bits[11:11], RO, default = 1'b0 
       Hardwired to 0
     */
    UINT16 received_target_abort : 1;
    /* received_target_abort - Bits[12:12], RO, default = 1'b0 
       Hardwired to 0
     */
    UINT16 received_master_abort : 1;
    /* received_master_abort - Bits[13:13], RO, default = 1'b0 
       Hardwired to 0
     */
    UINT16 signaled_system_error : 1;
    /* signaled_system_error - Bits[14:14], RO, default = 1'b0 
       Hardwired to 0
     */
    UINT16 detected_parity_error : 1;
    /* detected_parity_error - Bits[15:15], RO, default = 1'b0 
       This bit is set when the device receives a packet on the primary side with an 
       uncorrectable data error (including a packet with poison bit set) or an 
       uncorrectable address/control parity error. The setting of this bit is 
       regardless of the Parity Error Response bit (PERRE) in the PCICMD register. 
       R2PCIe will never set this bit. 
     */
  } Bits;
  UINT16 Data;
} PCISTS_IIO_RAS_STRUCT;


/* RID_IIO_RAS_REG supported on:                                              */
/*       SKX_A0 (0x1012A008)                                                  */
/*       SKX (0x1012A008)                                                     */
/* Register default value:              0x00                                  */
#define RID_IIO_RAS_REG 0x11021008
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * Revision ID
 */
typedef union {
  struct {
    UINT8 revision_id : 8;
    /* revision_id - Bits[7:0], RO, default = 8'h0 
       
       	  Revision ID.
       	
     */
  } Bits;
  UINT8 Data;
} RID_IIO_RAS_STRUCT;


/* CCR_N0_IIO_RAS_REG supported on:                                           */
/*       SKX_A0 (0x1012A009)                                                  */
/*       SKX (0x1012A009)                                                     */
/* Register default value:              0x00                                  */
#define CCR_N0_IIO_RAS_REG 0x11021009
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * Class Code Register
 */
typedef union {
  struct {
    UINT8 interface : 8;
    /* interface - Bits[7:0], RO, default = 8'h0 
       
       	  Base revision.
       	
     */
  } Bits;
  UINT8 Data;
} CCR_N0_IIO_RAS_STRUCT;


/* CCR_N1_IIO_RAS_REG supported on:                                           */
/*       SKX_A0 (0x2012A00A)                                                  */
/*       SKX (0x2012A00A)                                                     */
/* Register default value:              0x0880                                */
#define CCR_N1_IIO_RAS_REG 0x1102200A
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * Class Code Register
 */
typedef union {
  struct {
    UINT16 sub_class : 8;
    /* sub_class - Bits[7:0], RO, default = 8'h80 
       
       	  Base revision.
       	
     */
    UINT16 base_class : 8;
    /* base_class - Bits[15:8], RO, default = 8'h8 
       
       	  Base revision.
       	
     */
  } Bits;
  UINT16 Data;
} CCR_N1_IIO_RAS_STRUCT;


/* CLSR_IIO_RAS_REG supported on:                                             */
/*       SKX_A0 (0x1012A00C)                                                  */
/*       SKX (0x1012A00C)                                                     */
/* Register default value:              0x00                                  */
#define CLSR_IIO_RAS_REG 0x1102100C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x00c
 */
typedef union {
  struct {
    UINT8 cacheline_size : 8;
    /* cacheline_size - Bits[7:0], RW, default = 8'b00000000 
       This register is set as RW for compatibility reasons only. Cacheline size for 
       processor is always 64B. 
     */
  } Bits;
  UINT8 Data;
} CLSR_IIO_RAS_STRUCT;


/* HDR_IIO_RAS_REG supported on:                                              */
/*       SKX_A0 (0x1012A00E)                                                  */
/*       SKX (0x1012A00E)                                                     */
/* Register default value:              0x80                                  */
#define HDR_IIO_RAS_REG 0x1102100E
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x00e
 */
typedef union {
  struct {
    UINT8 configuration_layout : 7;
    /* configuration_layout - Bits[6:0], RO, default = 7'b0000000 
       This field identifies the format of the configuration header layout. It is Type 
       0 for all these devices. The default is 00h, indicating a 'endpoint device'. 
     */
    UINT8 multi_function_device : 1;
    /* multi_function_device - Bits[7:7], RO, default = 1'b1 
       This bit defaults to 1b since all these devices are multi-function
     */
  } Bits;
  UINT8 Data;
} HDR_IIO_RAS_STRUCT;


/* SVID_IIO_RAS_REG supported on:                                             */
/*       SKX_A0 (0x2012A02C)                                                  */
/*       SKX (0x2012A02C)                                                     */
/* Register default value:              0x0000                                */
#define SVID_IIO_RAS_REG 0x1102202C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x02c
 */
typedef union {
  struct {
    UINT16 subsystem_vendor_identification_number : 16;
    /* subsystem_vendor_identification_number - Bits[15:0], RW_O, default = 16'b0000000000000000 
       The default value specifies Intel but can be set to any value once after reset.
     */
  } Bits;
  UINT16 Data;
} SVID_IIO_RAS_STRUCT;


/* SDID_IIO_RAS_REG supported on:                                             */
/*       SKX_A0 (0x2012A02E)                                                  */
/*       SKX (0x2012A02E)                                                     */
/* Register default value:              0x0000                                */
#define SDID_IIO_RAS_REG 0x1102202E
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x02e
 */
typedef union {
  struct {
    UINT16 subsystem_device_identification_number : 16;
    /* subsystem_device_identification_number - Bits[15:0], RW_O, default = 16'b0000000000000000 
       Assigned by the subsystem vendor to uniquely identify the subsystem
     */
  } Bits;
  UINT16 Data;
} SDID_IIO_RAS_STRUCT;


/* CAPPTR_IIO_RAS_REG supported on:                                           */
/*       SKX_A0 (0x1012A034)                                                  */
/*       SKX (0x1012A034)                                                     */
/* Register default value:              0x40                                  */
#define CAPPTR_IIO_RAS_REG 0x11021034
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x034
 */
typedef union {
  struct {
    UINT8 capability_pointer : 8;
    /* capability_pointer - Bits[7:0], RO, default = 8'b01000000 
       Points to the first capability structure for the device which is the PCIe 
       capability. 
     */
  } Bits;
  UINT8 Data;
} CAPPTR_IIO_RAS_STRUCT;


/* INTL_IIO_RAS_REG supported on:                                             */
/*       SKX_A0 (0x1012A03C)                                                  */
/*       SKX (0x1012A03C)                                                     */
/* Register default value:              0x00                                  */
#define INTL_IIO_RAS_REG 0x1102103C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x03c
 */
typedef union {
  struct {
    UINT8 interrupt_line : 8;
    /* interrupt_line - Bits[7:0], RO, default = 8'b00000000 
       N/A for these devices
     */
  } Bits;
  UINT8 Data;
} INTL_IIO_RAS_STRUCT;


/* INTPIN_IIO_RAS_REG supported on:                                           */
/*       SKX_A0 (0x1012A03D)                                                  */
/*       SKX (0x1012A03D)                                                     */
/* Register default value:              0x00                                  */
#define INTPIN_IIO_RAS_REG 0x1102103D
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x03d
 */
typedef union {
  struct {
    UINT8 interrupt_pin : 8;
    /* interrupt_pin - Bits[7:0], RO, default = 8'b00000000 
       N/A since these devices do not generate any interrupt on their own
     */
  } Bits;
  UINT8 Data;
} INTPIN_IIO_RAS_STRUCT;


/* PXPCAPID_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x1012A040)                                                  */
/*       SKX (0x1012A040)                                                     */
/* Register default value:              0x10                                  */
#define PXPCAPID_IIO_RAS_REG 0x11021040
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x040
 */
typedef union {
  struct {
    UINT8 capability_id : 8;
    /* capability_id - Bits[7:0], RO, default = 8'b00010000 
       Provides the PCI Express capability ID assigned by PCI-SIG.
     */
  } Bits;
  UINT8 Data;
} PXPCAPID_IIO_RAS_STRUCT;


/* PXPNXTPTR_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x1012A041)                                                  */
/*       SKX (0x1012A041)                                                     */
/* Register default value:              0x00                                  */
#define PXPNXTPTR_IIO_RAS_REG 0x11021041
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x041
 */
typedef union {
  struct {
    UINT8 next_ptr : 8;
    /* next_ptr - Bits[7:0], RO, default = 8'b00000000 
       This field is set to the PCI PM capability.
     */
  } Bits;
  UINT8 Data;
} PXPNXTPTR_IIO_RAS_STRUCT;


/* PXPCAP_IIO_RAS_REG supported on:                                           */
/*       SKX_A0 (0x2012A042)                                                  */
/*       SKX (0x2012A042)                                                     */
/* Register default value:              0x0092                                */
#define PXPCAP_IIO_RAS_REG 0x11022042
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x042
 */
typedef union {
  struct {
    UINT16 capability_version : 4;
    /* capability_version - Bits[3:0], RO, default = 4'b0010 
       This field identifies the version of the PCI Express capability structure. Set 
       to 2h for PCI Express and DMA devices for compliance with the extended base 
       registers. 
     */
    UINT16 device_port_type : 4;
    /* device_port_type - Bits[7:4], RO, default = 4'b1001 
       This field identifies the type of device. It is set to for the DMA to indicate 
       root complex integrated endpoint device. 
     */
    UINT16 slot_implemented_n_a : 1;
    /* slot_implemented_n_a - Bits[8:8], RO, default = 1'b0  */
    UINT16 interrupt_message_number_n_a : 5;
    /* interrupt_message_number_n_a - Bits[13:9], RO, default = 5'b00000  */
    UINT16 rsvd : 2;
    /* rsvd - Bits[15:14], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} PXPCAP_IIO_RAS_STRUCT;




















/* IRPPERRSV_N0_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A080)                                                  */
/*       SKX (0x4012A080)                                                     */
/* Register default value:              0x28200150                            */
#define IRPPERRSV_N0_IIO_RAS_REG 0x11024080
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x080
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 2;
    /* rsvd_0 - Bits[1:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 wrcache_correcc_error : 2;
    /* wrcache_correcc_error - Bits[3:2], RWS, default = 2'b00 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 protocol_rcvd_poison : 2;
    /* protocol_rcvd_poison - Bits[5:4], RWS, default = 2'b01 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 wrcache_uncecc_error : 2;
    /* wrcache_uncecc_error - Bits[7:6], RWS, default = 2'b01 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 csr_acc_32b_unaligned : 2;
    /* csr_acc_32b_unaligned - Bits[9:8], RWS, default = 2'b01 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 rsvd_10 : 10;
    /* rsvd_10 - Bits[19:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_rcvd_unexprsp : 2;
    /* protocol_rcvd_unexprsp - Bits[21:20], RWS, default = 2'b10 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 rsvd_22 : 4;
    /* rsvd_22 - Bits[25:22], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_qt_overflow_underflow : 2;
    /* protocol_qt_overflow_underflow - Bits[27:26], RWS, default = 2'b10 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 protocol_parity_error : 2;
    /* protocol_parity_error - Bits[29:28], RWS, default = 2'b10 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 rsvd_30 : 2;
    /* rsvd_30 - Bits[31:30], n/a, default = n/a 
       This field was split. It's value spans this field and the field of similar name 
       in the next/preceding struct. 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPPERRSV_N0_IIO_RAS_STRUCT;




/* MIERRSV_IIO_RAS_REG supported on:                                          */
/*       SKX_A0 (0x4012A090)                                                  */
/*       SKX (0x4012A090)                                                     */
/* Register default value:              0x00000000                            */
#define MIERRSV_IIO_RAS_REG 0x11024090
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x090
 */
typedef union {
  struct {
    UINT32 cfg_reg_par : 2;
    /* cfg_reg_par - Bits[1:0], RWS, default = 2'b00  */
    UINT32 smbus_port_sts : 2;
    /* smbus_port_sts - Bits[3:2], RWS, default = 2'b00 
       There is no SMBus, so this is unused.
     */
    UINT32 jtag_tap_sts : 2;
    /* jtag_tap_sts - Bits[5:4], RWS, default = 2'b00  */
    UINT32 vpp_err_sts : 2;
    /* vpp_err_sts - Bits[7:6], RWS, default = 2'b00  */
    UINT32 rsvd_8 : 2;
    UINT32 rsvd : 22;
    /* rsvd - Bits[31:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} MIERRSV_IIO_RAS_STRUCT;


/* PCIERRSV_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A094)                                                  */
/*       SKX (0x4012A094)                                                     */
/* Register default value:              0x00000024                            */
#define PCIERRSV_IIO_RAS_REG 0x11024094
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register allows remapping of the PCI-E errors to the IIO error severity.
 */
typedef union {
  struct {
    UINT32 pciecorerr_map : 2;
    /* pciecorerr_map - Bits[1:0], RWS, default = 2'b00 
       10: Map this PCI-E error type to Error Severity 2
       01: Map this PCI-E error type to Error Severity 1
       00: Map this PCI-E error type to Error Severity 0
     */
    UINT32 pcienonfaterr_map : 2;
    /* pcienonfaterr_map - Bits[3:2], RWS, default = 2'b01 
       10: Map this PCI-E error type to Error Severity 2
       01: Map this PCI-E error type to Error Severity 1
       00: Map this PCI-E error type to Error Severity 0
     */
    UINT32 pciefaterr_map : 2;
    /* pciefaterr_map - Bits[5:4], RWS, default = 2'b10 
       10: Map this PCI-E error type to Error Severity 2
       01: Map this PCI-E error type to Error Severity 1
       00: Map this PCI-E error type to Error Severity 0
     */
    UINT32 rsvd : 26;
    /* rsvd - Bits[31:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} PCIERRSV_IIO_RAS_STRUCT;


/* VIRAL_IIO_RAS_REG supported on:                                            */
/*       SKX_A0 (0x4012A0A0)                                                  */
/*       SKX (0x4012A0A0)                                                     */
/* Register default value:              0x00000000                            */
#define VIRAL_IIO_RAS_REG 0x110240A0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register provides the option to generate viral alert upon the detection of 
 * fatal error. Viral is not officially supported in JKT but am still leaving it in 
 * here because IVB might need it. 
 */
typedef union {
  struct {
    UINT32 iio_fatal_viral_alert_enable : 1;
    /* iio_fatal_viral_alert_enable - Bits[0:0], RW, default = 1'b0 
       1
     */
    UINT32 iio_signal_global_fatal : 1;
    /* iio_signal_global_fatal - Bits[1:1], RW, default = 1'b0 
       1
     */
    UINT32 iio_global_viral_mask : 1;
    /* iio_global_viral_mask - Bits[2:2], RW, default = 1'b0 
       1
     */
    UINT32 generate_viral_alert : 1;
    /* generate_viral_alert - Bits[3:3], RW_L, default = 1'b0 
       1
     */
    UINT32 rsvd : 26;
    /* rsvd - Bits[29:4], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 iio_viral_status : 1;
    /* iio_viral_status - Bits[30:30], RW1CS, default = 1'b0 
       1
     */
    UINT32 iio_viral_state : 1;
    /* iio_viral_state - Bits[31:31], RW1C, default = 1'b0 
       1
     */
  } Bits;
  UINT32 Data;
} VIRAL_IIO_RAS_STRUCT;




/* LNERRMASK_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A19C)                                                  */
/*       SKX (0x4012A19C)                                                     */
/* Register default value:              0x00000000                            */
#define LNERRMASK_IIO_RAS_REG 0x1102419C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register masks the reporting of errors detected by the IIO local 
 * interfaces. An individual error control bit that is set masks error signaling of 
 * the particular local interface; software may set or clear the mask bit. Note 
 * that bit fields in this register can become reserved depending on the port 
 * configuration. For example, if the PCI-E port is configured as 2X8 ports, then 
 * only the corresponding PCI-E X8 bit fields are valid;  
 */
typedef union {
  struct {
    UINT32 csi_err_msk0 : 1;
    /* csi_err_msk0 - Bits[0:0], RW, default = 1'b0 
       irp/coherency
     */
    UINT32 csi_err_msk1 : 1;
    /* csi_err_msk1 - Bits[1:1], RW, default = 1'b0 
       not a valid source for skx.
     */
    UINT32 csip_err_msk0 : 1;
    /* csip_err_msk0 - Bits[2:2], RW, default = 1'b0 
       irpring
     */
    UINT32 csip_err_msk1 : 1;
    /* csip_err_msk1 - Bits[3:3], RW, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 rsvd_4 : 1;
    /* rsvd_4 - Bits[4:4], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 pcie_err_msk0 : 1;
    /* pcie_err_msk0 - Bits[5:5], RW, default = 1'b0 
       DMI.
     */
    UINT32 pcie_err_msk1 : 1;
    /* pcie_err_msk1 - Bits[6:6], RW, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 pcie_err_msk2 : 1;
    /* pcie_err_msk2 - Bits[7:7], RW, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 pcie_err_msk3 : 1;
    /* pcie_err_msk3 - Bits[8:8], RW, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 pcie_err_msk4 : 1;
    /* pcie_err_msk4 - Bits[9:9], RW, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 pcie_err_msk5 : 1;
    /* pcie_err_msk5 - Bits[10:10], RW, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 pcie_err_msk6 : 1;
    /* pcie_err_msk6 - Bits[11:11], RW, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 pcie_err_msk7 : 1;
    /* pcie_err_msk7 - Bits[12:12], RW, default = 1'b0 
       PCIe port a
     */
    UINT32 pcie_err_msk8 : 1;
    /* pcie_err_msk8 - Bits[13:13], RW, default = 1'b0 
       PCIe port b
     */
    UINT32 pcie_err_msk9 : 1;
    /* pcie_err_msk9 - Bits[14:14], RW, default = 1'b0 
       PCIe port c
     */
    UINT32 pcie_err_msk10 : 1;
    /* pcie_err_msk10 - Bits[15:15], RW, default = 1'b0 
       PCIe port d
     */
    UINT32 rsvd_16 : 4;
    /* rsvd_16 - Bits[19:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dmi_err_msk : 1;
    /* dmi_err_msk - Bits[20:20], RW, default = 1'b0 
       DMI
     */
    UINT32 therm_err_msk : 1;
    /* therm_err_msk - Bits[21:21], RW, default = 1'b0 
       OTC.
     */
    UINT32 dma_err_msk : 1;
    /* dma_err_msk - Bits[22:22], RW, default = 1'b0 
       CBDMA
     */
    UINT32 ioh_err_msk : 1;
    /* ioh_err_msk - Bits[23:23], RW, default = 1'b0 
       ITC
     */
    UINT32 mi_err_msk : 1;
    /* mi_err_msk - Bits[24:24], RW, default = 1'b0 
       Misc.
     */
    UINT32 vtd_err_msk : 1;
    /* vtd_err_msk - Bits[25:25], RW, default = 1'b0 
       VTD.
     */
    UINT32 rsvd_26 : 6;
    /* rsvd_26 - Bits[31:26], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LNERRMASK_IIO_RAS_STRUCT;


/* LFERRMASK_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A1A0)                                                  */
/*       SKX (0x4012A1A0)                                                     */
/* Register default value:              0x00000000                            */
#define LFERRMASK_IIO_RAS_REG 0x110241A0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register masks the reporting of errors detected by the IIO local 
 * interfaces. An individual error control bit that is set masks error signaling of 
 * the particular local interface; software may set or clear the mask bit. Note 
 * that bit fields in this register can become reserved depending on the port 
 * configuration. For example, if the PCI-E port is configured as 2X8 ports, then 
 * only the corresponding PCI-E X8 bit fields are valid;  
 */
typedef union {
  struct {
    UINT32 csi_err_msk0 : 1;
    /* csi_err_msk0 - Bits[0:0], RW, default = 1'b0 
       IRP/COherency.
     */
    UINT32 csi_err_msk1 : 1;
    /* csi_err_msk1 - Bits[1:1], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 csip_err_msk0 : 1;
    /* csip_err_msk0 - Bits[2:2], RW, default = 1'b0 
       IRPRING.
     */
    UINT32 csip_err_msk1 : 1;
    /* csip_err_msk1 - Bits[3:3], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 rsvd_4 : 1;
    /* rsvd_4 - Bits[4:4], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 pcie_err_msk0 : 1;
    /* pcie_err_msk0 - Bits[5:5], RW, default = 1'b0 
       DMI
     */
    UINT32 pcie_err_msk1 : 1;
    /* pcie_err_msk1 - Bits[6:6], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk2 : 1;
    /* pcie_err_msk2 - Bits[7:7], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk3 : 1;
    /* pcie_err_msk3 - Bits[8:8], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk4 : 1;
    /* pcie_err_msk4 - Bits[9:9], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk5 : 1;
    /* pcie_err_msk5 - Bits[10:10], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk6 : 1;
    /* pcie_err_msk6 - Bits[11:11], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk7 : 1;
    /* pcie_err_msk7 - Bits[12:12], RW, default = 1'b0 
       PCIe port a
     */
    UINT32 pcie_err_msk8 : 1;
    /* pcie_err_msk8 - Bits[13:13], RW, default = 1'b0 
       PCIe port b
     */
    UINT32 pcie_err_msk9 : 1;
    /* pcie_err_msk9 - Bits[14:14], RW, default = 1'b0 
       PCIe port c
     */
    UINT32 pcie_err_msk10 : 1;
    /* pcie_err_msk10 - Bits[15:15], RW, default = 1'b0 
       PCIe port d
     */
    UINT32 rsvd_16 : 4;
    /* rsvd_16 - Bits[19:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dmi_err_msk : 1;
    /* dmi_err_msk - Bits[20:20], RW, default = 1'b0 
       DMI
     */
    UINT32 therm_err_msk : 1;
    /* therm_err_msk - Bits[21:21], RW, default = 1'b0 
       OTC
     */
    UINT32 dma_err_msk : 1;
    /* dma_err_msk - Bits[22:22], RW, default = 1'b0 
       CBDMA
     */
    UINT32 ioh_err_msk : 1;
    /* ioh_err_msk - Bits[23:23], RW, default = 1'b0 
       ITC
     */
    UINT32 mi_err_msk : 1;
    /* mi_err_msk - Bits[24:24], RW, default = 1'b0 
       MISC
     */
    UINT32 vtd_err_msk : 1;
    /* vtd_err_msk - Bits[25:25], RW, default = 1'b0 
       VTD.
     */
    UINT32 rsvd_26 : 6;
    /* rsvd_26 - Bits[31:26], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LFERRMASK_IIO_RAS_STRUCT;


/* LCERRMASK_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A1A4)                                                  */
/*       SKX (0x4012A1A4)                                                     */
/* Register default value:              0x00000000                            */
#define LCERRMASK_IIO_RAS_REG 0x110241A4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register masks the reporting of errors detected by the IIO local 
 * interfaces. An individual error control bit that is set masks error signaling of 
 * the particular local interface; software may set or clear the mask bit. Note 
 * that bit fields in this register can become reserved depending on the port 
 * configuration. For example, if the PCI-E port is configured as 2X8 ports, then 
 * only the corresponding PCI-E X8 bit fields are valid;  
 */
typedef union {
  struct {
    UINT32 csi_err_msk0 : 1;
    /* csi_err_msk0 - Bits[0:0], RW, default = 1'b0 
       irp/coherency
     */
    UINT32 csi_err_msk1 : 1;
    /* csi_err_msk1 - Bits[1:1], RW, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 csip_err_msk0 : 1;
    /* csip_err_msk0 - Bits[2:2], RW, default = 1'b0 
       irpring
     */
    UINT32 csip_err_msk1 : 1;
    /* csip_err_msk1 - Bits[3:3], RW, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 rsvd_4 : 1;
    /* rsvd_4 - Bits[4:4], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 pcie_err_msk0 : 1;
    /* pcie_err_msk0 - Bits[5:5], RW, default = 1'b0 
       DMI non legacy 
     */
    UINT32 pcie_err_msk1 : 1;
    /* pcie_err_msk1 - Bits[6:6], RW, default = 1'b0 
        Not a valid source for skx.
     */
    UINT32 pcie_err_msk2 : 1;
    /* pcie_err_msk2 - Bits[7:7], RW, default = 1'b0 
        Not a valid source for skx.
     */
    UINT32 pcie_err_msk3 : 1;
    /* pcie_err_msk3 - Bits[8:8], RW, default = 1'b0 
        Not a valid source for skx.
     */
    UINT32 pcie_err_msk4 : 1;
    /* pcie_err_msk4 - Bits[9:9], RW, default = 1'b0 
        Not a valid source for skx.
     */
    UINT32 pcie_err_msk5 : 1;
    /* pcie_err_msk5 - Bits[10:10], RW, default = 1'b0 
        Not a valid source for skx.
     */
    UINT32 pcie_err_msk6 : 1;
    /* pcie_err_msk6 - Bits[11:11], RW, default = 1'b0 
        Not a valid source for skx.
     */
    UINT32 pcie_err_msk7 : 1;
    /* pcie_err_msk7 - Bits[12:12], RW, default = 1'b0 
       PCIe port a 
     */
    UINT32 pcie_err_msk8 : 1;
    /* pcie_err_msk8 - Bits[13:13], RW, default = 1'b0 
       PCIe port b 
     */
    UINT32 pcie_err_msk9 : 1;
    /* pcie_err_msk9 - Bits[14:14], RW, default = 1'b0 
       PCIe port c 
     */
    UINT32 pcie_err_msk10 : 1;
    /* pcie_err_msk10 - Bits[15:15], RW, default = 1'b0 
       PCIe port d 
     */
    UINT32 rsvd_16 : 4;
    /* rsvd_16 - Bits[19:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dmi_err_msk : 1;
    /* dmi_err_msk - Bits[20:20], RW, default = 1'b0 
       DMI
     */
    UINT32 therm_err_msk : 1;
    /* therm_err_msk - Bits[21:21], RW, default = 1'b0 
       OTC.
     */
    UINT32 dma_err_msk : 1;
    /* dma_err_msk - Bits[22:22], RW, default = 1'b0 
       CBDMA
     */
    UINT32 ioh_err_msk : 1;
    /* ioh_err_msk - Bits[23:23], RW, default = 1'b0 
       ITC
     */
    UINT32 mi_err_msk : 1;
    /* mi_err_msk - Bits[24:24], RW, default = 1'b0 
       MIsc.
     */
    UINT32 vtd_err_msk : 1;
    /* vtd_err_msk - Bits[25:25], RW, default = 1'b0 
       VTD.
     */
    UINT32 mc_err_msk : 1;
    /* mc_err_msk - Bits[26:26], RW, default = 1'b0 
       iMC.
     */
    UINT32 rsvd_27 : 5;
    /* rsvd_27 - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LCERRMASK_IIO_RAS_STRUCT;


/* LCERRST_IIO_RAS_REG supported on:                                          */
/*       SKX_A0 (0x4012A1A8)                                                  */
/*       SKX (0x4012A1A8)                                                     */
/* Register default value:              0x00000000                            */
#define LCERRST_IIO_RAS_REG 0x110241A8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x1a8
 */
typedef union {
  struct {
    UINT32 csi0_err : 1;
    /* csi0_err - Bits[0:0], RW1CS, default = 1'b0 
       irp/coherency
     */
    UINT32 csi1_err : 1;
    /* csi1_err - Bits[1:1], RW1CS, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 csipro0 : 1;
    /* csipro0 - Bits[2:2], RW1CS, default = 1'b0 
       IRPRING.
     */
    UINT32 csipro1 : 1;
    /* csipro1 - Bits[3:3], RW1CS, default = 1'b0 
       Not a valid source for skx.
     */
    UINT32 rsvd_4 : 1;
    /* rsvd_4 - Bits[4:4], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 pcie0 : 1;
    /* pcie0 - Bits[5:5], RW1CS, default = 1'b0 
       DMI
     */
    UINT32 pcie1 : 1;
    /* pcie1 - Bits[6:6], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie2 : 1;
    /* pcie2 - Bits[7:7], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie3 : 1;
    /* pcie3 - Bits[8:8], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie4 : 1;
    /* pcie4 - Bits[9:9], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie5 : 1;
    /* pcie5 - Bits[10:10], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie6 : 1;
    /* pcie6 - Bits[11:11], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie7 : 1;
    /* pcie7 - Bits[12:12], RW1CS, default = 1'b0 
       PCIe port a 
     */
    UINT32 pcie8 : 1;
    /* pcie8 - Bits[13:13], RW1CS, default = 1'b0 
       PCIe port b 
     */
    UINT32 pcie9 : 1;
    /* pcie9 - Bits[14:14], RW1CS, default = 1'b0 
       PCIe port c 
     */
    UINT32 pcie10 : 1;
    /* pcie10 - Bits[15:15], RW1CS, default = 1'b0 
       PCIe port d 
     */
    UINT32 rsvd_16 : 4;
    /* rsvd_16 - Bits[19:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dmi : 1;
    /* dmi - Bits[20:20], RW1CS, default = 1'b0 
       DMI
     */
    UINT32 thermal : 1;
    /* thermal - Bits[21:21], RW1CS, default = 1'b0 
       OTC.
     */
    UINT32 dma : 1;
    /* dma - Bits[22:22], RW1CS, default = 1'b0 
       CBDMA
     */
    UINT32 ioh : 1;
    /* ioh - Bits[23:23], RW1CS, default = 1'b0 
       ITC
     */
    UINT32 mi : 1;
    /* mi - Bits[24:24], RW1CS, default = 1'b0 
       misc
     */
    UINT32 vtd : 1;
    /* vtd - Bits[25:25], RW1CS, default = 1'b0 
       vtd
     */
    UINT32 mc : 1;
    /* mc - Bits[26:26], RW1CS, default = 1'b0 
       iMC
     */
    UINT32 rsvd_27 : 5;
    /* rsvd_27 - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LCERRST_IIO_RAS_STRUCT;


/* LCFERRST_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A1AC)                                                  */
/*       SKX (0x4012A1AC)                                                     */
/* Register default value:              0x00000000                            */
#define LCFERRST_IIO_RAS_REG 0x110241AC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x1ac
 */
typedef union {
  struct {
    UINT32 log : 27;
    /* log - Bits[26:0], ROS_V, default = 27'b000000000000000000000000000 
       
       
       	  mc          (26:26) "iMC", 
       	  vtd         (25:25) "VTD" 
       	  mi          (24:24) "MISC" # not valid source for SKX 
       	  ioh         (23:23) "ITC" 
       	  dma         (22:22) "CBDMA" 
       	  thermal     (21:21) "OTC" 
       	  dmi         (20:20) "DMI" 
       	  pcie10      (15:15) "PCIe Port d" 
       	  pcie9       (14:14) "PCIe Port c" 
       	  pcie8       (13:13) "PCIe Port b" 
       	  pcie7       (12:12) "PCIe Port a" 
       	  pcie6       (11:11) # Not a valid Source for SKX 
       	  pcie5       (10:10) # Not a valid Source for SKX 
       	  pcie4       (09:09) # Not a valid Source for SKX 
       	  pcie3       (08:08) # Not a valid Source for SKX 
       	  pcie2       (07:07) # Not a valid Source for SKX 
       	  pcie1       (06:06) # Not a valid Source for SKX 
       	  pcie0       (05:05) "DMI Non-Legacy" 
       	  csipro1     (03:03) # Not a valid Source for SKX 
       	  csipro0     (02:02) "IRP Ring" 
       	  tras_csi1   (01:01) # Not a valid Source for SKX 
       	  tras_csi0   (00:00) "IRP/Coherency" 
               
     */
    UINT32 rsvd : 5;
    /* rsvd - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LCFERRST_IIO_RAS_STRUCT;


/* LCNERRST_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A1B8)                                                  */
/*       SKX (0x4012A1B8)                                                     */
/* Register default value:              0x00000000                            */
#define LCNERRST_IIO_RAS_REG 0x110241B8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x1b8
 */
typedef union {
  struct {
    UINT32 log : 27;
    /* log - Bits[26:0], ROS_V, default = 27'b000000000000000000000000000 
       
       	
       	  mc          (26:26) "iMC", 
       	  vtd         (25:25) "VTD" 
       	  mi          (24:24) "MISC" # not valid source for SKX 
       	  ioh         (23:23) "ITC" 
       	  dma         (22:22) "CBDMA" 
       	  thermal     (21:21) "OTC" 
       	  dmi         (20:20) "DMI" 
       	  pcie10      (15:15) "PCIe Port d" 
       	  pcie9       (14:14) "PCIe Port c" 
       	  pcie8       (13:13) "PCIe Port b" 
       	  pcie7       (12:12) "PCIe Port a" 
       	  pcie6       (11:11) # Not a valid Source for SKX 
       	  pcie5       (10:10) # Not a valid Source for SKX 
       	  pcie4       (09:09) # Not a valid Source for SKX 
       	  pcie3       (08:08) # Not a valid Source for SKX 
       	  pcie2       (07:07) # Not a valid Source for SKX 
       	  pcie1       (06:06) # Not a valid Source for SKX 
       	  pcie0       (05:05) "DMI Non-Legacy" 
       	  csipro1     (03:03) # Not a valid Source for SKX 
       	  csipro0     (02:02) "IRP Ring" 
       	  tras_csi1   (01:01) # Not a valid Source for SKX 
       	  tras_csi0   (00:00) "IRP/Coherency" 
       	
     */
    UINT32 rsvd : 5;
    /* rsvd - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LCNERRST_IIO_RAS_STRUCT;


/* LNERRST_IIO_RAS_REG supported on:                                          */
/*       SKX_A0 (0x4012A1C0)                                                  */
/*       SKX (0x4012A1C0)                                                     */
/* Register default value:              0x00000000                            */
#define LNERRST_IIO_RAS_REG 0x110241C0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register indicates the non-fatal error reported to the IIO global error 
 * logic. An individual error status bit that is set indicates that a particular 
 * local interface has detected an error. 
 */
typedef union {
  struct {
    UINT32 csi0_err : 1;
    /* csi0_err - Bits[0:0], RW1CS, default = 1'b0 
       IRP/Coherency
     */
    UINT32 csi1_err : 1;
    /* csi1_err - Bits[1:1], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 csipro0 : 1;
    /* csipro0 - Bits[2:2], RW1CS, default = 1'b0 
       IRPRING
     */
    UINT32 csipro1 : 1;
    /* csipro1 - Bits[3:3], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 rsvd_4 : 1;
    /* rsvd_4 - Bits[4:4], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 pcie0 : 1;
    /* pcie0 - Bits[5:5], RW1CS, default = 1'b0 
       DMI non legacy
     */
    UINT32 pcie1 : 1;
    /* pcie1 - Bits[6:6], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie2 : 1;
    /* pcie2 - Bits[7:7], RW1CS, default = 1'b0 
       1Not a valid source for SKX.
     */
    UINT32 pcie3 : 1;
    /* pcie3 - Bits[8:8], RW1CS, default = 1'b0 
       1Not a valid source for SKX.
     */
    UINT32 pcie4 : 1;
    /* pcie4 - Bits[9:9], RW1CS, default = 1'b0 
       1Not a valid source for SKX.
     */
    UINT32 pcie5 : 1;
    /* pcie5 - Bits[10:10], RW1CS, default = 1'b0 
       1Not a valid source for SKX.
     */
    UINT32 pcie6 : 1;
    /* pcie6 - Bits[11:11], RW1CS, default = 1'b0 
       1Not a valid source for SKX.
     */
    UINT32 pcie7 : 1;
    /* pcie7 - Bits[12:12], RW1CS, default = 1'b0 
       PCIe port a
     */
    UINT32 pcie8 : 1;
    /* pcie8 - Bits[13:13], RW1CS, default = 1'b0 
       PCIe port b
     */
    UINT32 pcie9 : 1;
    /* pcie9 - Bits[14:14], RW1CS, default = 1'b0 
       PCIe port c
     */
    UINT32 pcie10 : 1;
    /* pcie10 - Bits[15:15], RW1CS, default = 1'b0 
       PCIe port d
     */
    UINT32 rsvd_16 : 4;
    /* rsvd_16 - Bits[19:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dmi : 1;
    /* dmi - Bits[20:20], RW1CS, default = 1'b0 
       DMI
     */
    UINT32 thermal : 1;
    /* thermal - Bits[21:21], RW1CS, default = 1'b0 
       OTC
     */
    UINT32 dma : 1;
    /* dma - Bits[22:22], RW1CS, default = 1'b0 
       CBDMA
     */
    UINT32 ioh : 1;
    /* ioh - Bits[23:23], RW1CS, default = 1'b0 
       ITC
     */
    UINT32 mi : 1;
    /* mi - Bits[24:24], RW1CS, default = 1'b0 
       MISC.
     */
    UINT32 vtd : 1;
    /* vtd - Bits[25:25], RW1CS, default = 1'b0 
       VTD
     */
    UINT32 rsvd_26 : 6;
    /* rsvd_26 - Bits[31:26], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LNERRST_IIO_RAS_STRUCT;


/* LFERRST_IIO_RAS_REG supported on:                                          */
/*       SKX_A0 (0x4012A1C4)                                                  */
/*       SKX (0x4012A1C4)                                                     */
/* Register default value:              0x00000000                            */
#define LFERRST_IIO_RAS_REG 0x110241C4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register indicates the fatal error reported to the IIO global error logic. 
 * An individual error status bit that is set indicates that a particular local 
 * interface has detected an error. 
 */
typedef union {
  struct {
    UINT32 tras_csi0 : 1;
    /* tras_csi0 - Bits[0:0], RW1CS, default = 1'b0 
       IRP/COherency.
     */
    UINT32 tras_csi1 : 1;
    /* tras_csi1 - Bits[1:1], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 csipro0 : 1;
    /* csipro0 - Bits[2:2], RW1CS, default = 1'b0 
       IRPRING.
     */
    UINT32 csipro1 : 1;
    /* csipro1 - Bits[3:3], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 rsvd_4 : 1;
    /* rsvd_4 - Bits[4:4], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 pcie0 : 1;
    /* pcie0 - Bits[5:5], RW1CS, default = 1'b0 
       DMI non legacy.
     */
    UINT32 pcie1 : 1;
    /* pcie1 - Bits[6:6], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie2 : 1;
    /* pcie2 - Bits[7:7], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie3 : 1;
    /* pcie3 - Bits[8:8], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie4 : 1;
    /* pcie4 - Bits[9:9], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie5 : 1;
    /* pcie5 - Bits[10:10], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie6 : 1;
    /* pcie6 - Bits[11:11], RW1CS, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie7 : 1;
    /* pcie7 - Bits[12:12], RW1CS, default = 1'b0 
       PCIe port a.
     */
    UINT32 pcie8 : 1;
    /* pcie8 - Bits[13:13], RW1CS, default = 1'b0 
       PCIe port b
     */
    UINT32 pcie9 : 1;
    /* pcie9 - Bits[14:14], RW1CS, default = 1'b0 
       PCIe port c
     */
    UINT32 pcie10 : 1;
    /* pcie10 - Bits[15:15], RW1CS, default = 1'b0 
       PCIe port d
     */
    UINT32 rsvd_16 : 4;
    /* rsvd_16 - Bits[19:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dmi : 1;
    /* dmi - Bits[20:20], RW1CS, default = 1'b0 
       DMI
     */
    UINT32 thermal : 1;
    /* thermal - Bits[21:21], RW1CS, default = 1'b0 
       OTC.
     */
    UINT32 dma : 1;
    /* dma - Bits[22:22], RW1CS, default = 1'b0 
       CBDMA.
     */
    UINT32 ioh : 1;
    /* ioh - Bits[23:23], RW1CS, default = 1'b0 
       ITC
     */
    UINT32 mi : 1;
    /* mi - Bits[24:24], RW1CS, default = 1'b0 
       MISC.
     */
    UINT32 vtd : 1;
    /* vtd - Bits[25:25], RW1CS, default = 1'b0 
       VTD.
     */
    UINT32 rsvd_26 : 6;
    /* rsvd_26 - Bits[31:26], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LFERRST_IIO_RAS_STRUCT;


/* LERRCTL_IIO_RAS_REG supported on:                                          */
/*       SKX_A0 (0x4012A1C8)                                                  */
/*       SKX (0x4012A1C8)                                                     */
/* Register default value:              0x00000000                            */
#define LERRCTL_IIO_RAS_REG 0x110241C8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register controls/masks the reporting of errors detected by the IIO local 
 * interfaces. An individual error control bit that is set masks error reporting of 
 * the particular local interface; software may set or clear the control bit. This 
 * register is sticky and can only be reset by PWRGOOD. Note that bit fields in 
 * this register can become reserved depending on the port configuration. For 
 * example, if the PCI-E port is configured as 2X8 ports, then only the 
 * corresponding PCI-EX8 bit fields are valid; other bits are unused and 
 * reserved.Global error control register masks errors reported from the local 
 * interface to the global register. If the an error reporting is disabled in this 
 * register, all errors from the corresponding local interface will not set any of 
 * the global error status bits. 
 */
typedef union {
  struct {
    UINT32 csi_err_msk0 : 1;
    /* csi_err_msk0 - Bits[0:0], RW, default = 1'b0 
       When set, disables logging of this error (IRP/Coherency).
     */
    UINT32 csi_err_msk1 : 1;
    /* csi_err_msk1 - Bits[1:1], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 csip_err_msk0 : 1;
    /* csip_err_msk0 - Bits[2:2], RW, default = 1'b0 
       IRP Ring
     */
    UINT32 csip_err_msk1 : 1;
    /* csip_err_msk1 - Bits[3:3], RW, default = 1'b0 
       Not a valid source for SKX
     */
    UINT32 rsvd_4 : 1;
    /* rsvd_4 - Bits[4:4], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 pcie_err_msk0 : 1;
    /* pcie_err_msk0 - Bits[5:5], RW, default = 1'b0 
       DMI non legacy.
     */
    UINT32 pcie_err_msk1 : 1;
    /* pcie_err_msk1 - Bits[6:6], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk2 : 1;
    /* pcie_err_msk2 - Bits[7:7], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk3 : 1;
    /* pcie_err_msk3 - Bits[8:8], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk4 : 1;
    /* pcie_err_msk4 - Bits[9:9], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk5 : 1;
    /* pcie_err_msk5 - Bits[10:10], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk6 : 1;
    /* pcie_err_msk6 - Bits[11:11], RW, default = 1'b0 
       Not a valid source for SKX.
     */
    UINT32 pcie_err_msk7 : 1;
    /* pcie_err_msk7 - Bits[12:12], RW, default = 1'b0 
       PCIe port a.
     */
    UINT32 pcie_err_msk8 : 1;
    /* pcie_err_msk8 - Bits[13:13], RW, default = 1'b0 
       PCIe port b.
     */
    UINT32 pcie_err_msk9 : 1;
    /* pcie_err_msk9 - Bits[14:14], RW, default = 1'b0 
       PCIe port c.
     */
    UINT32 pcie_err_msk10 : 1;
    /* pcie_err_msk10 - Bits[15:15], RW, default = 1'b0 
       PCIe port d.
     */
    UINT32 rsvd_16 : 4;
    /* rsvd_16 - Bits[19:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dmi_err_msk : 1;
    /* dmi_err_msk - Bits[20:20], RW, default = 1'b0 
       DMI.
     */
    UINT32 therm_err_msk : 1;
    /* therm_err_msk - Bits[21:21], RW, default = 1'b0 
       OTC.
     */
    UINT32 dma_err_msk : 1;
    /* dma_err_msk - Bits[22:22], RW, default = 1'b0 
       CBDMA.
     */
    UINT32 ioh_err_msk : 1;
    /* ioh_err_msk - Bits[23:23], RW, default = 1'b0 
       ITC.
     */
    UINT32 mi_err_msk : 1;
    /* mi_err_msk - Bits[24:24], RW, default = 1'b0 
       MISC
     */
    UINT32 vtd_err_msk : 1;
    /* vtd_err_msk - Bits[25:25], RW, default = 1'b0 
       VTD.
     */
    UINT32 mc_err_msk : 1;
    /* mc_err_msk - Bits[26:26], RW, default = 1'b0 
       iMC.
     */
    UINT32 rsvd_27 : 5;
    /* rsvd_27 - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LERRCTL_IIO_RAS_STRUCT;


/* LSYSST_IIO_RAS_REG supported on:                                           */
/*       SKX_A0 (0x4012A1CC)                                                  */
/*       SKX (0x4012A1CC)                                                     */
/* Register default value:              0x00000000                            */
#define LSYSST_IIO_RAS_REG 0x110241CC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register indicates the error severity signaled by the IIO global error 
 * logic. Setting of an individual error status bit indicates that the 
 * corresponding error severity has been detected by the IIO. 
 */
typedef union {
  struct {
    UINT32 sev0 : 1;
    /* sev0 - Bits[0:0], ROS_V, default = 1'b0 
       When set, IIO has detected an error of error severity 0
     */
    UINT32 sev1 : 1;
    /* sev1 - Bits[1:1], ROS_V, default = 1'b0 
       When set, IIO has detected an error of error severity 1
     */
    UINT32 sev2 : 1;
    /* sev2 - Bits[2:2], ROS_V, default = 1'b0 
       When set, IIO has detected an error of error severity 2
     */
    UINT32 sev3 : 1;
    /* sev3 - Bits[3:3], ROS_V, default = 1'b0 
       Thermal Alert Error (not used in JKT)
     */
    UINT32 sev4 : 1;
    /* sev4 - Bits[4:4], ROS_V, default = 1'b0 
       Thermal Trip Error (not used in JKT)
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LSYSST_IIO_RAS_STRUCT;


/* LSYSCTL_IIO_RAS_REG supported on:                                          */
/*       SKX_A0 (0x4012A1D0)                                                  */
/*       SKX (0x4012A1D0)                                                     */
/* Register default value:              0x00000000                            */
#define LSYSCTL_IIO_RAS_REG 0x110241D0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * The system event control register controls/masks the reporting the errors 
 * indicated by the system event status register. When cleared, the error severity 
 * does not cause the generation of the system event. When set, detection of the 
 * error severity generates system event(s) according to system event map register 
 * (SYSMAP). 
 */
typedef union {
  struct {
    UINT32 sev0_en : 1;
    /* sev0_en - Bits[0:0], RW, default = 1'b0  */
    UINT32 sev1_en : 1;
    /* sev1_en - Bits[1:1], RW, default = 1'b0  */
    UINT32 sev2_en : 1;
    /* sev2_en - Bits[2:2], RW, default = 1'b0  */
    UINT32 sev3_en : 1;
    /* sev3_en - Bits[3:3], RW, default = 1'b0 
       Thermal Alert Enable (not used in JKT)
     */
    UINT32 sev4_en : 1;
    /* sev4_en - Bits[4:4], RW, default = 1'b0 
       Thermal Trip Enable (not used in JKT)
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LSYSCTL_IIO_RAS_STRUCT;


/* SYSMAP_IIO_RAS_REG supported on:                                           */
/*       SKX_A0 (0x4012A1D4)                                                  */
/*       SKX (0x4012A1D4)                                                     */
/* Register default value:              0x00000050                            */
#define SYSMAP_IIO_RAS_REG 0x110241D4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 *  This register maps the error severity detected by the IIO to on of the system 
 * events. When an error is detected by the IIO, its corresponding error severity 
 * determines which system event to generate according to this register. 
 */
typedef union {
  struct {
    UINT32 sev0_map : 3;
    /* sev0_map - Bits[2:0], RWS, default = 3'b000 
       
       010: Generate NMI
       001: Generate SMI/PMI
       000: No inband message
       Others: Reserved
               
     */
    UINT32 sev1_map : 3;
    /* sev1_map - Bits[5:3], RWS, default = 3'b010 
       
       010: Generate NMI
       001: Generate SMI/PMI
       000: No inband message
       Others: Reserved
               
     */
    UINT32 sev2_map : 3;
    /* sev2_map - Bits[8:6], RWS, default = 3'b001 
       
       010: Generate NMI
       001: Generate SMI/PMI
       000: No inband message
       Others: Reserved
               
     */
    UINT32 rsvd : 23;
    /* rsvd - Bits[31:9], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} SYSMAP_IIO_RAS_STRUCT;


/* LBITMAP_IIO_RAS_REG supported on:                                          */
/*       SKX_A0 (0x4012A1D8)                                                  */
/*       SKX (0x4012A1D8)                                                     */
/* Register default value:              0x00000020                            */
#define LBITMAP_IIO_RAS_REG 0x110241D8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register defines a position of the bitmap in the global error status. 
 */
typedef union {
  struct {
    UINT32 bit_select : 5;
    /* bit_select - Bits[4:0], RWS, default = 5'b00000  */
    UINT32 select_agent_id : 1;
    /* select_agent_id - Bits[5:5], RWS, default = 1'b1  */
    UINT32 rsvd : 26;
    /* rsvd - Bits[31:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LBITMAP_IIO_RAS_STRUCT;


/* LFFERRST_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A1DC)                                                  */
/*       SKX (0x4012A1DC)                                                     */
/* Register default value:              0x00000000                            */
#define LFFERRST_IIO_RAS_REG 0x110241DC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x1dc
 */
typedef union {
  struct {
    UINT32 log : 27;
    /* log - Bits[26:0], ROS_V, default = 27'b000000000000000000000000000 
       This field logs the global error status register content when the first fatal 
       error is reported. This has the same format as the global error status register 
       (LFERRST). 
       	mc          (26:26) "iMC",
       	vtd         (25:25) "VTD" 
       	mi          (24:24) "MISC" # not valid source for SKX 
       	ioh         (23:23) "ITC" 
       	dma         (22:22) "CBDMA" 
       	thermal     (21:21) "OTC" 
       	dmi         (20:20) "DMI" 
       	pcie10      (15:15) "PCIe Port d" 
       	pcie9       (14:14) "PCIe Port c" 
       	pcie8       (13:13) "PCIe Port b" 
       	pcie7       (12:12) "PCIe Port a" 
       	pcie6       (11:11) # Not a valid Source for SKX 
       	pcie5       (10:10) # Not a valid Source for SKX 
       	pcie4       (09:09) # Not a valid Source for SKX 
       	pcie3       (08:08) # Not a valid Source for SKX 
       	pcie2       (07:07) # Not a valid Source for SKX 
       	pcie1       (06:06) # Not a valid Source for SKX 
       	pcie0       (05:05) "DMI Non-Legacy" 
       	csipro1     (03:03) # Not a valid Source for SKX 
       	csipro0     (02:02) "IRP Ring" 
       	tras_csi1   (01:01) # Not a valid Source for SKX 
       	tras_csi0   (00:00) "IRP/Coherency" 
       	
     */
    UINT32 rsvd : 5;
    /* rsvd - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LFFERRST_IIO_RAS_STRUCT;


/* LFNERRST_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A1E8)                                                  */
/*       SKX (0x4012A1E8)                                                     */
/* Register default value:              0x00000000                            */
#define LFNERRST_IIO_RAS_REG 0x110241E8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x1e8
 */
typedef union {
  struct {
    UINT32 log : 27;
    /* log - Bits[26:0], ROS_V, default = 27'b000000000000000000000000000 
       This filed logs the global error status register content when the next fatal 
       error is reported. This has the same format as the global error status register 
       (LFERRST). 
       	mc          (26:26) "iMC",
       	vtd         (25:25) "VTD" 
       	mi          (24:24) "MISC" # not valid source for SKX 
       	ioh         (23:23) "ITC" 
       	dma         (22:22) "CBDMA" 
       	thermal     (21:21) "OTC" 
       	dmi         (20:20) "DMI" 
       	pcie10      (15:15) "PCIe Port d" 
       	pcie9       (14:14) "PCIe Port c" 
       	pcie8       (13:13) "PCIe Port b" 
       	pcie7       (12:12) "PCIe Port a" 
       	pcie6       (11:11) # Not a valid Source for SKX 
       	pcie5       (10:10) # Not a valid Source for SKX 
       	pcie4       (09:09) # Not a valid Source for SKX 
       	pcie3       (08:08) # Not a valid Source for SKX 
       	pcie2       (07:07) # Not a valid Source for SKX 
       	pcie1       (06:06) # Not a valid Source for SKX 
       	pcie0       (05:05) "DMI Non-Legacy" 
       	csipro1     (03:03) # Not a valid Source for SKX 
       	csipro0     (02:02) "IRP Ring" 
       	tras_csi1   (01:01) # Not a valid Source for SKX 
       	tras_csi0   (00:00) "IRP/Coherency" 
       	
     */
    UINT32 rsvd : 5;
    /* rsvd - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LFNERRST_IIO_RAS_STRUCT;


/* LNFERRST_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A1EC)                                                  */
/*       SKX (0x4012A1EC)                                                     */
/* Register default value:              0x00000000                            */
#define LNFERRST_IIO_RAS_REG 0x110241EC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x1ec
 */
typedef union {
  struct {
    UINT32 log : 27;
    /* log - Bits[26:0], ROS_V, default = 27'b000000000000000000000000000 
       This filed logs the global error status register content when the first 
       non-fatal error is reported. This has the same format as the global error status 
       register (LNERRST). 
       	mc          (26:26) "iMC", 
       	vtd         (25:25) "VTD" 
       	mi          (24:24) "MISC" # not valid source for SKX 
       	ioh         (23:23) "ITC" 
       	dma         (22:22) "CBDMA" 
       	thermal     (21:21) "OTC" 
       	dmi         (20:20) "DMI" 
       	pcie10      (15:15) "PCIe Port d" 
       	pcie9       (14:14) "PCIe Port c" 
       	pcie8       (13:13) "PCIe Port b" 
       	pcie7       (12:12) "PCIe Port a" 
       	pcie6       (11:11) # Not a valid Source for SKX 
       	pcie5       (10:10) # Not a valid Source for SKX 
       	pcie4       (09:09) # Not a valid Source for SKX 
       	pcie3       (08:08) # Not a valid Source for SKX 
       	pcie2       (07:07) # Not a valid Source for SKX 
       	pcie1       (06:06) # Not a valid Source for SKX 
       	pcie0       (05:05) "DMI Non-Legacy" 
       	csipro1     (03:03) # Not a valid Source for SKX 
       	csipro0     (02:02) "IRP Ring" 
       	tras_csi1   (01:01) # Not a valid Source for SKX 
       	tras_csi0   (00:00) "IRP/Coherency" 
       	
     */
    UINT32 rsvd : 5;
    /* rsvd - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LNFERRST_IIO_RAS_STRUCT;


/* LNNERRST_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A1F8)                                                  */
/*       SKX (0x4012A1F8)                                                     */
/* Register default value:              0x00000000                            */
#define LNNERRST_IIO_RAS_REG 0x110241F8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x1f8
 */
typedef union {
  struct {
    UINT32 log : 27;
    /* log - Bits[26:0], ROS_V, default = 27'b000000000000000000000000000 
       This filed logs the global error status register content when the subsequent 
       non-fatal error is reported. This has the same format as the global error status 
       register (LNERRST). 
       	mc          (26:26) "iMC", 
       vtd         (25:25) "VTD" 
       mi          (24:24) "MISC" # not valid source for SKX 
       ioh         (23:23) "ITC" 
       dma         (22:22) "CBDMA" 
       thermal     (21:21) "OTC" 
       dmi         (20:20) "DMI" 
       pcie10      (15:15) "PCIe Port d" 
       pcie9       (14:14) "PCIe Port c" 
       pcie8       (13:13) "PCIe Port b" 
       pcie7       (12:12) "PCIe Port a" 
       pcie6       (11:11) # Not a valid Source for SKX 
       pcie5       (10:10) # Not a valid Source for SKX 
       pcie4       (09:09) # Not a valid Source for SKX 
       pcie3       (08:08) # Not a valid Source for SKX 
       pcie2       (07:07) # Not a valid Source for SKX 
       pcie1       (06:06) # Not a valid Source for SKX 
       pcie0       (05:05) "DMI Non-Legacy" 
       csipro1     (03:03) # Not a valid Source for SKX 
       csipro0     (02:02) "IRP Ring" 
       tras_csi1   (01:01) # Not a valid Source for SKX 
       tras_csi0   (00:00) "IRP/Coherency" 
       	
     */
    UINT32 rsvd : 5;
    /* rsvd - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} LNNERRST_IIO_RAS_STRUCT;


/* IRPRINGERRSV_N0_IIO_RAS_REG supported on:                                  */
/*       SKX_A0 (0x4012A200)                                                  */
/*       SKX (0x4012A200)                                                     */
/* Register default value:              0x000002AA                            */
#define IRPRINGERRSV_N0_IIO_RAS_REG 0x11024200
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x200
 */
typedef union {
  struct {
    UINT32 bl_parity_error : 2;
    /* bl_parity_error - Bits[1:0], RWS, default = 2'b10 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 snp_addr_parity_error : 2;
    /* snp_addr_parity_error - Bits[3:2], RWS, default = 2'b10 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 rxdata1_parity_error : 2;
    /* rxdata1_parity_error - Bits[5:4], RWS, default = 2'b10 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 rxdata0_parity_error : 2;
    /* rxdata0_parity_error - Bits[7:6], RWS, default = 2'b10 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 blq_parity_error : 2;
    /* blq_parity_error - Bits[9:8], RWS, default = 2'b10 
       00: Error Severity Level 0 (Correctable)
       01: Error Severity Level 1 (Recoverable)
       10: Error Severity Level 2 (Fatal)
       11: Reserved
     */
    UINT32 rsvd : 22;
    /* rsvd - Bits[31:10], n/a, default = n/a 
       This field was split. It's value spans this field and the field of similar name 
       in the next/preceding struct. 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGERRSV_N0_IIO_RAS_STRUCT;




/* IRPRINGERRST_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A208)                                                  */
/*       SKX (0x4012A208)                                                     */
/* Register default value:              0x00000000                            */
#define IRPRINGERRST_IIO_RAS_REG 0x11024208
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register indicates the error detected by the Coherent Interface.
 */
typedef union {
  struct {
    UINT32 bl_parity_error : 1;
    /* bl_parity_error - Bits[0:0], RW1CS, default = 1'b0 
       in cache set0.
     */
    UINT32 snp_addr_parity_error : 1;
    /* snp_addr_parity_error - Bits[1:1], RW1CS, default = 1'b0 
       Parity error for in rxiv.
     */
    UINT32 rxdata1_parity_error : 1;
    /* rxdata1_parity_error - Bits[2:2], RW1CS, default = 1'b0 
       Parity error for in rxdq/rxdata1.
     */
    UINT32 rxdata0_parity_error : 1;
    /* rxdata0_parity_error - Bits[3:3], RW1CS, default = 1'b0 
       Parity error for in rxdq/rxdata0.
     */
    UINT32 blq_parity_error : 1;
    /* blq_parity_error - Bits[4:4], RW1CS, default = 1'b0 
       Parity error for in blq.
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGERRST_IIO_RAS_STRUCT;


/* IRPRINGERRCTL_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A20C)                                                  */
/*       SKX (0x4012A20C)                                                     */
/* Register default value:              0x00000000                            */
#define IRPRINGERRCTL_IIO_RAS_REG 0x1102420C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register enables the error status bit setting for a Coherent Interface 
 * detected error. Setting of the bit enables the setting of the corresponding 
 * error status bit in IRPPERRST register. If the bit is cleared, the corresponding 
 * error status will not be set. 
 */
typedef union {
  struct {
    UINT32 bl_parity_error : 1;
    /* bl_parity_error - Bits[0:0], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 snp_addr_parity_error : 1;
    /* snp_addr_parity_error - Bits[1:1], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 rxdata1_parity_error : 1;
    /* rxdata1_parity_error - Bits[2:2], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 rxdata0_parity_error : 1;
    /* rxdata0_parity_error - Bits[3:3], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 blq_parity_error : 1;
    /* blq_parity_error - Bits[4:4], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGERRCTL_IIO_RAS_STRUCT;


/* IRPRINGFFERRST_IIO_RAS_REG supported on:                                   */
/*       SKX_A0 (0x4012A210)                                                  */
/*       SKX (0x4012A210)                                                     */
/* Register default value:              0x00000000                            */
#define IRPRINGFFERRST_IIO_RAS_REG 0x11024210
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * The error status log indicates which error is causing the report of the first 
 * fatal error event. 
 */
typedef union {
  struct {
    UINT32 bl_parity_error : 1;
    /* bl_parity_error - Bits[0:0], ROS_V, default = 1'b0 
       logs parity errors on data from the IRPRING on the outbound path.
     */
    UINT32 snp_addr_parity_error : 1;
    /* snp_addr_parity_error - Bits[1:1], ROS_V, default = 1'b0 
       logs parity errors on address from rxiv.
     */
    UINT32 rxdata1_parity_error : 1;
    /* rxdata1_parity_error - Bits[2:2], ROS_V, default = 1'b0 
       logs parity errors on data from rxdq/rxdata1.
     */
    UINT32 rxdata0_parity_error : 1;
    /* rxdata0_parity_error - Bits[3:3], ROS_V, default = 1'b0 
       logs parity errors on data from rxdq/rxdata0.
     */
    UINT32 blq_parity_error : 1;
    /* blq_parity_error - Bits[4:4], ROS_V, default = 1'b0 
       logs parity errors on data from blq.
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGFFERRST_IIO_RAS_STRUCT;


/* IRPRINGFNERRST_IIO_RAS_REG supported on:                                   */
/*       SKX_A0 (0x4012A214)                                                  */
/*       SKX (0x4012A214)                                                     */
/* Register default value:              0x00000000                            */
#define IRPRINGFNERRST_IIO_RAS_REG 0x11024214
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * The error status log indicates which error is causing the report of the next 
 * fatal error event (any event that is not the first). 
 */
typedef union {
  struct {
    UINT32 bl_parity_error : 1;
    /* bl_parity_error - Bits[0:0], ROS_V, default = 1'b0 
       logs parity errors on data from the BL ring.
     */
    UINT32 snp_addr_parity_error : 1;
    /* snp_addr_parity_error - Bits[1:1], ROS_V, default = 1'b0 
       logs parity errors on address from the rxiv.
     */
    UINT32 rxdata1_parity_error : 1;
    /* rxdata1_parity_error - Bits[2:2], ROS_V, default = 1'b0 
       logs parity errors on data from rxdq/rxdata1.
     */
    UINT32 rxdata0_parity_error : 1;
    /* rxdata0_parity_error - Bits[3:3], ROS_V, default = 1'b0 
       logs parity errors on data from rxdq/rxdata0.
     */
    UINT32 blq_parity_error : 1;
    /* blq_parity_error - Bits[4:4], ROS_V, default = 1'b0 
       logs parity errors on data from blq.
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGFNERRST_IIO_RAS_STRUCT;


/* IRPRINGNFERRST_IIO_RAS_REG supported on:                                   */
/*       SKX_A0 (0x4012A218)                                                  */
/*       SKX (0x4012A218)                                                     */
/* Register default value:              0x00000000                            */
#define IRPRINGNFERRST_IIO_RAS_REG 0x11024218
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * The error status log indicates which error is causing the report of the first 
 * non-fatal error event. 
 */
typedef union {
  struct {
    UINT32 bl_parity_error : 1;
    /* bl_parity_error - Bits[0:0], ROS_V, default = 1'b0 
       logs parity errors on data from the BL ring.
     */
    UINT32 snp_addr_parity_error : 1;
    /* snp_addr_parity_error - Bits[1:1], ROS_V, default = 1'b0 
       logs parity errors on address in rxiv.
     */
    UINT32 rxdata1_parity_error : 1;
    /* rxdata1_parity_error - Bits[2:2], ROS_V, default = 1'b0 
       logs parity errors on data in rxdq/rxdata1.
     */
    UINT32 rxdata0_parity_error : 1;
    /* rxdata0_parity_error - Bits[3:3], ROS_V, default = 1'b0 
       logs parity errors on data in rxdq/rxdata0.
     */
    UINT32 blq_parity_error : 1;
    /* blq_parity_error - Bits[4:4], ROS_V, default = 1'b0 
       logs parity errors on data in blq.
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGNFERRST_IIO_RAS_STRUCT;


/* IRPRINGNNERRST_IIO_RAS_REG supported on:                                   */
/*       SKX_A0 (0x4012A21C)                                                  */
/*       SKX (0x4012A21C)                                                     */
/* Register default value:              0x00000000                            */
#define IRPRINGNNERRST_IIO_RAS_REG 0x1102421C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * The error status log indicates which error is causing the report of the next 
 * non-fatal error event (any event that is not the first). 
 */
typedef union {
  struct {
    UINT32 bl_parity_error : 1;
    /* bl_parity_error - Bits[0:0], ROS_V, default = 1'b0 
       logs parity errors on data from the BL ring.
     */
    UINT32 snp_addr_parity_error : 1;
    /* snp_addr_parity_error - Bits[1:1], ROS_V, default = 1'b0 
       logs parity errors on address in rxiv.
     */
    UINT32 rxdata1_parity_error : 1;
    /* rxdata1_parity_error - Bits[2:2], ROS_V, default = 1'b0 
       logs parity errors on data in rxdq/rxdata1.
     */
    UINT32 rxdata0_parity_error : 1;
    /* rxdata0_parity_error - Bits[3:3], ROS_V, default = 1'b0 
       logs parity errors on data in rxdq/rxdata0.
     */
    UINT32 blq_parity_error : 1;
    /* blq_parity_error - Bits[4:4], ROS_V, default = 1'b0 
       logs parity errors on data in blq.
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGNNERRST_IIO_RAS_STRUCT;


/* IRPRINGERRCNTSEL_IIO_RAS_REG supported on:                                 */
/*       SKX_A0 (0x4012A220)                                                  */
/*       SKX (0x4012A220)                                                     */
/* Register default value:              0x00000000                            */
#define IRPRINGERRCNTSEL_IIO_RAS_REG 0x11024220
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x220
 */
typedef union {
  struct {
    UINT32 irpring_error_count_select : 5;
    /* irpring_error_count_select - Bits[4:0], RW, default = 5'b0 
       See IRPRINGERRST for per bit description of each error. Each bit in this field 
       has the following behavior: 
       0: Do not select this error type for error counting
       1: Select this error type for error counting
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGERRCNTSEL_IIO_RAS_STRUCT;


/* IRPRINGERRCNT_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A224)                                                  */
/*       SKX (0x4012A224)                                                     */
/* Register default value:              0x00000000                            */
#define IRPRINGERRCNT_IIO_RAS_REG 0x11024224
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x224
 */
typedef union {
  struct {
    UINT32 errcnt : 7;
    /* errcnt - Bits[6:0], RW1CS, default = 7'b0000000 
       This counter accumulates errors that occur when the associated error type is 
       selected in the ERRCNTSEL register. 
       Notes:
       This register is cleared by writing 7Fh.
       Maximum counter available is 127d (7Fh)
     */
    UINT32 errovf : 1;
    /* errovf - Bits[7:7], RW1CS, default = 1'b0 
       Error Accumulator Overflow
       0: No overflow occurred
       1: Error overflow. The error count may not be valid.
     */
    UINT32 rsvd : 24;
    /* rsvd - Bits[31:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGERRCNT_IIO_RAS_STRUCT;


/* IRPRINGMISC_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A228)                                                  */
/*       SKX (0x4012A228)                                                     */
/* Register default value:              0x00000000                            */
#define IRPRINGMISC_IIO_RAS_REG 0x11024228
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register is a miscellaneous error log register, to be used for additional 
 * detailsabout an error; for eg. position of parity bits with error. 
 */
typedef union {
  struct {
    UINT32 bl_parity_bits : 5;
    /* bl_parity_bits - Bits[4:0], RW1CS, default = 5'b00000 
       A 1 in a particular bit position along with the error status bit set indicates 
       that the parity error occured in that bit position. 
       bit[4] is the byte enable parity.
       bit[3:0] is the data parity.
     */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPRINGMISC_IIO_RAS_STRUCT;


/* IRPP0ERRST_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A230)                                                  */
/*       SKX (0x4012A230)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0ERRST_IIO_RAS_REG 0x11024230
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register indicates the error detected by the Coherent Interface.
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 1;
    /* rsvd_0 - Bits[0:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 wrcache_correcc_error_cs0 : 1;
    /* wrcache_correcc_error_cs0 - Bits[1:1], RW1CS, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in 
       set0. 
     */
    UINT32 wrcache_correcc_error_cs1 : 1;
    /* wrcache_correcc_error_cs1 - Bits[2:2], RW1CS, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in 
       set1. 
     */
    UINT32 protocol_rcvd_poison : 1;
    /* protocol_rcvd_poison - Bits[3:3], RW1CS, default = 1'b0 
       A poisoned packet has been received from the Coherent Interface.
     */
    UINT32 wrcache_uncecc_error_cs0 : 1;
    /* wrcache_uncecc_error_cs0 - Bits[4:4], RW1CS, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set0.
     */
    UINT32 wrcache_uncecc_error_cs1 : 1;
    /* wrcache_uncecc_error_cs1 - Bits[5:5], RW1CS, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set1.
     */
    UINT32 csr_acc_32b_unaligned : 1;
    /* csr_acc_32b_unaligned - Bits[6:6], RW1CS, default = 1'b0  */
    UINT32 rsvd_7 : 3;
    /* rsvd_7 - Bits[9:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_rcvd_unexprsp : 1;
    /* protocol_rcvd_unexprsp - Bits[10:10], RW1CS, default = 1'b0 
       A completion has been received from the Coherent Interface that was unexpected.
     */
    UINT32 rsvd_11 : 2;
    /* rsvd_11 - Bits[12:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_qt_overflow_underflow : 1;
    /* protocol_qt_overflow_underflow - Bits[13:13], RW1CS, default = 1'b0 
       in cache set0.
     */
    UINT32 protocol_parity_error : 1;
    /* protocol_parity_error - Bits[14:14], RW1CS, default = 1'b0 
       logs parity errors on data from the IIO switch on the inbound path.
     */
    UINT32 rsvd_15 : 17;
    /* rsvd_15 - Bits[31:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPP0ERRST_IIO_RAS_STRUCT;


/* IRPP0ERRCTL_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A234)                                                  */
/*       SKX (0x4012A234)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0ERRCTL_IIO_RAS_REG 0x11024234
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register enables the error status bit setting for a Coherent Interface 
 * detected error. Setting of the bit enables the setting of the corresponding 
 * error status bit in IRPPERRST register. If the bit is cleared, the corresponding 
 * error status will not be set. 
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 1;
    /* rsvd_0 - Bits[0:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 wrcache_correcc_error_cs0 : 1;
    /* wrcache_correcc_error_cs0 - Bits[1:1], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 wrcache_correcc_error_cs1 : 1;
    /* wrcache_correcc_error_cs1 - Bits[2:2], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 protocol_rcvd_poison : 1;
    /* protocol_rcvd_poison - Bits[3:3], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 wrcache_uncecc_error_cs0 : 1;
    /* wrcache_uncecc_error_cs0 - Bits[4:4], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 wrcache_uncecc_error_cs1 : 1;
    /* wrcache_uncecc_error_cs1 - Bits[5:5], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 csr_acc_32b_unaligned : 1;
    /* csr_acc_32b_unaligned - Bits[6:6], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 rsvd_7 : 3;
    /* rsvd_7 - Bits[9:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_rcvd_unexprsp : 1;
    /* protocol_rcvd_unexprsp - Bits[10:10], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 rsvd_11 : 2;
    /* rsvd_11 - Bits[12:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_qt_overflow_underflow : 1;
    /* protocol_qt_overflow_underflow - Bits[13:13], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 protocol_parity_error : 1;
    /* protocol_parity_error - Bits[14:14], RWS, default = 1'b0 
       0: Disable error status logging for this error
       1: Enable Error status logging for this error
     */
    UINT32 rsvd_15 : 17;
    /* rsvd_15 - Bits[31:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPP0ERRCTL_IIO_RAS_STRUCT;


/* IRPP0FFERRST_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A238)                                                  */
/*       SKX (0x4012A238)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0FFERRST_IIO_RAS_REG 0x11024238
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * The error status log indicates which error is causing the report of the first 
 * fatal error event. 
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 1;
    /* rsvd_0 - Bits[0:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 wrcache_correcc_error_cs0 : 1;
    /* wrcache_correcc_error_cs0 - Bits[1:1], ROS_V, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in 
       set0. 
     */
    UINT32 wrcache_correcc_error_cs1 : 1;
    /* wrcache_correcc_error_cs1 - Bits[2:2], ROS_V, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in 
       set1. 
     */
    UINT32 protocol_rcvd_poison : 1;
    /* protocol_rcvd_poison - Bits[3:3], ROS_V, default = 1'b0 
       A poisoned packet has been received from the Coherent Interface.
     */
    UINT32 wrcache_uncecc_error_cs0 : 1;
    /* wrcache_uncecc_error_cs0 - Bits[4:4], ROS_V, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set0.
     */
    UINT32 wrcache_uncecc_error_cs1 : 1;
    /* wrcache_uncecc_error_cs1 - Bits[5:5], ROS_V, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set0.
     */
    UINT32 csr_acc_32b_unaligned : 1;
    /* csr_acc_32b_unaligned - Bits[6:6], ROS_V, default = 1'b0  */
    UINT32 rsvd_7 : 3;
    /* rsvd_7 - Bits[9:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_rcvd_unexprsp : 1;
    /* protocol_rcvd_unexprsp - Bits[10:10], ROS_V, default = 1'b0 
       A completion has been received from the Coherent Interface that was unexpected.
     */
    UINT32 rsvd_11 : 2;
    /* rsvd_11 - Bits[12:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_qt_overflow_underflow : 1;
    /* protocol_qt_overflow_underflow - Bits[13:13], ROS_V, default = 1'b0 
       in cache set0
     */
    UINT32 protocol_parity_error : 1;
    /* protocol_parity_error - Bits[14:14], ROS_V, default = 1'b0 
       logs parity errors on data from the IIO switch on the inbound path.
     */
    UINT32 rsvd_15 : 17;
    /* rsvd_15 - Bits[31:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPP0FFERRST_IIO_RAS_STRUCT;


/* IRPP0FNERRST_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A23C)                                                  */
/*       SKX (0x4012A23C)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0FNERRST_IIO_RAS_REG 0x1102423C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * The error status log indicates which error is causing the report of the next 
 * fatal error event (any event that is not the first). 
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 1;
    /* rsvd_0 - Bits[0:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 wrcache_correcc_error_cs0 : 1;
    /* wrcache_correcc_error_cs0 - Bits[1:1], ROS_V, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in 
       set0. 
     */
    UINT32 wrcache_correcc_error_cs1 : 1;
    /* wrcache_correcc_error_cs1 - Bits[2:2], ROS_V, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in 
       set1. 
     */
    UINT32 protocol_rcvd_poison : 1;
    /* protocol_rcvd_poison - Bits[3:3], ROS_V, default = 1'b0 
       A poisoned packet has been received from the Coherent Interface.
     */
    UINT32 wrcache_uncecc_error_cs0 : 1;
    /* wrcache_uncecc_error_cs0 - Bits[4:4], ROS_V, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set0.
     */
    UINT32 wrcache_uncecc_error_cs1 : 1;
    /* wrcache_uncecc_error_cs1 - Bits[5:5], ROS_V, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set1.
     */
    UINT32 csr_acc_32b_unaligned : 1;
    /* csr_acc_32b_unaligned - Bits[6:6], ROS_V, default = 1'b0  */
    UINT32 rsvd_7 : 3;
    /* rsvd_7 - Bits[9:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_rcvd_unexprsp : 1;
    /* protocol_rcvd_unexprsp - Bits[10:10], ROS_V, default = 1'b0 
       A completion has been received from the Coherent Interface that was unexpected.
     */
    UINT32 rsvd_11 : 2;
    /* rsvd_11 - Bits[12:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_qt_overflow_underflow : 1;
    /* protocol_qt_overflow_underflow - Bits[13:13], ROS_V, default = 1'b0 
       in cache set0.
     */
    UINT32 protocol_parity_error : 1;
    /* protocol_parity_error - Bits[14:14], ROS_V, default = 1'b0 
       logs parity errors on data from the IIO switch on the inbound path.
     */
    UINT32 rsvd_15 : 17;
    /* rsvd_15 - Bits[31:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPP0FNERRST_IIO_RAS_STRUCT;


/* IRPP0FFERRHD0_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A240)                                                  */
/*       SKX (0x4012A240)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0FFERRHD0_IIO_RAS_REG 0x11024240
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x240
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Logs the first DWORD of the header on an error condition
     */
  } Bits;
  UINT32 Data;
} IRPP0FFERRHD0_IIO_RAS_STRUCT;


/* IRPP0FFERRHD1_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A244)                                                  */
/*       SKX (0x4012A244)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0FFERRHD1_IIO_RAS_REG 0x11024244
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x244
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Logs the second DWORD of the header on an error condition
     */
  } Bits;
  UINT32 Data;
} IRPP0FFERRHD1_IIO_RAS_STRUCT;


/* IRPP0FFERRHD2_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A248)                                                  */
/*       SKX (0x4012A248)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0FFERRHD2_IIO_RAS_REG 0x11024248
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x248
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Logs the third DWORD of the header on an error condition
     */
  } Bits;
  UINT32 Data;
} IRPP0FFERRHD2_IIO_RAS_STRUCT;


/* IRPP0FFERRHD3_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A24C)                                                  */
/*       SKX (0x4012A24C)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0FFERRHD3_IIO_RAS_REG 0x1102424C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x24c
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Logs the fourth DWORD of the header on an error condition
     */
  } Bits;
  UINT32 Data;
} IRPP0FFERRHD3_IIO_RAS_STRUCT;


/* IRPP0NFERRST_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A250)                                                  */
/*       SKX (0x4012A250)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0NFERRST_IIO_RAS_REG 0x11024250
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * The error status log indicates which error is causing the report of the first 
 * non-fatal error event. 
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 1;
    /* rsvd_0 - Bits[0:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 wrcache_correcc_error_cs0 : 1;
    /* wrcache_correcc_error_cs0 - Bits[1:1], ROS_V, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in 
       set0. 
     */
    UINT32 wrcache_correcc_error_cs1 : 1;
    /* wrcache_correcc_error_cs1 - Bits[2:2], ROS_V, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in 
       set1. 
     */
    UINT32 protocol_rcvd_poison : 1;
    /* protocol_rcvd_poison - Bits[3:3], ROS_V, default = 1'b0 
       A poisoned packet has been received from the Coherent Interface.
     */
    UINT32 wrcache_uncecc_error_cs0 : 1;
    /* wrcache_uncecc_error_cs0 - Bits[4:4], ROS_V, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set0.
     */
    UINT32 wrcache_uncecc_error_cs1 : 1;
    /* wrcache_uncecc_error_cs1 - Bits[5:5], ROS_V, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set1.
     */
    UINT32 csr_acc_32b_unaligned : 1;
    /* csr_acc_32b_unaligned - Bits[6:6], ROS_V, default = 1'b0  */
    UINT32 rsvd_7 : 3;
    /* rsvd_7 - Bits[9:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_rcvd_unexprsp : 1;
    /* protocol_rcvd_unexprsp - Bits[10:10], ROS_V, default = 1'b0 
       A completion has been received from the Coherent Interface that was unexpected.
     */
    UINT32 rsvd_11 : 2;
    /* rsvd_11 - Bits[12:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_qt_overflow_underflow : 1;
    /* protocol_qt_overflow_underflow - Bits[13:13], ROS_V, default = 1'b0 
       in cache set0.
     */
    UINT32 protocol_parity_error : 1;
    /* protocol_parity_error - Bits[14:14], ROS_V, default = 1'b0 
       logs parity errors on data from the IIO switch on the inbound path.
     */
    UINT32 rsvd_15 : 17;
    /* rsvd_15 - Bits[31:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPP0NFERRST_IIO_RAS_STRUCT;


/* IRPP0NNERRST_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A254)                                                  */
/*       SKX (0x4012A254)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0NNERRST_IIO_RAS_REG 0x11024254
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * The error status log indicates which error is causing the report of the next 
 * non-fatal error event (any event that is not the first). 
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 1;
    /* rsvd_0 - Bits[0:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 wrcache_correcc_error_cs0 : 1;
    /* wrcache_correcc_error_cs0 - Bits[1:1], ROS_V, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in cs0.
     */
    UINT32 wrcache_correcc_error_cs1 : 1;
    /* wrcache_correcc_error_cs1 - Bits[2:2], ROS_V, default = 1'b0 
       A single bit ECC error was detected and corrected within the Write Cache in cs1.
     */
    UINT32 protocol_rcvd_poison : 1;
    /* protocol_rcvd_poison - Bits[3:3], ROS_V, default = 1'b0 
       A poisoned packet has been received from the Coherent Interface.
     */
    UINT32 wrcache_uncecc_error_cs0 : 1;
    /* wrcache_uncecc_error_cs0 - Bits[4:4], ROS_V, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set0.
     */
    UINT32 wrcache_uncecc_error_cs1 : 1;
    /* wrcache_uncecc_error_cs1 - Bits[5:5], ROS_V, default = 1'b0 
       A double bit ECC error was detected within the Write Cache in set1.
     */
    UINT32 csr_acc_32b_unaligned : 1;
    /* csr_acc_32b_unaligned - Bits[6:6], ROS_V, default = 1'b0  */
    UINT32 rsvd_7 : 3;
    /* rsvd_7 - Bits[9:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_rcvd_unexprsp : 1;
    /* protocol_rcvd_unexprsp - Bits[10:10], ROS_V, default = 1'b0 
       A completion has been received from the Coherent Interface that was unexpected.
     */
    UINT32 rsvd_11 : 2;
    /* rsvd_11 - Bits[12:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 protocol_qt_overflow_underflow : 1;
    /* protocol_qt_overflow_underflow - Bits[13:13], ROS_V, default = 1'b0 
       in cache set0.
     */
    UINT32 protocol_parity_error : 1;
    /* protocol_parity_error - Bits[14:14], ROS_V, default = 1'b0 
       logs parity errors on data from the IIO switch on the inbound path.
     */
    UINT32 rsvd_15 : 17;
    /* rsvd_15 - Bits[31:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPP0NNERRST_IIO_RAS_STRUCT;


/* IRPP0NFERRHD0_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A258)                                                  */
/*       SKX (0x4012A258)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0NFERRHD0_IIO_RAS_REG 0x11024258
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x258
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Logs the first DWORD of the header on an error condition
     */
  } Bits;
  UINT32 Data;
} IRPP0NFERRHD0_IIO_RAS_STRUCT;


/* IRPP0NFERRHD1_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A25C)                                                  */
/*       SKX (0x4012A25C)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0NFERRHD1_IIO_RAS_REG 0x1102425C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x25c
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Logs the second DWORD of the header on an error condition
     */
  } Bits;
  UINT32 Data;
} IRPP0NFERRHD1_IIO_RAS_STRUCT;


/* IRPP0NFERRHD2_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A260)                                                  */
/*       SKX (0x4012A260)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0NFERRHD2_IIO_RAS_REG 0x11024260
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x260
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Logs the third DWORD of the header on an error condition
     */
  } Bits;
  UINT32 Data;
} IRPP0NFERRHD2_IIO_RAS_STRUCT;


/* IRPP0NFERRHD3_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A264)                                                  */
/*       SKX (0x4012A264)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0NFERRHD3_IIO_RAS_REG 0x11024264
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x264
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Logs the fourth DWORD of the header on an error condition
     */
  } Bits;
  UINT32 Data;
} IRPP0NFERRHD3_IIO_RAS_STRUCT;


/* IRPP0ERRCNTSEL_IIO_RAS_REG supported on:                                   */
/*       SKX_A0 (0x4012A268)                                                  */
/*       SKX (0x4012A268)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0ERRCNTSEL_IIO_RAS_REG 0x11024268
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x268
 */
typedef union {
  struct {
    UINT32 irp_error_count_select : 19;
    /* irp_error_count_select - Bits[18:0], RW, default = 19'b0000000000000000000 
       See IRPP0ERRST for per bit description of each error. Each bit in this field has 
       the following behavior: 
       0: Do not select this error type for error counting
       1: Select this error type for error counting
     */
    UINT32 rsvd : 13;
    /* rsvd - Bits[31:19], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPP0ERRCNTSEL_IIO_RAS_STRUCT;


/* IRPP0ERRCNT_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A26C)                                                  */
/*       SKX (0x4012A26C)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0ERRCNT_IIO_RAS_REG 0x1102426C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x26c
 */
typedef union {
  struct {
    UINT32 errcnt : 7;
    /* errcnt - Bits[6:0], RW1CS, default = 7'b0000000 
       This counter accumulates errors that occur when the associated error type is 
       selected in the ERRCNTSEL register. 
       Notes:
       This register is cleared by writing 7Fh.
       Maximum counter available is 127d (7Fh)
     */
    UINT32 errovf : 1;
    /* errovf - Bits[7:7], RW1CS, default = 1'b0 
       Error Accumulator Overflow
       0: No overflow occurred
       1: Error overflow. The error count may not be valid.
     */
    UINT32 rsvd : 24;
    /* rsvd - Bits[31:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IRPP0ERRCNT_IIO_RAS_STRUCT;


/* IRPP0PLSR0_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A270)                                                  */
/*       SKX (0x4012A270)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0PLSR0_IIO_RAS_REG 0x11024270
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x270
 */
typedef union {
  struct {
    UINT32 poison_log_type : 2;
    /* poison_log_type - Bits[1:0], ROS_V, default = 2'b00 
       Value of 00 = IIO generated inbound poison
       Value of 01 = Inbound from PCIe
       Value of 10 = Poison coming from ring
       Value of 11 = IIO generated outbound poison
     */
    UINT32 poison_log_rid : 7;
    /* poison_log_rid - Bits[8:2], ROS_V, default = 7'b0000000 
       Switch Requestor id
     */
    UINT32 poison_log_len : 5;
    /* poison_log_len - Bits[13:9], ROS_V, default = 5'b00000 
       Request Length
     */
    UINT32 poison_log_ttype : 5;
    /* poison_log_ttype - Bits[18:14], ROS_V, default = 5'b00000 
       Transaction type. It indicates for what type of transaction the poison is logged 
       here. 
     */
    UINT32 rsvd : 9;
    /* rsvd - Bits[27:19], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dbg_mux_en : 1;
    /* dbg_mux_en - Bits[28:28], RWS_L, default = 1'b0 
       Turns on the debug muxes (clocks, etc).
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 poison_log_overflow : 1;
    /* poison_log_overflow - Bits[29:29], RW1CS_LBV, default = 1'b0 
       Ring poison detection event was observed when valid=1. In this case, the 
       register will retain the information about the first error. This is consistent 
       with UCNA/UCNA overwrite rules in Machine Check Architecture. 
     */
    UINT32 poison_log_valid : 1;
    /* poison_log_valid - Bits[30:30], RW1CS_LBV, default = 1'b0 
       If Valid=0, the log does not contain any valid information.
       If Valid=1, the log contain valid information. Any additional ring poison 
       detection events will set overflow bit. 
     */
    UINT32 poison_log_en : 1;
    /* poison_log_en - Bits[31:31], RWS_LB, default = 1'b0 
       This bit indicates if the shadow logging is enabled or disabled. A value of 0 is 
       disabled and a value of 1 is enabled. If not enabled no logging takes place in 
       this register. 
     */
  } Bits;
  UINT32 Data;
} IRPP0PLSR0_IIO_RAS_STRUCT;


/* IRPP0PLSR1_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A274)                                                  */
/*       SKX (0x4012A274)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0PLSR1_IIO_RAS_REG 0x11024274
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x274
 */
typedef union {
  struct {
    UINT32 poison_log_addr_lo : 32;
    /* poison_log_addr_lo - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Address 31:0 associated with the poison data (e.g. Address field in poisoned BL 
       packet). 
     */
  } Bits;
  UINT32 Data;
} IRPP0PLSR1_IIO_RAS_STRUCT;


/* IRPP0PLSR2_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A278)                                                  */
/*       SKX (0x4012A278)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0PLSR2_IIO_RAS_REG 0x11024278
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x278
 */
typedef union {
  struct {
    UINT32 poison_log_addr_hi : 32;
    /* poison_log_addr_hi - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000 
       Address 63:32 associated with the poison data
     */
  } Bits;
  UINT32 Data;
} IRPP0PLSR2_IIO_RAS_STRUCT;


/* ITCPAREINJCTL_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A280)                                                  */
/*       SKX (0x4012A280)                                                     */
/* Register default value:              0x00000000                            */
#define ITCPAREINJCTL_IIO_RAS_REG 0x11024280
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 */
typedef union {
  struct {
    UINT32 injmode : 1;
    /* injmode - Bits[0:0], RWS_LB, default = 'h00 
       
                    0: Single Error until ERRINJST is clear
                    1: Inject error on every valid packet.
                 
     */
    UINT32 rsvd_1 : 23;
    /* rsvd_1 - Bits[23:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 bps : 3;
    /* bps - Bits[26:24], RWS_LB, default = 'h0 
       
                    Buffer-Path select
                    000: AddrQ parity
                    001: HdrQ parity
                    010: Data uncorrected ECC
                    011: Data corrected ECC
                    100: VTdQ parity
                    101: Address parity to IRP
                    110: Hardware assertions
                 
     */
    UINT32 errinjst : 1;
    /* errinjst - Bits[27:27], RW1CS, default = 'h0 
       
                    Error injected status
                    0: No error was injected
                    1: An error was injected
                 
     */
    UINT32 rsvd_28 : 1;
    /* rsvd_28 - Bits[28:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 eirfsel : 2;
    /* eirfsel - Bits[30:29], RWS_LB, default = 'h0 
       
                    Error Injection Function Select
                    00: Always enabled
                    01: Select EINJ0 response function.
                    10: Select EINJ1 response function.
                 
     */
    UINT32 eien : 1;
    /* eien - Bits[31:31], RWS_LB, default = 'h0 
       
                    Error injection enable
                    0: Disable error injection
                    1: Enable error injection
                 
     */
  } Bits;
  UINT32 Data;
} ITCPAREINJCTL_IIO_RAS_STRUCT;


/* OTCPAREINJCTL_IIO_RAS_REG supported on:                                    */
/*       SKX_A0 (0x4012A284)                                                  */
/*       SKX (0x4012A284)                                                     */
/* Register default value:              0x00000000                            */
#define OTCPAREINJCTL_IIO_RAS_REG 0x11024284
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 */
typedef union {
  struct {
    UINT32 injmode : 1;
    /* injmode - Bits[0:0], RWS_LB, default = 'h00 
       
                    2.   Inject Single Error until ERRINJST is clear
                    3.   Inject error on every valid packet.
                 
     */
    UINT32 rsvd_1 : 23;
    /* rsvd_1 - Bits[23:1], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 bps : 3;
    /* bps - Bits[26:24], RWS_LB, default = 'h0 
       
                    Buffer-Path select
                    000: AddrQ parity
                    001: HdrQ parity
                    010: Data uncorrected ECC
                    011: Data corrected ECC
                    110: Hardware assertions
                 
     */
    UINT32 errinjst : 1;
    /* errinjst - Bits[27:27], RW1CS, default = 'h0 
       
                    Error injected status
                    0: No error was injected
                    1: An error was injected
                 
     */
    UINT32 rsvd_28 : 1;
    /* rsvd_28 - Bits[28:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 eirfsel : 2;
    /* eirfsel - Bits[30:29], RWS_LB, default = 'h0 
       
                    Error Injection Function Select
                    00: Always enabled
                    01: Select EINJ0 response function.
                    10: Select EINJ1 response function.
                 
     */
    UINT32 eien : 1;
    /* eien - Bits[31:31], RWS_LB, default = 'h0 
       
                    Error injection enable
                    0: Disable error injection
                    1: Enable error injection
                 
     */
  } Bits;
  UINT32 Data;
} OTCPAREINJCTL_IIO_RAS_STRUCT;


/* TCERRST_IIO_RAS_REG supported on:                                          */
/*       SKX_A0 (0x4012A288)                                                  */
/*       SKX (0x4012A288)                                                     */
/* Register default value:              0x00000000                            */
#define TCERRST_IIO_RAS_REG 0x11024288
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * Traffic Controller Error Status
 */
typedef union {
  struct {
    UINT32 otc_ob_cred_uf : 1;
    /* otc_ob_cred_uf - Bits[0:0], RW1CS, default = 'b0 
       
                    OTC OB credit underflow
                 
     */
    UINT32 otc_ob_cred_of : 1;
    /* otc_ob_cred_of - Bits[1:1], RW1CS, default = 'b0 
       
                    OTC OB credit overflow
                 
     */
    UINT32 otc_par_hdr_rf : 1;
    /* otc_par_hdr_rf - Bits[2:2], RW1CS, default = 'b0 
       
                    Parity error in the OTC hdr_q RF
                 
     */
    UINT32 otc_par_addr_rf : 1;
    /* otc_par_addr_rf - Bits[3:3], RW1CS, default = 'b0 
       
                    Parity error in the OTC addr_q RF
                 
     */
    UINT32 otc_ecc_uncor_rf : 1;
    /* otc_ecc_uncor_rf - Bits[4:4], RW1CS, default = 'b0 
       
                    ECC uncorrected error in the OTC dat_dword RF
                 
     */
    UINT32 otc_cabort : 1;
    /* otc_cabort - Bits[5:5], RW1CS, default = 'b0 
       
                    Completer abort
                 
     */
    UINT32 otc_mabort : 1;
    /* otc_mabort - Bits[6:6], RW1CS, default = 'b0 
       
                    Master abort
                 
     */
    UINT32 otc_mtc_tgt_err : 1;
    /* otc_mtc_tgt_err - Bits[7:7], RW1CS, default = 'b0 
       
                    Multicast target error for ITC
                 
     */
    UINT32 otc_ecc_cor_rf : 1;
    /* otc_ecc_cor_rf - Bits[8:8], RW1CS, default = 'b0 
       
                    ECC corrected error in the OTC dat_dword RF
                 
     */
    UINT32 otc_mctp_bcast_to_dmi : 1;
    /* otc_mctp_bcast_to_dmi - Bits[9:9], RW1CS, default = 'b0 
       
                    MCTP broadcast request to DMI
                 
     */
    UINT32 otc_par_rte : 1;
    /* otc_par_rte - Bits[10:10], RW1CS, default = 'b0 
       
                    IOAPIC RTE parity error
                 
     */
    UINT32 otc_irp_dat_par : 1;
    /* otc_irp_dat_par - Bits[11:11], RW1CS, default = 'b0 
       
                    parity error on incoming data from IRP
                 
     */
    UINT32 otc_irp_addr_par : 1;
    /* otc_irp_addr_par - Bits[12:12], RW1CS, default = 'b0 
       
                    Parity error on incoming addr from IRP
                 
     */
    UINT32 otc_hw_assert : 1;
    /* otc_hw_assert - Bits[13:13], RW1CS, default = 'b0 
       
                    OTC hardware assert
                 
     */
    UINT32 rsvd_14 : 2;
    /* rsvd_14 - Bits[15:14], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 itc_irp_cred_uf : 1;
    /* itc_irp_cred_uf - Bits[16:16], RW1CS, default = 'b0 
       
                    ITC IRP credit underflow
                 
     */
    UINT32 itc_irp_cred_of : 1;
    /* itc_irp_cred_of - Bits[17:17], RW1CS, default = 'b0 
       
                    ITC IRP credit overflow
                 
     */
    UINT32 itc_par_pcie_dat : 1;
    /* itc_par_pcie_dat - Bits[18:18], RW1CS, default = 'b0 
       
                    Parity error in the incoming data from PCIE
                 
     */
    UINT32 itc_par_hdr_rf : 1;
    /* itc_par_hdr_rf - Bits[19:19], RW1CS, default = 'b0 
       
                    Parity error in the ITC hdr_q RF
                 
     */
    UINT32 itc_vtmisc_hdr_rf : 1;
    /* itc_vtmisc_hdr_rf - Bits[20:20], RW1CS, default = 'b0 
       
                    Parity error in the ITC vtd_misc_info RF
                 
     */
    UINT32 itc_par_addr_rf : 1;
    /* itc_par_addr_rf - Bits[21:21], RW1CS, default = 'b0 
       
                    Parity error in the ITC addr_q RF
                 
     */
    UINT32 itc_ecc_cor_rf : 1;
    /* itc_ecc_cor_rf - Bits[22:22], RW1CS, default = 'b0 
       
                    ECC corrected error in the ITC dat_dword RF
                 
     */
    UINT32 itc_ecc_uncor_rf : 1;
    /* itc_ecc_uncor_rf - Bits[23:23], RW1CS, default = 'b0 
       
                    ECC uncorrected error in the ITC dat_dword RF
                 
     */
    UINT32 itc_cabort : 1;
    /* itc_cabort - Bits[24:24], RW1CS, default = 'b0 
       
                    Completer abort
                 
     */
    UINT32 itc_mabort : 1;
    /* itc_mabort - Bits[25:25], RW1CS, default = 'b0 
       
                    Master abort
                 
     */
    UINT32 itc_mtc_tgt_err : 1;
    /* itc_mtc_tgt_err - Bits[26:26], RW1CS, default = 'b0 
       
                    Multicast target error for ITC only
                 
     */
    UINT32 itc_enq_overflow : 1;
    /* itc_enq_overflow - Bits[27:27], RW1CS, default = 'b0 
       
                    ITC received a header from transaction layer when the inbound FIFO 
       was already full 
                 
     */
    UINT32 itc_misc_prh_overflow : 1;
    /* itc_misc_prh_overflow - Bits[28:28], RW1CS, default = 'b0 
       
                    ITC received a misc channel prh header when a prh_complete on that 
       same channel was still pending 
                 
     */
    UINT32 itc_hw_assert : 1;
    /* itc_hw_assert - Bits[29:29], RW1CS, default = 'b0 
       
                    ITC triggered internal hardware assertion
                 
     */
    UINT32 rsvd_30 : 2;
    /* rsvd_30 - Bits[31:30], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TCERRST_IIO_RAS_STRUCT;


/* TCERRCTL_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A28C)                                                  */
/*       SKX (0x4012A28C)                                                     */
/* Register default value:              0x00000000                            */
#define TCERRCTL_IIO_RAS_REG 0x1102428C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * Traffic Controller Error Control
 */
typedef union {
  struct {
    UINT32 otc_ob_cred_uf : 1;
    /* otc_ob_cred_uf - Bits[0:0], RWS_L, default = 'b0 
       
                    OTC OB credit enable underflow
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ob_cred_of : 1;
    /* otc_ob_cred_of - Bits[1:1], RWS_L, default = 'b0 
       
                    OTC OB credit enable overflow
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_hdr_rf : 1;
    /* otc_par_hdr_rf - Bits[2:2], RWS_L, default = 'b0 
       
                    Parity error enable in the OTC hdr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_addr_rf : 1;
    /* otc_par_addr_rf - Bits[3:3], RWS_L, default = 'b0 
       
                    Parity error enable in the OTC addr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ecc_uncor_rf : 1;
    /* otc_ecc_uncor_rf - Bits[4:4], RWS_L, default = 'b0 
       
                    ECC uncorrected error enable in the OTC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_cabort : 1;
    /* otc_cabort - Bits[5:5], RWS_L, default = 'b0 
       
                    Completer abort enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mabort : 1;
    /* otc_mabort - Bits[6:6], RWS_L, default = 'b0 
       
                    Master abort enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mtc_tgt_err : 1;
    /* otc_mtc_tgt_err - Bits[7:7], RWS_L, default = 'b0 
       
                    Multicast target error for ITC only
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ecc_cor_rf : 1;
    /* otc_ecc_cor_rf - Bits[8:8], RWS_L, default = 'b0 
       
                    ECC corrected error enable in the OTC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mctp_bcast_to_dmi : 1;
    /* otc_mctp_bcast_to_dmi - Bits[9:9], RWS_L, default = 'b0 
       
                    MCTP broadcast request to DMI enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_rte : 1;
    /* otc_par_rte - Bits[10:10], RWS_L, default = 'b0 
       
                    IOAPIC RTE parity error enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_irp_dat_par : 1;
    /* otc_irp_dat_par - Bits[11:11], RWS_L, default = 'b0 
       
                    parity error on incoming data from IRP enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_irp_addr_par : 1;
    /* otc_irp_addr_par - Bits[12:12], RWS_L, default = 'b0 
       
                    Parity error on incoming addr from IRP enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_hw_assert : 1;
    /* otc_hw_assert - Bits[13:13], RWS_L, default = 'b0 
       
                    OTC hardware assert
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 rsvd_14 : 2;
    /* rsvd_14 - Bits[15:14], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 itc_irp_cred_uf : 1;
    /* itc_irp_cred_uf - Bits[16:16], RWS_L, default = 'b0 
       
                    ITC IRP credit underflow enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_irp_cred_of : 1;
    /* itc_irp_cred_of - Bits[17:17], RWS_L, default = 'b0 
       
                    ITC IRP credit overflow enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_pcie_dat : 1;
    /* itc_par_pcie_dat - Bits[18:18], RWS_L, default = 'b0 
       
                    Parity error enable in the incoming data from PCIE
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_hdr_rf : 1;
    /* itc_par_hdr_rf - Bits[19:19], RWS_L, default = 'b0 
       
                    Parity error enable in the ITC hdr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_vtmisc_hdr_rf : 1;
    /* itc_vtmisc_hdr_rf - Bits[20:20], RWS_L, default = 'b0 
       
                    Parity error enable in the ITC vtd_misc_info RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_addr_rf : 1;
    /* itc_par_addr_rf - Bits[21:21], RWS_L, default = 'b0 
       
                    Parity error enable in the ITC addr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_ecc_cor_rf : 1;
    /* itc_ecc_cor_rf - Bits[22:22], RWS_L, default = 'b0 
       
                    ECC corrected error enable in the ITC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_ecc_uncor_rf : 1;
    /* itc_ecc_uncor_rf - Bits[23:23], RWS_L, default = 'b0 
       
                    ECC uncorrected error enable in the ITC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_cabort : 1;
    /* itc_cabort - Bits[24:24], RWS_L, default = 'b0 
       
                    Completer abort enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_mabort : 1;
    /* itc_mabort - Bits[25:25], RWS_L, default = 'b0 
       
                    Master abort enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_mtc_tgt_err : 1;
    /* itc_mtc_tgt_err - Bits[26:26], RWS_L, default = 'b0 
       
                    Multicast target error enable
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_enq_overflow : 1;
    /* itc_enq_overflow - Bits[27:27], RWS_L, default = 'b0 
       
                    ITC inbound FIFO overflow
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_misc_prh_overflow : 1;
    /* itc_misc_prh_overflow - Bits[28:28], RWS_L, default = 'b0 
       
                    ITC received a misc channel prh header when a prh_complete on that 
       same channel was still pending 
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_hw_assert : 1;
    /* itc_hw_assert - Bits[29:29], RWS_L, default = 'b0 
       
                    ITC hardware assert 
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 rsvd_30 : 2;
    /* rsvd_30 - Bits[31:30], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TCERRCTL_IIO_RAS_STRUCT;


/* ITCERRSEV_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A290)                                                  */
/*       SKX (0x4012A290)                                                     */
/* Register default value:              0x00000000                            */
#define ITCERRSEV_IIO_RAS_REG 0x11024290
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Error Severity
 */
typedef union {
  struct {
    UINT32 itc_irp_cred_uf : 2;
    /* itc_irp_cred_uf - Bits[1:0], RWS_L, default = 'b0 
       
                    ITC IRP credit underflow severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_irp_cred_of : 2;
    /* itc_irp_cred_of - Bits[3:2], RWS_L, default = 'b0 
       
                    ITC IRP credit overflow severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_pcie_dat : 2;
    /* itc_par_pcie_dat - Bits[5:4], RWS_L, default = 'b0 
       
                    Parity error severity in the incoming data from PCIE
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_hdr_rf : 2;
    /* itc_par_hdr_rf - Bits[7:6], RWS_L, default = 'b0 
       
                    Parity error severity in the ITC hdr_q RF
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_vtmisc_hdr_rf : 2;
    /* itc_vtmisc_hdr_rf - Bits[9:8], RWS_L, default = 'b0 
       
                    Parity error severity in the ITC vtd_misc_info RF
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_addr_rf : 2;
    /* itc_par_addr_rf - Bits[11:10], RWS_L, default = 'b0 
       
                    Parity error severity in the ITC addr_q RF
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_ecc_cor_rf : 2;
    /* itc_ecc_cor_rf - Bits[13:12], RWS_L, default = 'b0 
       
                    ECC corrected error severity in the ITC dat_dword RF
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_ecc_uncor_rf : 2;
    /* itc_ecc_uncor_rf - Bits[15:14], RWS_L, default = 'b0 
       
                    ECC uncorrected error severity in the ITC dat_dword RF
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_cabort : 2;
    /* itc_cabort - Bits[17:16], RWS_L, default = 'b0 
       
                    Completer abort severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_mabort : 2;
    /* itc_mabort - Bits[19:18], RWS_L, default = 'b0 
       
                    Master abort severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_mtc_tgt_err : 2;
    /* itc_mtc_tgt_err - Bits[21:20], RWS_L, default = 'b0 
       
                    Multicast target error severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_enq_overflow : 2;
    /* itc_enq_overflow - Bits[23:22], RWS_L, default = 'b0 
       
                    Inbound FIFO overflow error severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_misc_prh_overflow : 2;
    /* itc_misc_prh_overflow - Bits[25:24], RWS_L, default = 'b0 
       
                    Misc channel PRH overflow error severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_hw_assert : 2;
    /* itc_hw_assert - Bits[27:26], RWS_L, default = 'b0 
       
                    ITC hardware assert error severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                  Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 rsvd : 4;
    /* rsvd - Bits[31:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCERRSEV_IIO_RAS_STRUCT;


/* OTCERRSEV_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A294)                                                  */
/*       SKX (0x4012A294)                                                     */
/* Register default value:              0x00000000                            */
#define OTCERRSEV_IIO_RAS_REG 0x11024294
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Error Severity
 */
typedef union {
  struct {
    UINT32 otc_ob_cred_uf : 2;
    /* otc_ob_cred_uf - Bits[1:0], RWS_L, default = 'b0 
       
                    OTC OB credit severity underflow
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ob_cred_of : 2;
    /* otc_ob_cred_of - Bits[3:2], RWS_L, default = 'b0 
       
                    OTC OB credit severity overflow
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_hdr_rf : 2;
    /* otc_par_hdr_rf - Bits[5:4], RWS_L, default = 'b0 
       
                    Parity error severity in the OTC hdr_q RF
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_addr_rf : 2;
    /* otc_par_addr_rf - Bits[7:6], RWS_L, default = 'b0 
       
                    Parity error severity in the OTC addr_q RF
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ecc_uncor_rf : 2;
    /* otc_ecc_uncor_rf - Bits[9:8], RWS_L, default = 'b0 
       
                    ECC uncorrected error severity in the OTC dat_dword RF
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_cabort : 2;
    /* otc_cabort - Bits[11:10], RWS_L, default = 'b0 
       
                    Completer abort severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mabort : 2;
    /* otc_mabort - Bits[13:12], RWS_L, default = 'b0 
       
                    Master abort severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mtc_tgt_err : 2;
    /* otc_mtc_tgt_err - Bits[15:14], RWS_L, default = 'b0 
       
                    Multicast target error for ITC
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ecc_cor_rf : 2;
    /* otc_ecc_cor_rf - Bits[17:16], RWS_L, default = 'b0 
       
                    ECC corrected error severity in the OTC dat_dword RF
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mctp_bcast_to_dmi : 2;
    /* otc_mctp_bcast_to_dmi - Bits[19:18], RWS_L, default = 'b0 
       
                    MCTP broadcast request to DMI severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_rte : 2;
    /* otc_par_rte - Bits[21:20], RWS_L, default = 'b0 
       
                    IOAPIC RTE parity severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_irp_dat_par : 2;
    /* otc_irp_dat_par - Bits[23:22], RWS_L, default = 'b0 
       
                    Parity error on incoming data from IRP severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_irp_addr_par : 2;
    /* otc_irp_addr_par - Bits[25:24], RWS_L, default = 'b0 
       
                    Parity error on incoming addr from IRP severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_hw_assert : 2;
    /* otc_hw_assert - Bits[27:26], RWS_L, default = 'b0 
       
                    Parity error on incoming addr from IRP severity
                    00: Error Severity Level 0 (Correctable)
                    01: Error Severity Level 1 (Recoverable)
                    10: Error Severity Level 2 (Fatal)
                    11: Reserved
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 rsvd : 4;
    /* rsvd - Bits[31:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCERRSEV_IIO_RAS_STRUCT;


/* TCERRCNTSEL_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A298)                                                  */
/*       SKX (0x4012A298)                                                     */
/* Register default value:              0x00000000                            */
#define TCERRCNTSEL_IIO_RAS_REG 0x11024298
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * Traffic Controller Error Counter Selection
 */
typedef union {
  struct {
    UINT32 otc_ob_cred_uf : 1;
    /* otc_ob_cred_uf - Bits[0:0], RWS, default = 'b0 
       
                    OTC OB credit Count Select underflow
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ob_cred_of : 1;
    /* otc_ob_cred_of - Bits[1:1], RWS, default = 'b0 
       
                    OTC OB credit Count Select overflow
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_hdr_rf : 1;
    /* otc_par_hdr_rf - Bits[2:2], RWS, default = 'b0 
       
                    Parity error Count Select in the OTC hdr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_addr_rf : 1;
    /* otc_par_addr_rf - Bits[3:3], RWS, default = 'b0 
       
                    Parity error Count Select in the OTC addr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ecc_uncor_rf : 1;
    /* otc_ecc_uncor_rf - Bits[4:4], RWS, default = 'b0 
       
                    ECC uncorrected error Count Select in the OTC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_cabort : 1;
    /* otc_cabort - Bits[5:5], RWS, default = 'b0 
       
                    Completer abort Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mabort : 1;
    /* otc_mabort - Bits[6:6], RWS, default = 'b0 
       
                    Master abort Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mtc_tgt_err : 1;
    /* otc_mtc_tgt_err - Bits[7:7], RWS, default = 'b0 
       
                    Multicast target error Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_ecc_cor_rf : 1;
    /* otc_ecc_cor_rf - Bits[8:8], RWS, default = 'b0 
       
                    ECC corrected error Count Select in the OTC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_mctp_bcast_to_dmi : 1;
    /* otc_mctp_bcast_to_dmi - Bits[9:9], RWS, default = 'b0 
       
                    MCTP broadcast request to DMI Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_par_rte : 1;
    /* otc_par_rte - Bits[10:10], RWS, default = 'b0 
       
                    Parity error for the IOAPIC remapping table
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_irp_dat_par : 1;
    /* otc_irp_dat_par - Bits[11:11], RWS, default = 'b0 
       
                    parity error on incoming data from IRP Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_irp_addr_par : 1;
    /* otc_irp_addr_par - Bits[12:12], RWS, default = 'b0 
       
                    Parity error on incoming addr from IRP Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 otc_hw_assert : 1;
    /* otc_hw_assert - Bits[13:13], RWS, default = 'b0 
       
                    OTC hardware assert
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 rsvd_14 : 2;
    /* rsvd_14 - Bits[15:14], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 itc_irp_cred_uf : 1;
    /* itc_irp_cred_uf - Bits[16:16], RWS, default = 'b0 
       
                    ITC IRP credit underflow Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_irp_cred_of : 1;
    /* itc_irp_cred_of - Bits[17:17], RWS, default = 'b0 
       
                    ITC IRP credit overflow Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_pcie_dat : 1;
    /* itc_par_pcie_dat - Bits[18:18], RWS, default = 'b0 
       
                    Parity error Count Select in the incoming data from PCIE
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_hdr_rf : 1;
    /* itc_par_hdr_rf - Bits[19:19], RWS, default = 'b0 
       
                    Parity error Count Select in the ITC hdr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_vtmisc_hdr_rf : 1;
    /* itc_vtmisc_hdr_rf - Bits[20:20], RWS, default = 'b0 
       
                    Parity error Count Select in the ITC vtd_misc_info RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_par_addr_rf : 1;
    /* itc_par_addr_rf - Bits[21:21], RWS, default = 'b0 
       
                    Parity error Count Select in the ITC addr_q RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_ecc_cor_rf : 1;
    /* itc_ecc_cor_rf - Bits[22:22], RWS, default = 'b0 
       
                    ECC corrected error Count Select in the ITC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_ecc_uncor_rf : 1;
    /* itc_ecc_uncor_rf - Bits[23:23], RWS, default = 'b0 
       
                    ECC uncorrected error Count Select in the ITC dat_dword RF
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_cabort : 1;
    /* itc_cabort - Bits[24:24], RWS, default = 'b0 
       
                    Completer abort Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_mabort : 1;
    /* itc_mabort - Bits[25:25], RWS, default = 'b0 
       
                    Master abort Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_mtc_tgt_err : 1;
    /* itc_mtc_tgt_err - Bits[26:26], RWS, default = 'b0 
       
                    Multicast target error Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_enq_overflow : 1;
    /* itc_enq_overflow - Bits[27:27], RWS, default = 'b0 
       
                    Inbound FIFO overflow error Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_misc_prh_overflow : 1;
    /* itc_misc_prh_overflow - Bits[28:28], RWS, default = 'b0 
       
                    Inbound misc prh overflow error Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 itc_hw_assert : 1;
    /* itc_hw_assert - Bits[29:29], RWS, default = 'b0 
       
                    ITC hardware assert error Count Select
                    Lock: IIO_DFX_LCK_CTL.DBGBUSLCK
                 
     */
    UINT32 rsvd_30 : 2;
    /* rsvd_30 - Bits[31:30], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TCERRCNTSEL_IIO_RAS_STRUCT;


/* TCERRCNT_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A29C)                                                  */
/*       SKX (0x4012A29C)                                                     */
/* Register default value:              0x00000000                            */
#define TCERRCNT_IIO_RAS_REG 0x1102429C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * Traffic Controller Error Counter
 */
typedef union {
  struct {
    UINT32 otc_errcnt : 7;
    /* otc_errcnt - Bits[6:0], RW1CS, default = 'h00 
       
                    Error Accumulator (Counter)
                    This counter accumulates errors that occur when the associated 
       error type is selected in the ERRCNTSEL register. 
                    Notes:
                    - This register is cleared by writing 7Fh. 
                    - Maximum counter available is 127d (7Fh)
                 
     */
    UINT32 otc_errovf : 1;
    /* otc_errovf - Bits[7:7], RW1CS, default = 'b0 
       
                    Error Accumulator Overflow 
                    0: No overflow occurred 
                    1: Error overflow. The error count may not be valid.
                 
     */
    UINT32 itc_errcnt : 7;
    /* itc_errcnt - Bits[14:8], RW1CS, default = 'h00 
       
                    Error Accumulator (Counter)
                    This counter accumulates errors that occur when the associated 
       error type is selected in the ERRCNTSEL register.  
                    Notes: 
                    - This register is cleared by writing 7Fh. 
                    - Maximum counter available is 127d (7Fh)
                 
     */
    UINT32 itc_errovf : 1;
    /* itc_errovf - Bits[15:15], RW1CS, default = 'b0 
       
                    Error Accumulator Overflow 
                    0: No overflow occurred 
                    1: Error overflow. The error count may not be valid.
                 
     */
    UINT32 rsvd : 16;
    /* rsvd - Bits[31:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TCERRCNT_IIO_RAS_STRUCT;


/* ITCFFERRST_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A2A0)                                                  */
/*       SKX (0x4012A2A0)                                                     */
/* Register default value:              0x00000000                            */
#define ITCFFERRST_IIO_RAS_REG 0x110242A0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC First Fatal Error Status
 */
typedef union {
  struct {
    UINT32 tc_core_error_status_log : 7;
    /* tc_core_error_status_log - Bits[6:0], ROS_V, default = 'h00 
       
                    The error status log indicates which error is causing the report of 
       the first error event. The encoding indicates the corresponding bit position of 
       the error in the error status register. 
                 
     */
    UINT32 rsvd : 25;
    /* rsvd - Bits[31:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCFFERRST_IIO_RAS_STRUCT;


/* ITCFFERRHD0_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2A4)                                                  */
/*       SKX (0x4012A2A4)                                                     */
/* Register default value:              0x00000000                            */
#define ITCFFERRHD0_IIO_RAS_REG 0x110242A4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Fatal First Error Header 0
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 0
                    Logs the first DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} ITCFFERRHD0_IIO_RAS_STRUCT;


/* ITCFFERRHD1_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2A8)                                                  */
/*       SKX (0x4012A2A8)                                                     */
/* Register default value:              0x00000000                            */
#define ITCFFERRHD1_IIO_RAS_REG 0x110242A8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Fatal First Error Header 1
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 1
                    Logs the second DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} ITCFFERRHD1_IIO_RAS_STRUCT;


/* ITCFFERRHD2_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2AC)                                                  */
/*       SKX (0x4012A2AC)                                                     */
/* Register default value:              0x00000000                            */
#define ITCFFERRHD2_IIO_RAS_REG 0x110242AC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Fatal First Error Header 2
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 2
                    Logs the third DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} ITCFFERRHD2_IIO_RAS_STRUCT;


/* ITCFFERRHD3_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2B0)                                                  */
/*       SKX (0x4012A2B0)                                                     */
/* Register default value:              0x00000000                            */
#define ITCFFERRHD3_IIO_RAS_REG 0x110242B0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Fatal First Error Header 3
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 3
                    Logs the fourth DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} ITCFFERRHD3_IIO_RAS_STRUCT;


/* ITCFNERRST_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A2B4)                                                  */
/*       SKX (0x4012A2B4)                                                     */
/* Register default value:              0x00000000                            */
#define ITCFNERRST_IIO_RAS_REG 0x110242B4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC First Non-Fatal Error Status
 */
typedef union {
  struct {
    UINT32 tc_core_error_status_log : 7;
    /* tc_core_error_status_log - Bits[6:0], ROS_V, default = 'h00 
       
                    The error status log indicates which error is causing the report of 
       the first error event. The encoding indicates the corresponding bit position of 
       the error in the error status register. 
                 
     */
    UINT32 rsvd : 25;
    /* rsvd - Bits[31:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCFNERRST_IIO_RAS_STRUCT;


/* ITCNFERRST_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A2B8)                                                  */
/*       SKX (0x4012A2B8)                                                     */
/* Register default value:              0x00000000                            */
#define ITCNFERRST_IIO_RAS_REG 0x110242B8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Next Fatal Error Status
 */
typedef union {
  struct {
    UINT32 tc_core_error_status_log : 7;
    /* tc_core_error_status_log - Bits[6:0], ROS_V, default = 'h00 
       
                    The error status log indicates which error is causing the report of 
       the first error event. The encoding indicates the corresponding bit position of 
       the error in the error status register. 
                 
     */
    UINT32 rsvd : 25;
    /* rsvd - Bits[31:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCNFERRST_IIO_RAS_STRUCT;


/* ITCNFERRHD0_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2BC)                                                  */
/*       SKX (0x4012A2BC)                                                     */
/* Register default value:              0x00000000                            */
#define ITCNFERRHD0_IIO_RAS_REG 0x110242BC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Non-Fatal First Error Header 0
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 0
                    Logs the first DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} ITCNFERRHD0_IIO_RAS_STRUCT;


/* ITCNFERRHD1_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2C0)                                                  */
/*       SKX (0x4012A2C0)                                                     */
/* Register default value:              0x00000000                            */
#define ITCNFERRHD1_IIO_RAS_REG 0x110242C0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Non-Fatal First Error Header 1
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 1
                    Logs the second DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} ITCNFERRHD1_IIO_RAS_STRUCT;


/* ITCNFERRHD2_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2C4)                                                  */
/*       SKX (0x4012A2C4)                                                     */
/* Register default value:              0x00000000                            */
#define ITCNFERRHD2_IIO_RAS_REG 0x110242C4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Non-Fatal First Error Header 2
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 2
                    Logs the third DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} ITCNFERRHD2_IIO_RAS_STRUCT;


/* ITCNFERRHD3_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2C8)                                                  */
/*       SKX (0x4012A2C8)                                                     */
/* Register default value:              0x00000000                            */
#define ITCNFERRHD3_IIO_RAS_REG 0x110242C8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Non-Fatal First Error Header 3
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 3
                    Logs the fourth DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} ITCNFERRHD3_IIO_RAS_STRUCT;


/* ITCNNERRST_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A2CC)                                                  */
/*       SKX (0x4012A2CC)                                                     */
/* Register default value:              0x00000000                            */
#define ITCNNERRST_IIO_RAS_REG 0x110242CC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * ITC Non-Fatal Next Error Status
 */
typedef union {
  struct {
    UINT32 tc_core_error_status_log : 7;
    /* tc_core_error_status_log - Bits[6:0], ROS_V, default = 'h00 
       
                    The error status log indicates which error is causing the report of 
       the first error event. The encoding indicates the corresponding bit position of 
       the error in the error status register. 
                 
     */
    UINT32 rsvd : 25;
    /* rsvd - Bits[31:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} ITCNNERRST_IIO_RAS_STRUCT;


/* OTCFFERRST_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A2D0)                                                  */
/*       SKX (0x4012A2D0)                                                     */
/* Register default value:              0x00000000                            */
#define OTCFFERRST_IIO_RAS_REG 0x110242D0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC First Fatal Error Status
 */
typedef union {
  struct {
    UINT32 otc_error_status_log : 7;
    /* otc_error_status_log - Bits[6:0], ROS_V, default = 'h00 
       
                    The error status log indicates which error is causing the report of 
       the first error event. The encoding indicates the corresponding bit position of 
       the error in the error status register. 
                 
     */
    UINT32 rsvd : 25;
    /* rsvd - Bits[31:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCFFERRST_IIO_RAS_STRUCT;


/* OTCFFERRHD0_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2D4)                                                  */
/*       SKX (0x4012A2D4)                                                     */
/* Register default value:              0x00000000                            */
#define OTCFFERRHD0_IIO_RAS_REG 0x110242D4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Fatal First Error Header
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 0
                    Logs the first DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} OTCFFERRHD0_IIO_RAS_STRUCT;


/* OTCFFERRHD1_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2D8)                                                  */
/*       SKX (0x4012A2D8)                                                     */
/* Register default value:              0x00000000                            */
#define OTCFFERRHD1_IIO_RAS_REG 0x110242D8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Fatal First Error Header
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 1
                    Logs the second DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} OTCFFERRHD1_IIO_RAS_STRUCT;


/* OTCFFERRHD2_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2DC)                                                  */
/*       SKX (0x4012A2DC)                                                     */
/* Register default value:              0x00000000                            */
#define OTCFFERRHD2_IIO_RAS_REG 0x110242DC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Fatal First Error Header
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 2
                    Logs the third DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} OTCFFERRHD2_IIO_RAS_STRUCT;


/* OTCFFERRHD3_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2E0)                                                  */
/*       SKX (0x4012A2E0)                                                     */
/* Register default value:              0x00000000                            */
#define OTCFFERRHD3_IIO_RAS_REG 0x110242E0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Fatal First Error Header
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 3
                    Logs the fourth DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} OTCFFERRHD3_IIO_RAS_STRUCT;


/* OTCFNERRST_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A2E4)                                                  */
/*       SKX (0x4012A2E4)                                                     */
/* Register default value:              0x00000000                            */
#define OTCFNERRST_IIO_RAS_REG 0x110242E4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC First Non-Fatal Error Status
 */
typedef union {
  struct {
    UINT32 otc_error_status_log : 7;
    /* otc_error_status_log - Bits[6:0], ROS_V, default = 'h00 
       
                    The error status log indicates which error is causing the report of 
       the first error event. The encoding indicates the corresponding bit position of 
       the error in the error status register. 
                 
     */
    UINT32 rsvd : 25;
    /* rsvd - Bits[31:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCFNERRST_IIO_RAS_STRUCT;


/* OTCNFERRST_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A2E8)                                                  */
/*       SKX (0x4012A2E8)                                                     */
/* Register default value:              0x00000000                            */
#define OTCNFERRST_IIO_RAS_REG 0x110242E8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Next Fatal Error Status
 */
typedef union {
  struct {
    UINT32 otc_error_status_log : 7;
    /* otc_error_status_log - Bits[6:0], ROS_V, default = 'h00 
       
                    The error status log indicates which error is causing the report of 
       the first error event. The encoding indicates the corresponding bit position of 
       the error in the error status register. 
                 
     */
    UINT32 rsvd : 25;
    /* rsvd - Bits[31:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCNFERRST_IIO_RAS_STRUCT;


/* OTCNFERRHD0_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2EC)                                                  */
/*       SKX (0x4012A2EC)                                                     */
/* Register default value:              0x00000000                            */
#define OTCNFERRHD0_IIO_RAS_REG 0x110242EC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Non-Fatal First Error Header 0
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 0
                    Logs the first DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} OTCNFERRHD0_IIO_RAS_STRUCT;


/* OTCNFERRHD1_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2F0)                                                  */
/*       SKX (0x4012A2F0)                                                     */
/* Register default value:              0x00000000                            */
#define OTCNFERRHD1_IIO_RAS_REG 0x110242F0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Non-Fatal First Error Header 1
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 1
                    Logs the second DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} OTCNFERRHD1_IIO_RAS_STRUCT;


/* OTCNFERRHD2_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2F4)                                                  */
/*       SKX (0x4012A2F4)                                                     */
/* Register default value:              0x00000000                            */
#define OTCNFERRHD2_IIO_RAS_REG 0x110242F4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Non-Fatal First Error Header 2
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 2
                    Logs the third DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} OTCNFERRHD2_IIO_RAS_STRUCT;


/* OTCNFERRHD3_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A2F8)                                                  */
/*       SKX (0x4012A2F8)                                                     */
/* Register default value:              0x00000000                            */
#define OTCNFERRHD3_IIO_RAS_REG 0x110242F8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Non-Fatal First Error Header 3
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 'b0 
       
                    Log of Header Dword 3
                    Logs the fourth DWORD of the header on an error condition
                 
     */
  } Bits;
  UINT32 Data;
} OTCNFERRHD3_IIO_RAS_STRUCT;


/* OTCNNERRST_IIO_RAS_REG supported on:                                       */
/*       SKX_A0 (0x4012A2FC)                                                  */
/*       SKX (0x4012A2FC)                                                     */
/* Register default value:              0x00000000                            */
#define OTCNNERRST_IIO_RAS_REG 0x110242FC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * OTC Next Non-Fatal Error Status
 */
typedef union {
  struct {
    UINT32 otc_error_status_log : 7;
    /* otc_error_status_log - Bits[6:0], ROS_V, default = 'h00 
       
                    The error status log indicates which error is causing the report of 
       the first error event. The encoding indicates the corresponding bit position of 
       the error in the error status register. 
                 
     */
    UINT32 rsvd : 25;
    /* rsvd - Bits[31:7], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} OTCNNERRST_IIO_RAS_STRUCT;


/* IIOERRCTL_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A304)                                                  */
/*       SKX (0x4012A304)                                                     */
/* Register default value:              0x00000000                            */
#define IIOERRCTL_IIO_RAS_REG 0x11024304
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * This register controls the reporting of IIO internal core errors detected by the 
 * IIO error logic. An individual error control bit that is cleared masks reporting 
 * of that a particular error; software may set or clear the respective bit. This 
 * register is sticky and can only be reset by PWRGOOD. 
 * Note: LER and Viral is only supported by the EX processor.
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 6;
    /* rsvd_0 - Bits[5:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 outbound_ler_ma_mca_disable : 1;
    /* outbound_ler_ma_mca_disable - Bits[6:6], RWS_L, default = 1'b0 
       Disables logging MA error due to the PCIE port being down due to being in LER 
       mode when set to one. 
     */
    UINT32 inbound_ler_ma_mca_disable : 1;
    /* inbound_ler_ma_mca_disable - Bits[7:7], RWS_L, default = 1'b0 
       Disables logging MA error due to the PCIE port being down due to being in LER 
       mode when set to one. 
     */
    UINT32 rsvd_8 : 3;
    /* rsvd_8 - Bits[10:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 c8_ib_header_parity_core_poison_en : 1;
    /* c8_ib_header_parity_core_poison_en - Bits[11:11], RWS_L, default = 1'b0 
       On detecting a header parity error on a write or completion with data that is 
       targeting a core or remote PCIe device, poison it. 
     */
    UINT32 c8_ib_header_parity_p2p_poison_en : 1;
    /* c8_ib_header_parity_p2p_poison_en - Bits[12:12], RWS_L, default = 1'b0 
       On detecting a header parity error on a write or completion with data that is 
       targeting a local PCIe device, poison it. 
     */
    UINT32 c8_ib_header_parity_sticky_poison : 1;
    /* c8_ib_header_parity_sticky_poison - Bits[13:13], RWS_L, default = 1'b0 
       Once an inbound header parity error is detected, poison all subsequent 
       completions. 
     */
    UINT32 rsvd_14 : 18;
    /* rsvd_14 - Bits[31:14], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IIOERRCTL_IIO_RAS_STRUCT;


/* TC_ERR_MISCLOG_IIO_RAS_REG supported on:                                   */
/*       SKX_A0 (0x4012A310)                                                  */
/*       SKX (0x4012A310)                                                     */
/* Register default value:              0x00000000                            */
#define TC_ERR_MISCLOG_IIO_RAS_REG 0x11024310
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * Misc logging info for TC errors
 */
typedef union {
  struct {
    UINT32 otcfifoerridx : 11;
    /* otcfifoerridx - Bits[10:0], ROS_V, default = 1'b0  */
    UINT32 rsvd_11 : 5;
    /* rsvd_11 - Bits[15:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 itcfifoerridx : 11;
    /* itcfifoerridx - Bits[26:16], ROS, default = 1'b0  */
    UINT32 rsvd_27 : 5;
    /* rsvd_27 - Bits[31:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} TC_ERR_MISCLOG_IIO_RAS_STRUCT;


/* MIERRST_IIO_RAS_REG supported on:                                          */
/*       SKX_A0 (0x4012A380)                                                  */
/*       SKX (0x4012A380)                                                     */
/* Register default value:              0x00000000                            */
#define MIERRST_IIO_RAS_REG 0x11024380
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x380
 */
typedef union {
  struct {
    UINT32 cfg_reg_par : 1;
    /* cfg_reg_par - Bits[0:0], RW1CS, default = 1'b0  */
    UINT32 smbus_port_sts : 1;
    /* smbus_port_sts - Bits[1:1], RW1CS, default = 1'b0 
       This bit will never be set, since there is no longer an SMBus slave device.
     */
    UINT32 jtag_tap_sts : 1;
    /* jtag_tap_sts - Bits[2:2], RW1CS, default = 1'b0  */
    UINT32 vpp_err_sts : 1;
    /* vpp_err_sts - Bits[3:3], RW1CS, default = 1'b0  */
    UINT32 dfx_inj_err : 1;
    /* dfx_inj_err - Bits[4:4], RW1CS, default = 1'b0  */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} MIERRST_IIO_RAS_STRUCT;


/* MIERRCTL_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x4012A384)                                                  */
/*       SKX (0x4012A384)                                                     */
/* Register default value:              0x00000000                            */
#define MIERRCTL_IIO_RAS_REG 0x11024384
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x384
 */
typedef union {
  struct {
    UINT32 cfg_reg_par : 1;
    /* cfg_reg_par - Bits[0:0], RWS, default = 1'b0  */
    UINT32 smbus_port_sts : 1;
    /* smbus_port_sts - Bits[1:1], RWS, default = 1'b0 
       This bit has no effect.
     */
    UINT32 jtag_tap_sts : 1;
    /* jtag_tap_sts - Bits[2:2], RWS, default = 1'b0  */
    UINT32 vpp_err_sts : 1;
    /* vpp_err_sts - Bits[3:3], RWS, default = 1'b0  */
    UINT32 dfx_inj_err : 1;
    /* dfx_inj_err - Bits[4:4], RWS, default = 1'b0  */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} MIERRCTL_IIO_RAS_STRUCT;


/* MIFFERRST_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A388)                                                  */
/*       SKX (0x4012A388)                                                     */
/* Register default value:              0x00000000                            */
#define MIFFERRST_IIO_RAS_REG 0x11024388
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x388
 */
typedef union {
  struct {
    UINT32 mi_err_st_log : 11;
    /* mi_err_st_log - Bits[10:0], ROS_V, default = 11'b00000000000  */
    UINT32 rsvd : 21;
    /* rsvd - Bits[31:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} MIFFERRST_IIO_RAS_STRUCT;


/* MIFFERRHDR_0_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A38C)                                                  */
/*       SKX (0x4012A38C)                                                     */
/* Register default value:              0x00000000                            */
#define MIFFERRHDR_0_IIO_RAS_REG 0x1102438C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x38c
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} MIFFERRHDR_0_IIO_RAS_STRUCT;


/* MIFFERRHDR_1_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A390)                                                  */
/*       SKX (0x4012A390)                                                     */
/* Register default value:              0x00000000                            */
#define MIFFERRHDR_1_IIO_RAS_REG 0x11024390
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x390
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} MIFFERRHDR_1_IIO_RAS_STRUCT;


/* MIFFERRHDR_2_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A394)                                                  */
/*       SKX (0x4012A394)                                                     */
/* Register default value:              0x00000000                            */
#define MIFFERRHDR_2_IIO_RAS_REG 0x11024394
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x394
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} MIFFERRHDR_2_IIO_RAS_STRUCT;


/* MIFFERRHDR_3_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A398)                                                  */
/*       SKX (0x4012A398)                                                     */
/* Register default value:              0x00000000                            */
#define MIFFERRHDR_3_IIO_RAS_REG 0x11024398
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x398
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} MIFFERRHDR_3_IIO_RAS_STRUCT;


/* MIFNERRST_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A39C)                                                  */
/*       SKX (0x4012A39C)                                                     */
/* Register default value:              0x00000000                            */
#define MIFNERRST_IIO_RAS_REG 0x1102439C
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x39c
 */
typedef union {
  struct {
    UINT32 mi_err_st_log : 11;
    /* mi_err_st_log - Bits[10:0], ROS_V, default = 11'b00000000000  */
    UINT32 rsvd : 21;
    /* rsvd - Bits[31:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} MIFNERRST_IIO_RAS_STRUCT;


/* MINFERRST_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A3A0)                                                  */
/*       SKX (0x4012A3A0)                                                     */
/* Register default value:              0x00000000                            */
#define MINFERRST_IIO_RAS_REG 0x110243A0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x3a0
 */
typedef union {
  struct {
    UINT32 mi_err_st_log : 11;
    /* mi_err_st_log - Bits[10:0], ROS_V, default = 11'b00000000000  */
    UINT32 rsvd : 21;
    /* rsvd - Bits[31:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} MINFERRST_IIO_RAS_STRUCT;


/* MINFERRHDR_0_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A3A4)                                                  */
/*       SKX (0x4012A3A4)                                                     */
/* Register default value:              0x00000000                            */
#define MINFERRHDR_0_IIO_RAS_REG 0x110243A4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x3a4
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} MINFERRHDR_0_IIO_RAS_STRUCT;


/* MINFERRHDR_1_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A3A8)                                                  */
/*       SKX (0x4012A3A8)                                                     */
/* Register default value:              0x00000000                            */
#define MINFERRHDR_1_IIO_RAS_REG 0x110243A8
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x3a8
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} MINFERRHDR_1_IIO_RAS_STRUCT;


/* MINFERRHDR_2_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A3AC)                                                  */
/*       SKX (0x4012A3AC)                                                     */
/* Register default value:              0x00000000                            */
#define MINFERRHDR_2_IIO_RAS_REG 0x110243AC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x3ac
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} MINFERRHDR_2_IIO_RAS_STRUCT;


/* MINFERRHDR_3_IIO_RAS_REG supported on:                                     */
/*       SKX_A0 (0x4012A3B0)                                                  */
/*       SKX (0x4012A3B0)                                                     */
/* Register default value:              0x00000000                            */
#define MINFERRHDR_3_IIO_RAS_REG 0x110243B0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x3b0
 */
typedef union {
  struct {
    UINT32 hdr : 32;
    /* hdr - Bits[31:0], ROS_V, default = 32'b00000000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} MINFERRHDR_3_IIO_RAS_STRUCT;


/* MINNERRST_IIO_RAS_REG supported on:                                        */
/*       SKX_A0 (0x4012A3B4)                                                  */
/*       SKX (0x4012A3B4)                                                     */
/* Register default value:              0x00000000                            */
#define MINNERRST_IIO_RAS_REG 0x110243B4
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x3b4
 */
typedef union {
  struct {
    UINT32 mi_err_st_log : 11;
    /* mi_err_st_log - Bits[10:0], ROS_V, default = 11'b00000000000  */
    UINT32 rsvd : 21;
    /* rsvd - Bits[31:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} MINNERRST_IIO_RAS_STRUCT;


/* MIERRCNTSEL_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A3BC)                                                  */
/*       SKX (0x4012A3BC)                                                     */
/* Register default value:              0x00000000                            */
#define MIERRCNTSEL_IIO_RAS_REG 0x110243BC
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x3bc
 */
typedef union {
  struct {
    UINT32 cfg_reg_par : 1;
    /* cfg_reg_par - Bits[0:0], RW, default = 1'b0  */
    UINT32 smbus_port_sts : 1;
    /* smbus_port_sts - Bits[1:1], RW, default = 1'b0 
       This bit has no effect.
     */
    UINT32 jtag_tap_sts : 1;
    /* jtag_tap_sts - Bits[2:2], RW, default = 1'b0  */
    UINT32 vpp_err_sts : 1;
    /* vpp_err_sts - Bits[3:3], RW, default = 1'b0  */
    UINT32 dfx_inj_err : 1;
    /* dfx_inj_err - Bits[4:4], RW, default = 1'b0  */
    UINT32 rsvd : 27;
    /* rsvd - Bits[31:5], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} MIERRCNTSEL_IIO_RAS_STRUCT;


/* MIERRCNT_IIO_RAS_REG supported on:                                         */
/*       SKX_A0 (0x1012A3C0)                                                  */
/*       SKX (0x1012A3C0)                                                     */
/* Register default value:              0x00                                  */
#define MIERRCNT_IIO_RAS_REG 0x110213C0
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x3c0
 */
typedef union {
  struct {
    UINT8 errcnt : 7;
    /* errcnt - Bits[6:0], RW1CS, default = 7'b0000000 
       This counter accumulates errors that occur when the associated error type is 
       selected in the ERRCNTSEL register. 
       Notes:
       This register is cleared by writing 7Fh.
       Maximum counter available is 127d (7Fh).
     */
    UINT8 errovflow : 1;
    /* errovflow - Bits[7:7], RW1CS, default = 1'b0 
       0: No overflow occurred
       1: Error overflow. The error count may not be valid.
     */
  } Bits;
  UINT8 Data;
} MIERRCNT_IIO_RAS_STRUCT;


/* VISACTLDATA_IIO_RAS_REG supported on:                                      */
/*       SKX_A0 (0x4012A408)                                                  */
/*       SKX (0x4012A408)                                                     */
/* Register default value:              0x00000000                            */
#define VISACTLDATA_IIO_RAS_REG 0x11024408
/* Struct format extracted from XML file SKX\1.5.2.CFG.xml.
 * generated by critter 05_2_0x404
 */
typedef union {
  struct {
    UINT32 reg_data : 32;
    /* reg_data - Bits[31:0], RW_L, default = 32'b00000000000000000000000000000000 
       visa address
     */
  } Bits;
  UINT32 Data;
} VISACTLDATA_IIO_RAS_STRUCT;


#endif /* IIO_RAS_h */
