//
// This file contains 'Framework Code' and is licensed as such
// under the terms of your license agreement with Intel or your
// vendor.  This file may not be modified, except as allowed by
// additional terms of your license agreement.
//
// **************************************************************************
// *                                                                        *
// *      Intel Restricted Secret                                           *
// *                                                                        *
// *      Reference Code                                                    *
// *                                                                        *
// *      Copyright (c) 2007-2016, Intel Corporation.                       *
// *                                                                        *
// *      This software and associated documentation (if any) is furnished  *
// *      under a license and may only be used or copied in accordance      *
// *      with the terms of the license. Except as permitted by such        *
// *      license, no part of this software or documentation may be         *
// *      reproduced, stored in a retrieval system, or transmitted in any   *
// *      form or by any means without the express written consent of       *
// *      Intel Corporation.                                                *
// *                                                                        *
// *      This program has been developed by Intel Corporation.             *
// *      Licensee has Intel's permission to incorporate this source code   *
// *      into their product, royalty free.  This source code may NOT be    *
// *      redistributed to anyone without Intel's written permission.       *
// *                                                                        *
// *      Intel specifically disclaims all warranties, express or           *
// *      implied, and all liability, including consequential and other     *
// *      indirect damages, for the use of this code, including liability   *
// *      for infringement of any proprietary rights, and including the     *
// *      warranties of merchantability and fitness for a particular        *
// *      purpose.  Intel does not assume any responsibility for any        *
// *      errors which may appear in this code nor any responsibility to    *
// *      update it.                                                        *
// *                                                                        *
// **************************************************************************
// **************************************************************************
// *                                                                        *
// *  PURPOSE:                                                              *
// *                                                                        *
// *      This file contains Silicon register definitions.                  *
// *                                                                        *
// **************************************************************************
//
/* Date Stamp: 9/13/2016 */

#ifndef IIO_DFX_VTD_h
#define IIO_DFX_VTD_h

#include "DataTypes.h"

/* Device and Function specifications:                                        */
/* For all target CPUs:                                                       */
/* IIO_DFX_VTD_DEV 7                                                          */
/* IIO_DFX_VTD_FUN 4                                                          */

/* VID_IIO_DFX_VTD_REG supported on:                                          */
/*       SKX_A0 (0x2013C000)                                                  */
/*       SKX (0x2013C000)                                                     */
/* Register default value:              0x8086                                */
#define VID_IIO_DFX_VTD_REG 0x12042000
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x000
 */
typedef union {
  struct {
    UINT16 vendor_identification_number : 16;
    /* vendor_identification_number - Bits[15:0], RO, default = 16'b1000000010000110 
       The value is assigned by PCI-SIG to Intel.
     */
  } Bits;
  UINT16 Data;
} VID_IIO_DFX_VTD_STRUCT;


/* DID_IIO_DFX_VTD_REG supported on:                                          */
/*       SKX_A0 (0x2013C002)                                                  */
/*       SKX (0x2013C002)                                                     */
/* Register default value:              0x203C                                */
#define DID_IIO_DFX_VTD_REG 0x12042002
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x002
 */
typedef union {
  struct {
    UINT16 device_identification_number : 16;
    /* device_identification_number - Bits[15:0], RO, default = 16'b0010000000111100 
       //TODO_HSXA0_SYNC
       Device ID values vary from function to function. Bits 15:8 are equal to 0x0E for 
       Ivytown. The following list is a breakdown of the function groups.0x0E00 - 
       0x0E1F : PCI Express and DMI ports 
       0x0E20 - 0x0E3F : IO Features (CBDMA, APIC, VT, RAS, LT)
       0x0E40 - 0x0E5F : Performance Monitors
       0x0E60 - 0x0E7F : DFX
       0x0E80 - 0x0E9F : Quick Path Interface
       0x0EA0 - 0x0EBF : Home Agent/Memory Controller
       0x0EC0 - 0x0EDF : Power Management
       0x0EE0 - 0x0EFF : Cbo/Ring
       //TODO_HSXA0_SYNC
       //SKX:Oct 18 2012: Post HSX sync values should be as below
       Device ID values vary from function to function. Bits 15:8 are equal to 0x2F for 
       the processor. The following list is a breakdown of the function groups. 
       0x2F00 - 0x2F1F : PCI Express and DMI ports
       0x2F20 - 0x2F3F : IO Features (CBDMA, APIC, VT, RAS, Intel TXT)
       0x2F40 - 0x2F5F : Performance Monitors
       0x2F60 - 0x2F7F : DFX
       0x2F80 - 0x2F9F : Intel Quick Path Interface
       0x2FA0 - 0x2FBF : Home Agent/Memory Controller
       0x2FC0 - 0x2FDF : Power Management
       0x2FE0 - 0x2FFF : Cbo/Ring
       
     */
  } Bits;
  UINT16 Data;
} DID_IIO_DFX_VTD_STRUCT;


/* PCICMD_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x2013C004)                                                  */
/*       SKX (0x2013C004)                                                     */
/* Register default value:              0x0000                                */
#define PCICMD_IIO_DFX_VTD_REG 0x12042004
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x004
 */
typedef union {
  struct {
    UINT16 iose : 1;
    /* iose - Bits[0:0], RO, default = 1'b0 
       1
     */
    UINT16 mse : 1;
    /* mse - Bits[1:1], RO, default = 1'b0 
       1
     */
    UINT16 bme : 1;
    /* bme - Bits[2:2], RO, default = 1'b0 
       1
     */
    UINT16 sce : 1;
    /* sce - Bits[3:3], RO, default = 1'b0 
       1
     */
    UINT16 mwie : 1;
    /* mwie - Bits[4:4], RO, default = 1'b0 
       1
     */
    UINT16 vga_palette_snoop_enable : 1;
    /* vga_palette_snoop_enable - Bits[5:5], RO, default = 1'b0 
       Not applicable to internal devices. Hardwired to 0.
     */
    UINT16 perre : 1;
    /* perre - Bits[6:6], RW, default = 1'b0 
       1
     */
    UINT16 idsel_stepping_wait_cycle_control : 1;
    /* idsel_stepping_wait_cycle_control - Bits[7:7], RO, default = 1'b0 
       Not applicable to internal devices. Hardwired to 0.
     */
    UINT16 serre : 1;
    /* serre - Bits[8:8], RW, default = 1'b0 
       1
     */
    UINT16 fast_back_to_back_enable : 1;
    /* fast_back_to_back_enable - Bits[9:9], RO, default = 1'b0 
       Not applicable to PCI Express and is hardwired to 0
     */
    UINT16 intx_interrupt_disable : 1;
    /* intx_interrupt_disable - Bits[10:10], RO, default = 1'b0 
       1
     */
    UINT16 rsvd : 5;
    /* rsvd - Bits[15:11], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} PCICMD_IIO_DFX_VTD_STRUCT;


/* PCISTS_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x2013C006)                                                  */
/*       SKX (0x2013C006)                                                     */
/* Register default value:              0x0010                                */
#define PCISTS_IIO_DFX_VTD_REG 0x12042006
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x006
 */
typedef union {
  struct {
    UINT16 rsvd_0 : 3;
    /* rsvd_0 - Bits[2:0], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 intxstat : 1;
    /* intxstat - Bits[3:3], RO, default = 1'b0 
       1
     */
    UINT16 capl : 1;
    /* capl - Bits[4:4], RO, default = 1'b1 
       1
     */
    UINT16 pci66mhz_capable : 1;
    /* pci66mhz_capable - Bits[5:5], RO, default = 1'b0 
       Not applicable to PCI Express. Hardwired to 0.
     */
    UINT16 rsvd_6 : 1;
    /* rsvd_6 - Bits[6:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 fb2b : 1;
    /* fb2b - Bits[7:7], RO, default = 1'b0 
       1
     */
    UINT16 mdpe : 1;
    /* mdpe - Bits[8:8], RO, default = 1'b0 
       1
     */
    UINT16 devselt : 2;
    /* devselt - Bits[10:9], RO, default = 2'b00 
       1
     */
    UINT16 sta : 1;
    /* sta - Bits[11:11], RO, default = 1'b0 
       1
     */
    UINT16 rta : 1;
    /* rta - Bits[12:12], RO, default = 1'b0 
       1
     */
    UINT16 rma : 1;
    /* rma - Bits[13:13], RO, default = 1'b0 
       1
     */
    UINT16 sse : 1;
    /* sse - Bits[14:14], RO, default = 1'b0 
       1
     */
    UINT16 dpe : 1;
    /* dpe - Bits[15:15], RO, default = 1'b0 
       1
     */
  } Bits;
  UINT16 Data;
} PCISTS_IIO_DFX_VTD_STRUCT;


/* RID_IIO_DFX_VTD_REG supported on:                                          */
/*       SKX_A0 (0x1013C008)                                                  */
/*       SKX (0x1013C008)                                                     */
/* Register default value:              0x00                                  */
#define RID_IIO_DFX_VTD_REG 0x12041008
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * Revision ID
 */
typedef union {
  struct {
    UINT8 revision_id : 8;
    /* revision_id - Bits[7:0], RO, default = 8'h0 
       
       	  Revision ID.
       	
     */
  } Bits;
  UINT8 Data;
} RID_IIO_DFX_VTD_STRUCT;


/* CCR_N0_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x1013C009)                                                  */
/*       SKX (0x1013C009)                                                     */
/* Register default value:              0x00                                  */
#define CCR_N0_IIO_DFX_VTD_REG 0x12041009
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * Class Code Register
 */
typedef union {
  struct {
    UINT8 interface : 8;
    /* interface - Bits[7:0], RO, default = 8'h0 
       
       	  Base revision.
       	
     */
  } Bits;
  UINT8 Data;
} CCR_N0_IIO_DFX_VTD_STRUCT;


/* CCR_N1_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x2013C00A)                                                  */
/*       SKX (0x2013C00A)                                                     */
/* Register default value:              0x0880                                */
#define CCR_N1_IIO_DFX_VTD_REG 0x1204200A
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * Class Code Register
 */
typedef union {
  struct {
    UINT16 sub_class : 8;
    /* sub_class - Bits[7:0], RO, default = 8'h80 
       
       	  Base revision.
       	
     */
    UINT16 base_class : 8;
    /* base_class - Bits[15:8], RO, default = 8'h8 
       
       	  Base revision.
       	
     */
  } Bits;
  UINT16 Data;
} CCR_N1_IIO_DFX_VTD_STRUCT;


/* CLSR_IIO_DFX_VTD_REG supported on:                                         */
/*       SKX_A0 (0x1013C00C)                                                  */
/*       SKX (0x1013C00C)                                                     */
/* Register default value:              0x00                                  */
#define CLSR_IIO_DFX_VTD_REG 0x1204100C
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x00c
 */
typedef union {
  struct {
    UINT8 cacheline_size : 8;
    /* cacheline_size - Bits[7:0], RW, default = 8'b00000000  */
  } Bits;
  UINT8 Data;
} CLSR_IIO_DFX_VTD_STRUCT;


/* PLAT_IIO_DFX_VTD_REG supported on:                                         */
/*       SKX_A0 (0x1013C00D)                                                  */
/*       SKX (0x1013C00D)                                                     */
/* Register default value:              0x00                                  */
#define PLAT_IIO_DFX_VTD_REG 0x1204100D
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x00d
 */
typedef union {
  struct {
    UINT8 primary_latency_timer : 8;
    /* primary_latency_timer - Bits[7:0], RO, default = 8'b00000000 
       Not applicable to PCI-Express. Hardwired to 00h.
     */
  } Bits;
  UINT8 Data;
} PLAT_IIO_DFX_VTD_STRUCT;


/* HDR_IIO_DFX_VTD_REG supported on:                                          */
/*       SKX_A0 (0x1013C00E)                                                  */
/*       SKX (0x1013C00E)                                                     */
/* Register default value:              0x80                                  */
#define HDR_IIO_DFX_VTD_REG 0x1204100E
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x00e
 */
typedef union {
  struct {
    UINT8 configuration_layout : 7;
    /* configuration_layout - Bits[6:0], RO, default = 7'b0000000 
       This field identifies the format of the configuration header layout. It is Type 
       0 for all these devices. The default is 00h, indicating a 'endpoint device'. 
     */
    UINT8 multi_function_device : 1;
    /* multi_function_device - Bits[7:7], RO, default = 1'b1 
       This bit defaults to 1b since all these devices are multi-function
     */
  } Bits;
  UINT8 Data;
} HDR_IIO_DFX_VTD_STRUCT;


/* BIST_IIO_DFX_VTD_REG supported on:                                         */
/*       SKX_A0 (0x1013C00F)                                                  */
/*       SKX (0x1013C00F)                                                     */
/* Register default value:              0x00                                  */
#define BIST_IIO_DFX_VTD_REG 0x1204100F
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x00f
 */
typedef union {
  struct {
    UINT8 bist_tests : 8;
    /* bist_tests - Bits[7:0], RO, default = 8'b00000000 
       Not supported. Hardwired to 00h
     */
  } Bits;
  UINT8 Data;
} BIST_IIO_DFX_VTD_STRUCT;


/* SVID_IIO_DFX_VTD_REG supported on:                                         */
/*       SKX_A0 (0x2013C02C)                                                  */
/*       SKX (0x2013C02C)                                                     */
/* Register default value:              0x8086                                */
#define SVID_IIO_DFX_VTD_REG 0x1204202C
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x02c
 */
typedef union {
  struct {
    UINT16 subsystem_vendor_identification_number : 16;
    /* subsystem_vendor_identification_number - Bits[15:0], RW_O, default = 16'b1000000010000110 
       The default value specifies Intel but can be set to any value once after reset.
     */
  } Bits;
  UINT16 Data;
} SVID_IIO_DFX_VTD_STRUCT;


/* SDID_IIO_DFX_VTD_REG supported on:                                         */
/*       SKX_A0 (0x2013C02E)                                                  */
/*       SKX (0x2013C02E)                                                     */
/* Register default value:              0x0000                                */
#define SDID_IIO_DFX_VTD_REG 0x1204202E
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x02e
 */
typedef union {
  struct {
    UINT16 subsystem_device_identification_number : 16;
    /* subsystem_device_identification_number - Bits[15:0], RW_O, default = 16'b0000000000000000 
       Assigned by the subsystem vendor to uniquely identify the subsystem
     */
  } Bits;
  UINT16 Data;
} SDID_IIO_DFX_VTD_STRUCT;


/* CAPPTR_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x1013C034)                                                  */
/*       SKX (0x1013C034)                                                     */
/* Register default value:              0x40                                  */
#define CAPPTR_IIO_DFX_VTD_REG 0x12041034
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x034
 */
typedef union {
  struct {
    UINT8 capability_pointer : 8;
    /* capability_pointer - Bits[7:0], RO, default = 8'b01000000 
       Points to the first capability structure for the device which is the PCIe 
       capability. 
     */
  } Bits;
  UINT8 Data;
} CAPPTR_IIO_DFX_VTD_STRUCT;


/* INTL_IIO_DFX_VTD_REG supported on:                                         */
/*       SKX_A0 (0x1013C03C)                                                  */
/*       SKX (0x1013C03C)                                                     */
/* Register default value:              0x00                                  */
#define INTL_IIO_DFX_VTD_REG 0x1204103C
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x03c
 */
typedef union {
  struct {
    UINT8 interrupt_line : 8;
    /* interrupt_line - Bits[7:0], RO, default = 8'b00000000 
       N/A for these devices
     */
  } Bits;
  UINT8 Data;
} INTL_IIO_DFX_VTD_STRUCT;


/* INTPIN_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x1013C03D)                                                  */
/*       SKX (0x1013C03D)                                                     */
/* Register default value:              0x00                                  */
#define INTPIN_IIO_DFX_VTD_REG 0x1204103D
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x03d
 */
typedef union {
  struct {
    UINT8 interrupt_pin : 8;
    /* interrupt_pin - Bits[7:0], RO, default = 8'b00000000 
       N/A since these devices do not generate any interrupt on their own
     */
  } Bits;
  UINT8 Data;
} INTPIN_IIO_DFX_VTD_STRUCT;


/* MINGNT_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x1013C03E)                                                  */
/*       SKX (0x1013C03E)                                                     */
/* Register default value:              0x00                                  */
#define MINGNT_IIO_DFX_VTD_REG 0x1204103E
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x03e
 */
typedef union {
  struct {
    UINT8 mgv : 8;
    /* mgv - Bits[7:0], RO, default = 8'b00000000 
       The Device does not burst as a PCI compliant master.
     */
  } Bits;
  UINT8 Data;
} MINGNT_IIO_DFX_VTD_STRUCT;


/* MAXLAT_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x1013C03F)                                                  */
/*       SKX (0x1013C03F)                                                     */
/* Register default value:              0x00                                  */
#define MAXLAT_IIO_DFX_VTD_REG 0x1204103F
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x03f
 */
typedef union {
  struct {
    UINT8 mlv : 8;
    /* mlv - Bits[7:0], RO, default = 8'b00000000 
       The Device has no specific requirements for how often it needs to access the PCI 
       bus. 
     */
  } Bits;
  UINT8 Data;
} MAXLAT_IIO_DFX_VTD_STRUCT;


/* PXPCAP_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x4013C040)                                                  */
/*       SKX (0x4013C040)                                                     */
/* Register default value:              0x00920010                            */
#define PXPCAP_IIO_DFX_VTD_REG 0x12044040
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x040
 */
typedef union {
  struct {
    UINT32 capability_id : 8;
    /* capability_id - Bits[7:0], RO, default = 8'b00010000 
       Provides the PCI Express capability ID assigned by PCI-SIG.
     */
    UINT32 next_ptr : 8;
    /* next_ptr - Bits[15:8], RO, default = 8'b00000000 
       Pointer to the next capability. Set to 0 to indicate there are no more 
       capability structures. 
     */
    UINT32 capability_version : 4;
    /* capability_version - Bits[19:16], RO, default = 4'b0010 
       PCI Express Capability is Compliant with Version 1.0 of the PCI Express Spec.
       Note:
       This capability structure is not compliant with Versions beyond 1.0, since they 
       require additional capability registers to be reserved. The only purpose for 
       this capability structure is to make enhanced configuration space available. 
       Minimizing the size of this structure is accomplished by reporting version 1.0 
       compliancy and reporting that this is an integrated root port device. As such, 
       only three Dwords of configuration space are required for this structure. 
     */
    UINT32 device_port_type : 4;
    /* device_port_type - Bits[23:20], RO, default = 4'b1001 
       Device type is Root Complex Integrated Endpoint
     */
    UINT32 slot_implemented : 1;
    /* slot_implemented - Bits[24:24], RO, default = 1'b0 
       N/A for integrated endpoints
     */
    UINT32 interrupt_message_number : 5;
    /* interrupt_message_number - Bits[29:25], RO, default = 5'b00000 
       N/A for this device
     */
    UINT32 rsvd : 2;
    /* rsvd - Bits[31:30], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} PXPCAP_IIO_DFX_VTD_STRUCT;


/* DEVCAP_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x4013C044)                                                  */
/*       SKX (0x4013C044)                                                     */
/* Register default value:              0x00008000                            */
#define DEVCAP_IIO_DFX_VTD_REG 0x12044044
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x044
 */
typedef union {
  struct {
    UINT32 max_payload_size_supported : 3;
    /* max_payload_size_supported - Bits[2:0], RO, default = 3'b000  */
    UINT32 phantom_functions_supported : 2;
    /* phantom_functions_supported - Bits[4:3], RO, default = 2'b00  */
    UINT32 extended_tag_field_supported : 1;
    /* extended_tag_field_supported - Bits[5:5], RO, default = 1'b0  */
    UINT32 endpoint_l0s_acceptable_latency : 3;
    /* endpoint_l0s_acceptable_latency - Bits[8:6], RO, default = 3'b000  */
    UINT32 endpoint_l1_acceptable_latency : 3;
    /* endpoint_l1_acceptable_latency - Bits[11:9], RO, default = 3'b000  */
    UINT32 attention_button_present : 1;
    /* attention_button_present - Bits[12:12], RO, default = 1'b0  */
    UINT32 attention_indicator_present : 1;
    /* attention_indicator_present - Bits[13:13], RO, default = 1'b0  */
    UINT32 power_indicator_present_on_device : 1;
    /* power_indicator_present_on_device - Bits[14:14], RO, default = 1'b0  */
    UINT32 role_based_error_reporting : 1;
    /* role_based_error_reporting - Bits[15:15], RO, default = 1'b1  */
    UINT32 rsvd_16 : 2;
    /* rsvd_16 - Bits[17:16], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 captured_slot_power_limit_value : 8;
    /* captured_slot_power_limit_value - Bits[25:18], RO, default = 8'b00000000  */
    UINT32 captured_slot_power_limit_scale : 2;
    /* captured_slot_power_limit_scale - Bits[27:26], RO, default = 2'b00  */
    UINT32 rsvd_28 : 4;
    /* rsvd_28 - Bits[31:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} DEVCAP_IIO_DFX_VTD_STRUCT;


/* DEVCON_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x2013C048)                                                  */
/*       SKX (0x2013C048)                                                     */
/* Register default value:              0x0000                                */
#define DEVCON_IIO_DFX_VTD_REG 0x12042048
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * The PCI Express Device Control register controls PCI Express specific 
 * capabilities parameters associated with the device. 
 */
typedef union {
  struct {
    UINT16 correctable_error_reporting_enable : 1;
    /* correctable_error_reporting_enable - Bits[0:0], RO, default = 1'b0 
       N/A for CB DMA
     */
    UINT16 non_fatal_error_reporting_enable : 1;
    /* non_fatal_error_reporting_enable - Bits[1:1], RO, default = 1'b0 
       N/A for CB DMA
     */
    UINT16 fatal_error_reporting_enable : 1;
    /* fatal_error_reporting_enable - Bits[2:2], RO, default = 1'b0 
       N/A for CB DMA
     */
    UINT16 unsupported_request_reporting_enable : 1;
    /* unsupported_request_reporting_enable - Bits[3:3], RO, default = 1'b0 
       N/A for CB DMA
     */
    UINT16 enable_relaxed_ordering : 1;
    /* enable_relaxed_ordering - Bits[4:4], RO, default = 1'b0 
       For most parts, writes from CB DMA are relaxed ordered, except for DMA 
       completion writes. But the fact that CB DMA writes are relaxed ordered is not 
       very useful except when the writes are also non-snooped. If the writes are 
       snooped, relaxed ordering does not provide any particular advantage based on IIO 
       uArch. But when writes are non-snooped, relaxed ordering is required to get good 
       BW and this bit is expected to be set. If this bit is clear, NS writes will get 
       very poor performance. 
     */
    UINT16 max_payload_size : 3;
    /* max_payload_size - Bits[7:5], RO, default = 3'b000 
       N/A for CB DMA
     */
    UINT16 extended_tag_field_enable : 1;
    /* extended_tag_field_enable - Bits[8:8], RO, default = 1'b0  */
    UINT16 phantom_functions_enable : 1;
    /* phantom_functions_enable - Bits[9:9], RO, default = 1'b0 
       Not applicable to CB DMA since it never uses phantom functions as a requester.
     */
    UINT16 auxiliary_power_management_enable : 1;
    /* auxiliary_power_management_enable - Bits[10:10], RO, default = 1'b0 
       Not applicable to CB DMA
     */
    UINT16 enable_no_snoop : 1;
    /* enable_no_snoop - Bits[11:11], RO, default = 1'b0 
       For CB DMA, when this bit is clear, all DMA transactions must be snooped. When 
       set, DMA transactions to main memory can utilize No Snoop optimization under the 
       guidance of the device driver. 
     */
    UINT16 max_read_request_size : 3;
    /* max_read_request_size - Bits[14:12], RO, default = 3'b000 
       N/A to CB DMA since it does not issue tx on PCIE
     */
    UINT16 rsvd : 1;
    /* rsvd - Bits[15:15], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} DEVCON_IIO_DFX_VTD_STRUCT;


/* DEVSTS_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x2013C04A)                                                  */
/*       SKX (0x2013C04A)                                                     */
/* Register default value:              0x0000                                */
#define DEVSTS_IIO_DFX_VTD_REG 0x1204204A
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x04a
 */
typedef union {
  struct {
    UINT16 correctable_error_detected : 1;
    /* correctable_error_detected - Bits[0:0], RO, default = 1'b0  */
    UINT16 non_fatal_error_detected : 1;
    /* non_fatal_error_detected - Bits[1:1], RO, default = 1'b0  */
    UINT16 fatal_error_detected : 1;
    /* fatal_error_detected - Bits[2:2], RO, default = 1'b0  */
    UINT16 unsupported_request_detected : 1;
    /* unsupported_request_detected - Bits[3:3], RO, default = 1'b0  */
    UINT16 aux_power_detected : 1;
    /* aux_power_detected - Bits[4:4], RO, default = 1'b0  */
    UINT16 transactions_pending : 1;
    /* transactions_pending - Bits[5:5], RO, default = 1'b0  */
    UINT16 rsvd : 10;
    /* rsvd - Bits[15:6], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} DEVSTS_IIO_DFX_VTD_STRUCT;


/* LNKCAP_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x4013C04C)                                                  */
/*       SKX (0x4013C04C)                                                     */
/* Register default value:              0x003BF400                            */
#define LNKCAP_IIO_DFX_VTD_REG 0x1204404C
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x04c
 */
typedef union {
  struct {
    UINT32 link_speeds_supported : 4;
    /* link_speeds_supported - Bits[3:0], RO, default = 4'b0000  */
    UINT32 maximum_link_width : 6;
    /* maximum_link_width - Bits[9:4], RO, default = 6'b000000  */
    UINT32 active_state_link_pm_support : 2;
    /* active_state_link_pm_support - Bits[11:10], RO, default = 2'b01  */
    UINT32 l0s_exit_latency : 3;
    /* l0s_exit_latency - Bits[14:12], RO, default = 3'b111  */
    UINT32 l1_exit_latency : 3;
    /* l1_exit_latency - Bits[17:15], RO, default = 3'b111  */
    UINT32 clock_power_management : 1;
    /* clock_power_management - Bits[18:18], RO, default = 1'b0  */
    UINT32 surprise_down_error_reporting_capable : 1;
    /* surprise_down_error_reporting_capable - Bits[19:19], RO, default = 1'b1  */
    UINT32 data_link_layer_link_active : 1;
    /* data_link_layer_link_active - Bits[20:20], RO, default = 1'b1  */
    UINT32 link_bandwidth_notification_capability_a : 1;
    /* link_bandwidth_notification_capability_a - Bits[21:21], RO, default = 1'b1  */
    UINT32 rsvd : 2;
    /* rsvd - Bits[23:22], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 port_number : 8;
    /* port_number - Bits[31:24], RO, default = 8'b00000000  */
  } Bits;
  UINT32 Data;
} LNKCAP_IIO_DFX_VTD_STRUCT;


/* LNKSTS_IIO_DFX_VTD_REG supported on:                                       */
/*       SKX_A0 (0x2013C052)                                                  */
/*       SKX (0x2013C052)                                                     */
/* Register default value:              0x1000                                */
#define LNKSTS_IIO_DFX_VTD_REG 0x12042052
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x052
 */
typedef union {
  struct {
    UINT16 current_link_speed : 4;
    /* current_link_speed - Bits[3:0], RO, default = 4'b0000  */
    UINT16 negotiated_link_width : 6;
    /* negotiated_link_width - Bits[9:4], RO, default = 6'b000000  */
    UINT16 rsvd : 1;
    /* rsvd - Bits[10:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 link_training : 1;
    /* link_training - Bits[11:11], RO, default = 1'b0  */
    UINT16 slot_clock_configuration : 1;
    /* slot_clock_configuration - Bits[12:12], RO, default = 1'b1  */
    UINT16 data_link_layer_link_active : 1;
    /* data_link_layer_link_active - Bits[13:13], RO, default = 1'b0  */
    UINT16 link_bandwidth_management_status_this : 1;
    /* link_bandwidth_management_status_this - Bits[14:14], RO, default = 1'b0  */
    UINT16 link_autonomous_bandwidth_status_this : 1;
    /* link_autonomous_bandwidth_status_this - Bits[15:15], RO, default = 1'b0  */
  } Bits;
  UINT16 Data;
} LNKSTS_IIO_DFX_VTD_STRUCT;


/* LNKCAP2_IIO_DFX_VTD_REG supported on:                                      */
/*       SKX_A0 (0x4013C06C)                                                  */
/*       SKX (0x4013C06C)                                                     */
/* Register default value:              0x003BF400                            */
#define LNKCAP2_IIO_DFX_VTD_REG 0x1204406C
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x06c
 */
typedef union {
  struct {
    UINT32 link_speeds_supported : 4;
    /* link_speeds_supported - Bits[3:0], RO, default = 4'b0000  */
    UINT32 maximum_link_width : 6;
    /* maximum_link_width - Bits[9:4], RO, default = 6'b000000  */
    UINT32 active_state_link_pm_support : 2;
    /* active_state_link_pm_support - Bits[11:10], RO, default = 2'b01  */
    UINT32 l0s_exit_latency : 3;
    /* l0s_exit_latency - Bits[14:12], RO, default = 3'b111  */
    UINT32 l1_exit_latency : 3;
    /* l1_exit_latency - Bits[17:15], RO, default = 3'b111  */
    UINT32 clock_power_management : 1;
    /* clock_power_management - Bits[18:18], RO, default = 1'b0  */
    UINT32 surprise_down_error_reporting_capable : 1;
    /* surprise_down_error_reporting_capable - Bits[19:19], RO, default = 1'b1  */
    UINT32 data_link_layer_link_active : 1;
    /* data_link_layer_link_active - Bits[20:20], RO, default = 1'b1  */
    UINT32 link_bandwidth_notification_capability_a : 1;
    /* link_bandwidth_notification_capability_a - Bits[21:21], RO, default = 1'b1  */
    UINT32 rsvd : 2;
    /* rsvd - Bits[23:22], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 port_number : 8;
    /* port_number - Bits[31:24], RO, default = 8'b00000000  */
  } Bits;
  UINT32 Data;
} LNKCAP2_IIO_DFX_VTD_STRUCT;


/* LNKCON2_OLD_IIO_DFX_VTD_REG supported on:                                  */
/*       SKX_A0 (0x2013C070)                                                  */
/*       SKX (0x2013C070)                                                     */
/* Register default value:              0x0000                                */
#define LNKCON2_OLD_IIO_DFX_VTD_REG 0x12042070
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x070
 */
typedef union {
  struct {
    UINT16 active_state_link_pm_control : 2;
    /* active_state_link_pm_control - Bits[1:0], RO, default = 2'b00  */
    UINT16 rsvd_2 : 1;
    /* rsvd_2 - Bits[2:2], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 read_completion_boundary : 1;
    /* read_completion_boundary - Bits[3:3], RO, default = 1'b0  */
    UINT16 link_disable : 1;
    /* link_disable - Bits[4:4], RO, default = 1'b0  */
    UINT16 retrain_link : 1;
    /* retrain_link - Bits[5:5], RO, default = 1'b0  */
    UINT16 common_clock_configuration : 1;
    /* common_clock_configuration - Bits[6:6], RO, default = 1'b0  */
    UINT16 extended_synch : 1;
    /* extended_synch - Bits[7:7], RO, default = 1'b0  */
    UINT16 enable_clock_power_management_na : 1;
    /* enable_clock_power_management_na - Bits[8:8], RO, default = 1'b0  */
    UINT16 hardware_autonomous_width_disable_ioh : 1;
    /* hardware_autonomous_width_disable_ioh - Bits[9:9], RO, default = 1'b0  */
    UINT16 link_bandwidth_management_interrupt_enable : 1;
    /* link_bandwidth_management_interrupt_enable - Bits[10:10], RO, default = 1'b0  */
    UINT16 link_autonomous_bandwidth_interrupt_enable : 1;
    /* link_autonomous_bandwidth_interrupt_enable - Bits[11:11], RO, default = 1'b0  */
    UINT16 rsvd_12 : 4;
    /* rsvd_12 - Bits[15:12], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} LNKCON2_OLD_IIO_DFX_VTD_STRUCT;


/* LNKSTS2_IIO_DFX_VTD_REG supported on:                                      */
/*       SKX_A0 (0x2013C072)                                                  */
/*       SKX (0x2013C072)                                                     */
/* Register default value:              0x1000                                */
#define LNKSTS2_IIO_DFX_VTD_REG 0x12042072
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x072
 */
typedef union {
  struct {
    UINT16 current_link_speed : 4;
    /* current_link_speed - Bits[3:0], RO, default = 4'b0000  */
    UINT16 negotiated_link_width : 6;
    /* negotiated_link_width - Bits[9:4], RO, default = 6'b000000  */
    UINT16 rsvd : 1;
    /* rsvd - Bits[10:10], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT16 link_training : 1;
    /* link_training - Bits[11:11], RO, default = 1'b0  */
    UINT16 slot_clock_configuration : 1;
    /* slot_clock_configuration - Bits[12:12], RO, default = 1'b1  */
    UINT16 data_link_layer_link_active : 1;
    /* data_link_layer_link_active - Bits[13:13], RO, default = 1'b0  */
    UINT16 link_bandwidth_management_status_this : 1;
    /* link_bandwidth_management_status_this - Bits[14:14], RO, default = 1'b0  */
    UINT16 link_autonomous_bandwidth_status_this : 1;
    /* link_autonomous_bandwidth_status_this - Bits[15:15], RO, default = 1'b0  */
  } Bits;
  UINT16 Data;
} LNKSTS2_IIO_DFX_VTD_STRUCT;


/* SLTCAP2_IIO_DFX_VTD_REG supported on:                                      */
/*       SKX_A0 (0x4013C074)                                                  */
/*       SKX (0x4013C074)                                                     */
/* Register default value:              0x00000000                            */
#define SLTCAP2_IIO_DFX_VTD_REG 0x12044074
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x074
 */
typedef union {
  struct {
    UINT32 attention_button_present : 1;
    /* attention_button_present - Bits[0:0], RO, default = 1'b0  */
    UINT32 power_controller_present : 1;
    /* power_controller_present - Bits[1:1], RO, default = 1'b0  */
    UINT32 mrl_sensor_present : 1;
    /* mrl_sensor_present - Bits[2:2], RO, default = 1'b0  */
    UINT32 attention_indicator_present : 1;
    /* attention_indicator_present - Bits[3:3], RO, default = 1'b0  */
    UINT32 power_indicator_present : 1;
    /* power_indicator_present - Bits[4:4], RO, default = 1'b0  */
    UINT32 hotplug_surprise : 1;
    /* hotplug_surprise - Bits[5:5], RO, default = 1'b0  */
    UINT32 hotplug_capable : 1;
    /* hotplug_capable - Bits[6:6], RO, default = 1'b0  */
    UINT32 slot_power_limit_value : 8;
    /* slot_power_limit_value - Bits[14:7], RO, default = 8'b00000000  */
    UINT32 slot_power_limit_scale : 2;
    /* slot_power_limit_scale - Bits[16:15], RO, default = 2'b00  */
    UINT32 electromechanical_interlock_present : 1;
    /* electromechanical_interlock_present - Bits[17:17], RO, default = 1'b0  */
    UINT32 command_complete_not_capable : 1;
    /* command_complete_not_capable - Bits[18:18], RO, default = 1'b0  */
    UINT32 physical_slot_number : 13;
    /* physical_slot_number - Bits[31:19], RO, default = 13'b0000000000000  */
  } Bits;
  UINT32 Data;
} SLTCAP2_IIO_DFX_VTD_STRUCT;


/* SLTSTS2_IIO_DFX_VTD_REG supported on:                                      */
/*       SKX_A0 (0x2013C07A)                                                  */
/*       SKX (0x2013C07A)                                                     */
/* Register default value:              0x0000                                */
#define SLTSTS2_IIO_DFX_VTD_REG 0x1204207A
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x07a
 */
typedef union {
  struct {
    UINT16 attention_button_pressed : 1;
    /* attention_button_pressed - Bits[0:0], RO, default = 1'b0  */
    UINT16 power_fault_detected : 1;
    /* power_fault_detected - Bits[1:1], RO, default = 1'b0  */
    UINT16 mrl_sensor_changed : 1;
    /* mrl_sensor_changed - Bits[2:2], RO, default = 1'b0  */
    UINT16 presence_detect_changed : 1;
    /* presence_detect_changed - Bits[3:3], RO, default = 1'b0  */
    UINT16 command_completed : 1;
    /* command_completed - Bits[4:4], RO, default = 1'b0  */
    UINT16 mrl_sensor_state : 1;
    /* mrl_sensor_state - Bits[5:5], RO, default = 1'b0  */
    UINT16 presence_detect_state : 1;
    /* presence_detect_state - Bits[6:6], RO, default = 1'b0  */
    UINT16 electromechanical_latch_status : 1;
    /* electromechanical_latch_status - Bits[7:7], RO, default = 1'b0  */
    UINT16 data_link_layer_state_changed : 1;
    /* data_link_layer_state_changed - Bits[8:8], RO, default = 1'b0  */
    UINT16 rsvd : 7;
    /* rsvd - Bits[15:9], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT16 Data;
} SLTSTS2_IIO_DFX_VTD_STRUCT;


/* VTDDEBUGREG0_IIO_DFX_VTD_REG supported on:                                 */
/*       SKX_A0 (0x4013C118)                                                  */
/*       SKX (0x4013C118)                                                     */
/* Register default value:              0x00000800                            */
#define VTDDEBUGREG0_IIO_DFX_VTD_REG 0x12044118
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * This register contains defeature bits for the VT-d block.
 */
typedef union {
  struct {
    UINT32 dbg_mux_en : 1;
    /* dbg_mux_en - Bits[0:0], RWS_L, default = 1'b0 
       Turns on the debug muxes (clocks, etc).
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 vteccdis : 1;
    /* vteccdis - Bits[1:1], RWS_L, default = 1'b0 
       VT Disable Parity CheckDisables parity check for read completions
       0: Enable parity check
       1: Disable parity check
     */
    UINT32 vtinvd : 4;
    /* vtinvd - Bits[5:2], RWS_L, default = 4'b0000 
       VT Invalidation Degradation controls[5]: Degrades TLB Domain down to global.
       [4]: Degrades TLB PGI down to global.
       [3]: Degrades TLB PGI down to domain.
       [2]: Degrades context cache domain to global.
     */
    UINT32 vtud_debug : 21;
    /* vtud_debug - Bits[26:6], RWS_L, default = 23'b00000000000000000100000 
       The following bits in this field are used as follows.
       [12]: vt_dis_isoch_pref_fix
       [11]: vt_en_tcam_cmp_wr
       [10]: vt_en_inv_all_pending
       [9]: vt_en_inv_all
       [8]: vt_drain_vc1
       [7]: vt_dis_vld_cmt_replacement (when vt_dis_ats_cc_cmp=0)
       [6]: PSMIEn (Enables PSMI_Wipe to VT-d)
       If vtgenctrl2.tlb_hold_fetch_insert=1 then vtddebugreg0.vt_en_tcam_cmp_wr must 
       be set to 1. 
     */
    UINT32 tlb_passthru_sp_size : 1;
    /* tlb_passthru_sp_size - Bits[27:27], RWS_L, default = 1'b0 
       
       untranslated passthru super page size:
       0 - 1G superpage size, 1 - infinite superpage size
               
     */
    UINT32 tlb_dis_ut_passthru_superpage : 1;
    /* tlb_dis_ut_passthru_superpage - Bits[28:28], RWS_L, default = 1'b0 
       
       Set this to 1 to disable allocating superpages for at=0, tt=01 traffic.
       If you set vtgenctrl2.tlb_allow_b2b_victims=0, you also need to set 
       vtddebugreg0.tlb_dis_ut_passthru_superpage=1. 
               
     */
    UINT32 tlb_dis_hsd254725_fix : 1;
    /* tlb_dis_hsd254725_fix - Bits[29:29], RWS_L, default = 1'b0 
       Set this to 1 to disable the fix for HSX HSD 254725. Remove this in future 
       products. 
     */
    UINT32 vtdiscarpt : 1;
    /* vtdiscarpt - Bits[30:30], RWS_L, default = 1'b0 
       Disable CA Reporting0: Enable Completer Abort Reporting.
       1: Disable Completer Abort Reporting.
     */
    UINT32 vtinhmsi : 1;
    /* vtinhmsi - Bits[31:31], RWS_L, default = 1'b0 
       Inhibit MSI.0: Allow MSI generation.
       1: Inhibit MSI generation.
     */
  } Bits;
  UINT32 Data;
} VTDDEBUGREG0_IIO_DFX_VTD_STRUCT;


/* VTDDEBUGREG1_IIO_DFX_VTD_REG supported on:                                 */
/*       SKX_A0 (0x4013C11C)                                                  */
/*       SKX (0x4013C11C)                                                     */
/* Register default value:              0x00000000                            */
#define VTDDEBUGREG1_IIO_DFX_VTD_REG 0x1204411C
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * This register controls the cache masking and enable bits for the VT-d block in 
 * each XP cluster. 
 */
typedef union {
  struct {
    UINT32 cachemask : 7;
    /* cachemask - Bits[6:0], RWS_L, default = 7'b0000000 
       1
     */
    UINT32 maskenable : 4;
    /* maskenable - Bits[10:7], RWS_L, default = 4'b0000 
       1
     */
    UINT32 debug_reg1 : 21;
    /* debug_reg1 - Bits[31:11], RWS_L, default = 21'b000000000000000000000 
       1
     */
  } Bits;
  UINT32 Data;
} VTDDEBUGREG1_IIO_DFX_VTD_STRUCT;


/* VTDPAREINJCTL_IIO_DFX_VTD_REG supported on:                                */
/*       SKX_A0 (0x4013C120)                                                  */
/*       SKX (0x4013C120)                                                     */
/* Register default value:              0x00000000                            */
#define VTDPAREINJCTL_IIO_DFX_VTD_REG 0x12044120
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * This register contains the error injection mask register to determine which bits 
 * get corrupted for error detection testing. VT-d Parity Error Usage Example 
 */
typedef union {
  struct {
    UINT32 pf : 4;
    /* pf - Bits[3:0], RWS, default = 4'b0000 
       Protection Flip bitsThis mask is used to invert the corresponding parity bit 
       assigned to the byte, word, or dword of the data. Refer to Table 14-68 for 
       details. 
       Note: If there is only 1 parity bit for a RAM then a PF bit is not necessary. By 
       selecting the BPS and an error enable will invert the parity bit (assuming the 
       selected EINJ has triggered) 
     */
    UINT32 rsvd_4 : 20;
    /* rsvd_4 - Bits[23:4], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 bps : 4;
    /* bps - Bits[27:24], RWS, default = 4'b0000 
       Buffer-Path select:0000: IOTLB0/IOTLB1 tag RAM 128x64 (2 parity bits)
       0001: IOTLB0/IOTLB1 data RAM 128x140 (4 parity bits)
       0010: reserved
       0011: reserved
       0100: Context Cache tag RAM 128x32 (1 parity bit)
       0101: Context Cache Data RAM 128x52 (2 parity bits)
       0110: L1/L2 tag RAM 128x40 (2 parity bits)
       0111: L1/L2 Data RAM 128x44 (1 parity bit)
       1000: L3 Tag RAM 128x40 (2 parity bits)
       1001: L3 Data RAM 128x44 (1 parity bit)
       1010-1111: Reserved
       Note: Abnormalities may occur for values 5h, 7h and 9h (refer HSD 2346417).
     */
    UINT32 rsvd_28 : 1;
    /* rsvd_28 - Bits[28:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 errinjst : 1;
    /* errinjst - Bits[29:29], RW1CS, default = 1'b0 
       Error injected status0: No error was injected
       1: An error was injected
     */
    UINT32 eirfsel : 1;
    /* eirfsel - Bits[30:30], RWS, default = 1'b0 
       Error Injection Function Select0: Select EINJ0 response function.
       1: Select EINJ1 response function.
     */
    UINT32 eien : 1;
    /* eien - Bits[31:31], RWS_L, default = 1'b0 
       Error injection enable0: Disable error injection
       1: Enable error injection
     */
  } Bits;
  UINT32 Data;
} VTDPAREINJCTL_IIO_DFX_VTD_STRUCT;


/* VTDPARERRLOG_IIO_DFX_VTD_REG supported on:                                 */
/*       SKX_A0 (0x4013C124)                                                  */
/*       SKX (0x4013C124)                                                     */
/* Register default value:              0x00000000                            */
#define VTDPARERRLOG_IIO_DFX_VTD_REG 0x12044124
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * This debug register contains the log for which buffer/path encountered a parity 
 * error. Each bit corresponds to a given buffer/path. As errors are detected 
 * either from normal operational parity errors or those injected, the 
 * corresponding bit is set. This register accumulates over time the various errors 
 * encountered. A write with all 1\xd5 s will clear this register, a write with a 
 * single bit set to 1 will clear the corresponding bit location in this register. 
 */
typedef union {
  struct {
    UINT32 pelset0 : 3;
    /* pelset0 - Bits[2:0], RW1CS, default = 3'b000 
       Parity Error Log Set0[2]: Parity error detected on pbit[1] of Context Cache Data
       [1]: Parity error detected on pbit[0] of Context Cache Data
       [0]: Parity error detected on pbit[0] of Context cache tag
     */
    UINT32 pelset1 : 4;
    /* pelset1 - Bits[6:3], RW1CS, default = 4'b0000 
       Parity Error Log Set1[6]: Parity error detected on pbit[1] of IOTLB1 tag RAM
       [5]: Parity error detected on pbit[0] of IOTLB1 tag RAM
       [4]: Parity error detected on pbit[1] of IOTLB0 tag RAM
       [3]: Parity error detected on pbit[0] of IOTLB0 tag RAM
     */
    UINT32 pelset2 : 4;
    /* pelset2 - Bits[10:7], RW1CS, default = 4'b0000 
       Parity Error Log Set2[10]: Parity error detected on pbit[3] of IOTLB0 data RAM
       [9]: Parity error detected on pbit[2] of IOTLB0 data RAM
       [8]: Parity error detected on pbit[1] of IOTLB0 data RAM
       [7]: Parity error detected on pbit[0] of IOTLB0 data RAM
     */
    UINT32 pelset2a : 1;
    /* pelset2a - Bits[11:11], RW1CS, default = 1'b0 
       Parity Error Log Set2a[11]: Parity error detected on pbit[1] of L1/L2 tag RAM
     */
    UINT32 pelset3 : 4;
    /* pelset3 - Bits[15:12], RW1CS, default = 4'b0000 
       Parity Error Log Set3[15]: Parity error detected on pbit[3] of IOTLB1 data RAM
       [14]: Parity error detected on pbit[2] of IOTLB1 data RAM
       [13]: Parity error detected on pbit[1] of IOTLB1 data RAM
       [12]: Parity error detected on pbit[0] of IOTLB1 data RAM
     */
    UINT32 pelset3a : 1;
    /* pelset3a - Bits[16:16], RW1CS, default = 1'b0 
       Parity Error Log Set3a[16]: Parity error detected on pbit[1] of L3 tag RAM
     */
    UINT32 pelset4 : 4;
    /* pelset4 - Bits[20:17], RW1CS, default = 4'b0000 
       Parity Error Log Set4[20]: Parity error detected on pbit[0] of L3 data RAM
       [19]: Parity error detected on pbit[0] of L3 tag RAM
       [18]: Parity error detected on pbit[0] of L1/L2 data RAM
       [17]: Parity error detected on pbit[0] of L1/L2 tag RAM
     */
    UINT32 rsvd : 11;
    /* rsvd - Bits[31:21], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} VTDPARERRLOG_IIO_DFX_VTD_STRUCT;


/* VTDATHR_IIO_DFX_VTD_REG supported on:                                      */
/*       SKX_A0 (0x4013C130)                                                  */
/*       SKX (0x4013C130)                                                     */
/* Register default value:              0x000000CA                            */
#define VTDATHR_IIO_DFX_VTD_REG 0x12044130
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x130
 */
typedef union {
  struct {
    UINT32 str_sel : 4;
    /* str_sel - Bits[3:0], RWS_L, default = 4'b1010 
       1
     */
    UINT32 stp_sel : 4;
    /* stp_sel - Bits[7:4], RWS_L, default = 4'b1100 
       1
     */
    UINT32 rsvd : 24;
    /* rsvd - Bits[31:8], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} VTDATHR_IIO_DFX_VTD_STRUCT;


/* VTDPRIVC1_IIO_DFX_VTD_REG supported on:                                    */
/*       SKX_A0 (0x2013C164)                                                  */
/*       SKX (0x2013C164)                                                     */
/* Register default value:              0x0000                                */
#define VTDPRIVC1_IIO_DFX_VTD_REG 0x12042164
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x164
 */
typedef union {
  struct {
    UINT16 privc1 : 16;
    /* privc1 - Bits[15:0], RWS_L, default = 16'b0000000000000000 
       reserve fro DFT bits.
     */
  } Bits;
  UINT16 Data;
} VTDPRIVC1_IIO_DFX_VTD_STRUCT;


/* VTDPRIVC0_IIO_DFX_VTD_REG supported on:                                    */
/*       SKX_A0 (0x4013C168)                                                  */
/*       SKX (0x4013C168)                                                     */
/* Register default value:              0x00000040                            */
#define VTDPRIVC0_IIO_DFX_VTD_REG 0x12044168
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * This register contains VT-d defeature bits. The architectural visible defeatures 
 * are placed here as well. 
 */
typedef union {
  struct {
    UINT32 msirevalen : 1;
    /* msirevalen - Bits[0:0], RWS_L, default = 1'b0 
       MSI Re-evaluation EnableThis will enable the generation of additional MSI 
       message when software reads / clears partial status. This will enable the 
       re-evaluation of status after the software reads / clears the status register 
       [specific for that MSI vector] and will check whether there are any other status 
       bits pending that needs software attention. 
       0:MSI Re-evaluation logic disabled.
       1:MSI Re-evaluation logic enabled.
       Refer to Table 14-65 for usage model details.
     */
    UINT32 msiclapsen : 1;
    /* msiclapsen - Bits[1:1], RWS_L, default = 1'b0 
       MSI Collapsing Enable0: MSI Collapsing Disabled
       If this bit is disabled, then MSI message will be sent for each and every status 
       update done by hardware. 
       Logic: Edge_detect[status0] OR Edge_detect[status1] OR Edge_detect[status2] OR 
       ... 
       1: MSI Collapsing Enable
       If this bit is enabled, then MSI message will be sent only once and will wait 
       until the software clears all the status bits. 
       Logic : Edge_detect [OR (all_status_bits_causing_msi)]
       Refer to Table 14-65 for usage model details.
     */
    UINT32 ltkeep : 1;
    /* ltkeep - Bits[2:2], RWS_L, default = 1'b0 
       LT debug mode to keep features enabled.In LT debug mode the chipset will not 
       disable any LT features or assert LTRESET#, as described already in the TBG 
       C-spec. 
       0: Normal LT operation.
       1: Keep LT features enabled
     */
    UINT32 rsvd_3 : 1;
    /* rsvd_3 - Bits[3:3], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 tlbcmptoten : 1;
    /* tlbcmptoten - Bits[4:4], RWS_L, default = 1'b0 
       Device IOTLB Completion Time out Test Enable:The bit is used for the pre-silicon 
       validation. 
       0: Normal time out value is used.
       1: 640ns timeout value is used.
     */
    UINT32 tlbcmpto : 2;
    /* tlbcmpto - Bits[6:5], RWS_L, default = 2'b10 
       Device IOTLB completion time out:Following time out value would be used if the 
       test enable bit is cleared (TLBCMPTOTEN=0) 
       00: 64us
       01: 256us
       10: 1s
       11: 16s
     */
    UINT32 tlbnochk : 1;
    /* tlbnochk - Bits[7:7], RWS_L, default = 1'b0 
       IOTLB No checking0: Check the Device IOTLB source ID fro valid completion
       1: Do not check the Device IOTLB Source ID for valid completion
     */
    UINT32 drchkbit : 1;
    /* drchkbit - Bits[8:8], RWS_L, default = 1'b0 
       Debug Register 0 Chicken Bit
     */
    UINT32 rsvd_9 : 3;
    /* rsvd_9 - Bits[11:9], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 adm : 1;
    /* adm - Bits[12:12], RWS_L, default = 1'b0 
       Address Drain Mode 0: Request to drain the read address first and then by write 
       address. 
       1: Request address draining for both read and write address at the same time.
     */
    UINT32 irp : 1;
    /* irp - Bits[13:13], RWS_L, default = 1'b0 
       Isoch Request Priority enable.0: Azalia request has the highest priority for 
       page walk request. 
       1: Azalia has up to 4 consecutive page walk request priority.
     */
    UINT32 qsten : 1;
    /* qsten - Bits[14:14], RWS_L, default = 1'b0 
       Set Queue Size Test EnableWhen enabled, the length of the invalidation request 
       queue become 40. 
     */
    UINT32 dps : 1;
    /* dps - Bits[15:15], RWS_L, default = 1'b0 
       Disable Priority Selection
     */
    UINT32 fpsr : 1;
    /* fpsr - Bits[16:16], RWS_L, default = 1'b0 
       Force Periodic Switch Retry
     */
    UINT32 bad : 1;
    /* bad - Bits[17:17], RWS_L, default = 1'b0 
       Chicken bit to bypass address draining for Vt-d invalidation command.
     */
    UINT32 invwin : 6;
    /* invwin - Bits[23:18], RWS_L, default = 6'b000000 
       Invalidation WindowControls the minimum window in which the invalidation in 
       progress must remain active. Value is in terms of core clocks. 
     */
    UINT32 rsvd_24 : 1;
    /* rsvd_24 - Bits[24:24], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dad : 1;
    /* dad - Bits[25:25], RWS_L, default = 1'b0 
       Chicken bit to bypass address draining when TE/IE is turn on(TE/IE goes from 
       0->1). 
       When set, DMA/Interrupt draining is not supported before completing the 
       tranlsation enable(TE/IE, goes from 0 -> 1) command. 
     */
    UINT32 dvt : 1;
    /* dvt - Bits[26:26], RWS_L, default = 1'b0 
       Disable VT-d
     */
    UINT32 ud : 5;
    /* ud - Bits[31:27], RWS_L, default = 5'b00000 
       [31] Chicken bit to disable the GPA_ERR signaling hint for completions from VTd 
       back to the transaction layer 
       0: Fix enabled
       1: Fix disabled
       [30] Chicken bit to re-enable the error logging on misc error bit when 
       translation is on 
       0: Fix enabled (logging squashed)
       1: Fix disabled (logging enabled)
       Recommended BIOS setting: 0
       EDS visibility: No
       [29] Chicken bit to disable ATS translated request context cache lookup
       0: Fix enabled
       1: Fix disabled
       Recommended BIOS setting: 0
       EDS visibility: No
       [28] Chicken bit to disable forcing of TLB to report zero for all counters
       0: Fix enabled
       1: Fix disabled
       Recommended BIOS setting: 0
       EDS visibility: No
       [27] reserved
       
     */
  } Bits;
  UINT32 Data;
} VTDPRIVC0_IIO_DFX_VTD_STRUCT;


/* VTDPRIVS0_IIO_DFX_VTD_REG supported on:                                    */
/*       SKX_A0 (0x4013C16C)                                                  */
/*       SKX (0x4013C16C)                                                     */
/* Register default value:              0x00000000                            */
#define VTDPRIVS0_IIO_DFX_VTD_REG 0x1204416C
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * This register contains VT-d status bits.
 */
typedef union {
  struct {
    UINT32 tlbentst0 : 1;
    /* tlbentst0 - Bits[0:0], RW1CS, default = 1'b0 
       TLB entry status bit0: No TLB entries are in commit state
       1: At least one TLB entry are in commit state
     */
    UINT32 tlbentst1 : 1;
    /* tlbentst1 - Bits[1:1], RW1CS, default = 1'b0 
       TLB entry status bit for TLB 10: No TLB entries are in commit state
       1: At least one TLB entry are in commit state
     */
    UINT32 cnxcommtst : 1;
    /* cnxcommtst - Bits[2:2], RW1CS, default = 1'b0 
       Context cache or non-leaf entries status bit0: No Context cache or non-leaf 
       entries are in commit state 
       1: At least one Context cache or non-leaf entries are in commit state
     */
    UINT32 notused : 29;
    /* notused - Bits[31:3], RW1CS, default = 29'b00000000000000000000000000000  */
  } Bits;
  UINT32 Data;
} VTDPRIVS0_IIO_DFX_VTD_STRUCT;


/* VTDPMDFXMAT_0_IIO_DFX_VTD_REG supported on:                                */
/*       SKX_A0 (0x4013C170)                                                  */
/*       SKX (0x4013C170)                                                     */
/* Register default value:              0x00000000                            */
#define VTDPMDFXMAT_0_IIO_DFX_VTD_REG 0x12044170
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * VTd Perfmon Match for Perfmon Counter 0
 */
typedef union {
  struct {
    UINT32 dfxmat0_0 : 8;
    /* dfxmat0_0 - Bits[7:0], RWS, default = 8'b00000000 
       1
     */
    UINT32 dfxmat1_0 : 8;
    /* dfxmat1_0 - Bits[15:8], RWS, default = 8'b00000000 
       1
     */
    UINT32 dfxmat2_0 : 8;
    /* dfxmat2_0 - Bits[23:16], RWS, default = 8'b00000000 
       1
     */
    UINT32 orfloc_0 : 2;
    /* orfloc_0 - Bits[25:24], RWS, default = 2'b00 
       1
     */
    UINT32 div_0 : 2;
    /* div_0 - Bits[27:26], RWS, default = 2'b00 
       1
     */
    UINT32 rsvd : 4;
    /* rsvd - Bits[31:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} VTDPMDFXMAT_0_IIO_DFX_VTD_STRUCT;


/* VTDPMDFXMAT_1_IIO_DFX_VTD_REG supported on:                                */
/*       SKX_A0 (0x4013C174)                                                  */
/*       SKX (0x4013C174)                                                     */
/* Register default value:              0x00000000                            */
#define VTDPMDFXMAT_1_IIO_DFX_VTD_REG 0x12044174
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * VTd Perfmon Match for Perfmon Counter 0
 */
typedef union {
  struct {
    UINT32 dfxmat0_1 : 8;
    /* dfxmat0_1 - Bits[7:0], RWS, default = 8'b00000000 
       1
     */
    UINT32 dfxmat1_1 : 8;
    /* dfxmat1_1 - Bits[15:8], RWS, default = 8'b00000000 
       1
     */
    UINT32 dfxmat2_1 : 8;
    /* dfxmat2_1 - Bits[23:16], RWS, default = 8'b00000000 
       1
     */
    UINT32 orfloc_1 : 2;
    /* orfloc_1 - Bits[25:24], RWS, default = 2'b00 
       1
     */
    UINT32 div_1 : 2;
    /* div_1 - Bits[27:26], RWS, default = 2'b00 
       1
     */
    UINT32 rsvd : 4;
    /* rsvd - Bits[31:28], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} VTDPMDFXMAT_1_IIO_DFX_VTD_STRUCT;


/* VTDPMDFXMSK_0_IIO_DFX_VTD_REG supported on:                                */
/*       SKX_A0 (0x4013C178)                                                  */
/*       SKX (0x4013C178)                                                     */
/* Register default value:              0x00000000                            */
#define VTDPMDFXMSK_0_IIO_DFX_VTD_REG 0x12044178
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * VTd perfmon DFx Mask for Perfmon Counter 1
 */
typedef union {
  struct {
    UINT32 dfxmsk0_0 : 8;
    /* dfxmsk0_0 - Bits[7:0], RWS, default = 8'b00000000 
       1
     */
    UINT32 dfxmsk1_0 : 8;
    /* dfxmsk1_0 - Bits[15:8], RWS, default = 8'b00000000 
       1
     */
    UINT32 dfxmsk2_0 : 8;
    /* dfxmsk2_0 - Bits[23:16], RWS, default = 8'b00000000 
       1
     */
    UINT32 rsvd : 8;
    /* rsvd - Bits[31:24], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} VTDPMDFXMSK_0_IIO_DFX_VTD_STRUCT;


/* VTDPMDFXMSK_1_IIO_DFX_VTD_REG supported on:                                */
/*       SKX_A0 (0x4013C17C)                                                  */
/*       SKX (0x4013C17C)                                                     */
/* Register default value:              0x00000000                            */
#define VTDPMDFXMSK_1_IIO_DFX_VTD_REG 0x1204417C
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * VTd perfmon DFx Mask for Perfmon Counter 1
 */
typedef union {
  struct {
    UINT32 dfxmsk0_1 : 8;
    /* dfxmsk0_1 - Bits[7:0], RWS, default = 8'b00000000 
       1
     */
    UINT32 dfxmsk1_1 : 8;
    /* dfxmsk1_1 - Bits[15:8], RWS, default = 8'b00000000 
       1
     */
    UINT32 dfxmsk2_1 : 8;
    /* dfxmsk2_1 - Bits[23:16], RWS, default = 8'b00000000 
       1
     */
    UINT32 rsvd : 8;
    /* rsvd - Bits[31:24], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} VTDPMDFXMSK_1_IIO_DFX_VTD_STRUCT;


/* IRP_MISC_DFX0_IIO_DFX_VTD_REG supported on:                                */
/*       SKX_A0 (0x4013C310)                                                  */
/*       SKX (0x4013C310)                                                     */
/* Register default value:              0x02FF3186                            */
#define IRP_MISC_DFX0_IIO_DFX_VTD_REG 0x12044310
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * DFX register 0 for IRP/IRPRING
 */
typedef union {
  struct {
    UINT32 p_pf_snp_rsp_holdoff_cnt : 4;
    /* p_pf_snp_rsp_holdoff_cnt - Bits[3:0], RW_L, default = 4'b0110  */
    UINT32 rsvd_4 : 25;
    UINT32 force_no_snp_on_vc1_vcm : 1;
    /* force_no_snp_on_vc1_vcm - Bits[29:29], RW_L, default = 1'b0  */
    UINT32 enable_parity_err_checking : 1;
    /* enable_parity_err_checking - Bits[30:30], RW_L, default = 1'b0 
       Enables Parity Error Checking in the IRP on the data received from the IIO 
       switch. 
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 disable_pf_ack_bypass_path : 1;
    /* disable_pf_ack_bypass_path - Bits[31:31], RW_L, default = 1'b0  */
  } Bits;
  UINT32 Data;
} IRP_MISC_DFX0_IIO_DFX_VTD_STRUCT;


/* IRP_MISC_DFX1_IIO_DFX_VTD_REG supported on:                                */
/*       SKX_A0 (0x4013C314)                                                  */
/*       SKX (0x4013C314)                                                     */
/* Register default value:              0x3D012800                            */
#define IRP_MISC_DFX1_IIO_DFX_VTD_REG 0x12044314
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * DFX register 1 for IRP/IRPRING
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 22;
    UINT32 use_isoc_ovf_q : 1;
    /* use_isoc_ovf_q - Bits[22:22], RW_L, default = 1'b0  */
    UINT32 dbg_iot_sel_pstack : 1;
    /* dbg_iot_sel_pstack - Bits[23:23], RWS_L, default = 1'b0 
       Selects PCIE IOT from pstack/iou1
       Notes:
       Locked by DBGBUSLCK
     */
    UINT32 use_crd_flow : 1;
    /* use_crd_flow - Bits[24:24], RW_L, default = 1'b1 
       Default is to use credit based flow between IRPC and TXQ (ADq and BLq) for vc1, 
       vc0p0, vc0p1, ndr, snprsp and drs headers. 
     */
    UINT32 addr_parity_chk_disable : 1;
    /* addr_parity_chk_disable - Bits[25:25], RW_L, default = 1'b0 
       Disables the parity check and Log in IRPRING.snoop Queue.
     */
    UINT32 transfer_tph_to_secondary : 1;
    /* transfer_tph_to_secondary - Bits[26:26], RW_L, default = 1'b1 
       Default is to transfer TPH hints to secondary (with the new DCA flow).
     */
    UINT32 transfer_tph_to_coh_rd : 1;
    /* transfer_tph_to_coh_rd - Bits[27:27], RW_L, default = 1'b1 
       This controls if you want to transfer the TPH hint to coherent reads, and hence 
       any conflicting 
       writes after the read. If disabled, the assumption is that the read consumes the 
       previous 
       write, and so subsequent writes will still have the TPH hint from software.
     */
    UINT32 en_poison_mmio_read_cmpl_for_ca : 1;
    /* en_poison_mmio_read_cmpl_for_ca - Bits[28:28], RW_L, default = 1'b1 
       This bit enables the feature to set the poison bit in BL data for MMIO read 
       completions, 
       when the traffic controller returns completer abort (CA).
     */
    UINT32 en_poison_mmio_read_cmpl_for_ma : 1;
    /* en_poison_mmio_read_cmpl_for_ma - Bits[29:29], RW_L, default = 1'b1 
       This bit enables the feature to set the poison bit in BL data for MMIO read 
       completions, 
       when the traffic controller returns master abort (MA), that is if the 
       transaction is 
       unsupported or not claimed.
     */
    UINT32 rsvd_30 : 1;
    /* rsvd_30 - Bits[30:30], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 dbg_mux_en : 1;
    /* dbg_mux_en - Bits[31:31], RWS_L, default = 1'b0 
       Turns on the debug muxes (clocks, etc).
       Notes:
       Locked by DBGBUSLCK
     */
  } Bits;
  UINT32 Data;
} IRP_MISC_DFX1_IIO_DFX_VTD_STRUCT;


/* IRP_MISC_DFX2_IIO_DFX_VTD_REG supported on:                                */
/*       SKX_A0 (0x4013C318)                                                  */
/*       SKX (0x4013C318)                                                     */
/* Register default value:              0xE3FFE0F8                            */
#define IRP_MISC_DFX2_IIO_DFX_VTD_REG 0x12044318
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * DFX Register 2 for IRP/IRPRING.
 */
typedef union {
  struct {
    UINT32 rsvd_0 : 13;
    UINT32 enable_vc1 : 1;
    /* enable_vc1 - Bits[13:13], RW_L, default = 1'b1  */
    UINT32 rsvd_14 : 18;
  } Bits;
  UINT32 Data;
} IRP_MISC_DFX2_IIO_DFX_VTD_STRUCT;




/* IRPP0PAREINJCTL_IIO_DFX_VTD_REG supported on:                              */
/*       SKX_A0 (0x4013C320)                                                  */
/*       SKX (0x4013C320)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP0PAREINJCTL_IIO_DFX_VTD_REG 0x12044320
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * This register contains the error injection mask register to determine which 
 * parity bits get corrupted for error detection testing. 
 */
typedef union {
  struct {
    UINT32 pf : 16;
    /* pf - Bits[15:0], RWS, default = 16'b0000000000000000 
       Protection Flip bits
       This mask is used to invert the corresponding parity bit assigned to the byte, 
       word, or dword of the data. Refer to Table 14-67 for details. 
     */
    UINT32 hcnksel : 2;
    /* hcnksel - Bits[17:16], RWS, default = 2'b00 
       Half Chunk Select
       This bit field selects which chunk to apply the PF[15:0] bit field.
       00: chunk 0 (Bytes 15:00 of data)
       01: chunk 1 (Bytes 31:16 of data)
       When buffer path select indicates Inbound Pkt RF FIFO then this field set to 00 
       would select data bits 0 to 127 for parity error injection, and this field set 
       to 01 would select data bits 128 to 256 for parity error injection. 
     */
    UINT32 rsvd_18 : 5;
    /* rsvd_18 - Bits[22:18], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 fpb : 1;
    /* fpb - Bits[23:23], RO, default = 1'b0 
       Flip Poison Bit
     */
    UINT32 bps : 3;
    /* bps - Bits[26:24], RWS, default = 3'b000 
       Buffer-Path select:
       000-010: Reserved
       011: Inbound Pkt RF FIFO
       100-111: Reserved
     */
    UINT32 rsvd_27 : 2;
    /* rsvd_27 - Bits[28:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 errinjst : 1;
    /* errinjst - Bits[29:29], RW1CS, default = 1'b0 
       Error injected status
       0: No error was injected
       1: An error was injected
     */
    UINT32 eirfsel : 1;
    /* eirfsel - Bits[30:30], RWS, default = 1'b0 
       Error Injection Function Select
       0: Select EINJ0 response function.
       1: Select EINJ1 response function.
       (Must enable the IIO global error injection modules to generate the EINJ0 and 
       EINJ1 response functions to feed into the IRP) 
     */
    UINT32 eien : 1;
    /* eien - Bits[31:31], RWS_L, default = 1'b0 
       Error injection enable
       0: Disable error injection
       1: Enable error injection
     */
  } Bits;
  UINT32 Data;
} IRPP0PAREINJCTL_IIO_DFX_VTD_STRUCT;


/* IRPP1PAREINJCTL_IIO_DFX_VTD_REG supported on:                              */
/*       SKX_A0 (0x4013C324)                                                  */
/*       SKX (0x4013C324)                                                     */
/* Register default value:              0x00000000                            */
#define IRPP1PAREINJCTL_IIO_DFX_VTD_REG 0x12044324
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * This register contains the error injection mask register to determine which 
 * parity bits get corrupted for error detection testing.CB DMA Parity Error Usage 
 * Example 
 */
typedef union {
  struct {
    UINT32 pf : 16;
    /* pf - Bits[15:0], RWS, default = 16'b0000000000000000 
       Protection Flip bits
       This mask is used to invert the corresponding parity bit assigned to the byte, 
       word, or dword of the data. Refer to Table 14-67 for details. 
     */
    UINT32 hcnksel : 2;
    /* hcnksel - Bits[17:16], RWS, default = 2'b00 
       Half Chunk Select
       This bit field selects which chunk to apply the PF[15:0] bit field.
       00: chunk 0 (Bytes 15:00 of data)
       01: chunk 1 (Bytes 31:16 of data)
       When buffer path select indicates Inbound Pkt RF FIFO then this field set to 00 
       would select data bits 0 to 127 for parity error injection, and this field set 
       to 01 would select data bits 128 to 256 for parity error injection. 
     */
    UINT32 rsvd_18 : 5;
    /* rsvd_18 - Bits[22:18], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 fpb : 1;
    /* fpb - Bits[23:23], RO, default = 1'b0 
       Flip Poison Bit
     */
    UINT32 bps : 3;
    /* bps - Bits[26:24], RWS, default = 3'b000 
       Buffer-Path select:
       000-010: Reserved
       011: Inbound Pkt RF FIFO
       100-111: Reserved
     */
    UINT32 rsvd_27 : 2;
    /* rsvd_27 - Bits[28:27], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 errinjst : 1;
    /* errinjst - Bits[29:29], RW1CS, default = 1'b0 
       Error injected status
       0: No error was injected
       1: An error was injected
     */
    UINT32 eirfsel : 1;
    /* eirfsel - Bits[30:30], RWS, default = 1'b0 
       Error Injection Function Select
       0: Select EINJ0 response function.
       1: Select EINJ1 response function.
       (Must enable the IIO global error injection modules to generate the EINJ0 and 
       EINJ1 response functions to feed into the IRP) 
     */
    UINT32 eien : 1;
    /* eien - Bits[31:31], RWS_L, default = 1'b0 
       Error injection enable
       0: Disable error injection
       1: Enable error injection
     */
  } Bits;
  UINT32 Data;
} IRPP1PAREINJCTL_IIO_DFX_VTD_STRUCT;


/* IRPEGCREDITS_IIO_DFX_VTD_REG supported on:                                 */
/*       SKX_A0 (0x4013C328)                                                  */
/*       SKX (0x4013C328)                                                     */
/* Register default value:              0x8C415C41                            */
#define IRPEGCREDITS_IIO_DFX_VTD_REG 0x12044328
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * Credits used by IRP when transmitting messages to various destinations on 
 * various rings.  
 */
typedef union {
  struct {
    UINT32 qpi_ndr_shared_cdt_threshold : 3;
    /* qpi_ndr_shared_cdt_threshold - Bits[2:0], RW_L, default = 3'b001 
       Number of shared AD egress credits that QPI NDR can consume.
     */
    UINT32 rsvd_3 : 1;
    /* rsvd_3 - Bits[3:3], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 vc0p0_shared_cdt_threshold : 4;
    /* vc0p0_shared_cdt_threshold - Bits[7:4], RW_L, default = 4'b0100 
       Number of shared AD egress credits that VC0 posted=0 can consume.
       You must set (vc0p0_shared_cdt_threshold >= 1).
     */
    UINT32 ad_shared_cdt_threshold : 4;
    /* ad_shared_cdt_threshold - Bits[11:8], RW_L, default = 4'b1100 
       Number of shared AD egress credits per pool in M2. M2 has 2 pools of 16, but 1 
       entry is for ubox. 
       type | dedicated | uses shared | max
       | credits | credits? | outstanding
       =========================================================
       VC1 | 1 | no | 1
       VC0p1 | 1 | yes (AD) | 1 + ad_shared_cdt_threshold
       VC0p0 | 0 | yes (AD) | vc0p0_shared_cdt_threshold
       qpi_ndr | 1 | yes (AD) | 1 + qpi_ndr_shared_cdt_threshold
       You must set (ad_shared_cdt_threshold <= 12).
       You must set ((vc0p0_shared_cdt_threshold + qpi_ndr_shared_cdt_threshold) <= 
       ad_shared_cdt_threshold). 
     */
    UINT32 ak_shared_cdt_threshold : 3;
    /* ak_shared_cdt_threshold - Bits[14:12], RW_L, default = 3'b101 
       Number of shared AK egress credits per pool in R2. R2 has 2 pools of 8, but 1 
       entry is for ubox. 
       type | dedicated | uses shared | max
       | credits | credits? | outstanding
       =========================================================
       local_ndr | 1 | yes (AK) | 1 + ak_shared_cdt_threshold
       snp_rsp | 1 | yes (AK) | 1 + ak_shared_cdt_threshold
       You must set (ak_shared_cdt_threshold <= 5).
     */
    UINT32 ad0_ak0_plus_one_shared_cdt : 1;
    /* ad0_ak0_plus_one_shared_cdt - Bits[15:15], RW_L, default = 1'b0 
       Increase the shared AD and AK credit thresholds by 1 in AD0 and AK0 to take 
       advantage of extra poolA slots in R2 egress.Note that there is not actually an 
       extra slot in AK poolA (HSX HSD 244198). 
     */
    UINT32 en_cdt_bgf_backpressure : 1;
    /* en_cdt_bgf_backpressure - Bits[16:16], RW_L, default = 1'b1 
       Causes IRP to pay attention to BGF backpressure when sending credit refunds to 
       R2. Could be set to 0 if this causes performance issues. 
     */
    UINT32 rsvd_17 : 5;
    /* rsvd_17 - Bits[21:17], n/a, default = n/a 
       Padding added by header generation tool.
     */
    UINT32 qpi_drs_cdt_threshold : 2;
    /* qpi_drs_cdt_threshold - Bits[23:22], RW_L, default = 2'b01  */
    UINT32 idi_cdt_threshold : 4;
    /* idi_cdt_threshold - Bits[27:24], RW_L, default = 4'b1100 
       Specifies the credits used for
       I2U data for VC0
       I2U data VC1/VCm
       I2U data VCp
       DRS to CBox
       These use R2PCIe BL Pool A entries.
     */
    UINT32 fifo_cdt_threshold : 4;
    /* fifo_cdt_threshold - Bits[31:28], RW_L, default = 4'b1000 
       The IRP has a FIFO on the inbound path feeding the R2PCIe. This is only a 
       staging FIFO to assist in the flow of inbound traffic. This field pecifies the 
       number of FIFO entries to use in this IRP staging FIFO. 
     */
  } Bits;
  UINT32 Data;
} IRPEGCREDITS_IIO_DFX_VTD_STRUCT;




/* IIRPTHR0_IIO_DFX_VTD_REG supported on:                                     */
/*       SKX_A0 (0x4013C330)                                                  */
/*       SKX (0x4013C330)                                                     */
/* Register default value:              0x03FFCACA                            */
#define IIRPTHR0_IIO_DFX_VTD_REG 0x12044330
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * The register is used for response logic to throttle AD and also to trigger aging 
 * timer timeouts, if the entries are in the correct state for that. 
 */
typedef union {
  struct {
    UINT32 start_sel : 4;
    /* start_sel - Bits[3:0], RWS_L, default = 4'b1010 
       Selects the source which causes the activation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Response never occurs
       1011: Response occurs immediately
       1100-1111: Reserved
     */
    UINT32 stop_sel : 4;
    /* stop_sel - Bits[7:4], RWS_L, default = 4'b1100 
       Selects the source which causes the deactivation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Deactivate one clock after activation. Error injection on one transaction 
       will occur on the interface that is enabled. 
       1011: Response is never deactivated
       1100: Deactivate the response when the activating signal becomes false.
       1101-1111: Reserved
     */
    UINT32 agt_start_sel : 4;
    /* agt_start_sel - Bits[11:8], RWS_L, default = 4'b1010 
       Selects the source which causes the activation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Response never occurs
       1011: Response occurs immediately
       1100-1111: Reserved
     */
    UINT32 agt_stop_sel : 4;
    /* agt_stop_sel - Bits[15:12], RWS_L, default = 4'b1100 
       Selects the source which causes the deactivation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Deactivate one clock after activation. Error injection on one transaction 
       will occur on the interface that is enabled. 
       1011: Response is never deactivated
       1100: Deactivate the response when the activating signal becomes false.
       1101-1111: Reserved
     */
    UINT32 aging_timeout_trigger_cset_enables : 2;
    /* aging_timeout_trigger_cset_enables - Bits[17:16], RWS_L, default = 2'b11 
       Decides which cset is enabled for the aging timeout trigger. 
       	Bit 0 is for cset 0 and bit 1 is for cset 1.
     */
    UINT32 aging_timeout_trigger_entry_enable : 8;
    /* aging_timeout_trigger_entry_enable - Bits[25:18], RWS_L, default = 8'b11111111 
       Decides which group of ctag entries are enabled for the aging timeout trigger. 
       	Bit 0 is for ctw 0, bit 1 is for ctw 1 etc.
     */
    UINT32 rsvd : 6;
    /* rsvd - Bits[31:26], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IIRPTHR0_IIO_DFX_VTD_STRUCT;


/* IIRPTHR1_IIO_DFX_VTD_REG supported on:                                     */
/*       SKX_A0 (0x4013C334)                                                  */
/*       SKX (0x4013C334)                                                     */
/* Register default value:              0x0000CACA                            */
#define IIRPTHR1_IIO_DFX_VTD_REG 0x12044334
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x334
 */
typedef union {
  struct {
    UINT32 start_sel : 4;
    /* start_sel - Bits[3:0], RWS_L, default = 4'b1010 
       Selects the source which causes the activation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Response never occurs
       1011: Response occurs immediately
       1100-1111: Reserved
     */
    UINT32 stop_sel : 4;
    /* stop_sel - Bits[7:4], RWS_L, default = 4'b1100 
       Selects the source which causes the deactivation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Deactivate one clock after activation. Error injection on one transaction 
       will occur on the interface that is enabled. 
       1011: Response is never deactivated
       1100: Deactivate the response when the activating signal becomes false.
       1101-1111: Reserved
     */
    UINT32 iirpcdt_start_sel : 4;
    /* iirpcdt_start_sel - Bits[11:8], RWS_L, default = 4'b1010 
       Selects the source which causes the activation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Response never occurs
       1011: Response occurs immediately
       1100-1111: Reserved
     */
    UINT32 iirpcdt_stop_sel : 4;
    /* iirpcdt_stop_sel - Bits[15:12], RWS_L, default = 4'b1100 
       Selects the source which causes the deactivation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Deactivate one clock after activation. Error injection on one transaction 
       will occur on the interface that is enabled. 
       1011: Response is never deactivated
       1100: Deactivate the response when the activating signal becomes false.
       1101-1111: Reserved
     */
    UINT32 hdr_cdt_throttle : 1;
    /* hdr_cdt_throttle - Bits[16:16], RWS_L, default = 1'b0 
       Enables credit return throttling for CSET header credits using the iirpcdt ASC
     */
    UINT32 data_cdt_throttle : 1;
    /* data_cdt_throttle - Bits[17:17], RWS_L, default = 1'b0 
       Enables credit return throttling for CSET Data credits using the iirpcdt ASC
     */
    UINT32 p2p_cdt_throttle : 2;
    /* p2p_cdt_throttle - Bits[19:18], RWS_L, default = 2'b0 
       Enables credit return throttling for P2P credits using the iirpcdt ASC. Bit 0 is 
       for NCP2PS and bit 1 is for NCP2PB 
     */
    UINT32 faf_cdt_throttle : 1;
    /* faf_cdt_throttle - Bits[20:20], RWS_L, default = 1'b0 
       Enables credit return throttling for FAF header credits using the iirpcdt ASC
     */
    UINT32 rsvd : 11;
    /* rsvd - Bits[31:21], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IIRPTHR1_IIO_DFX_VTD_STRUCT;


/* IIRPRTHRPARITY_IIO_DFX_VTD_REG supported on:                               */
/*       SKX_A0 (0x4013C338)                                                  */
/*       SKX (0x4013C338)                                                     */
/* Register default value:              0x00000FCA                            */
#define IIRPRTHRPARITY_IIO_DFX_VTD_REG 0x12044338
/* Struct format extracted from XML file SKX\1.7.4.CFG.xml.
 * generated by critter 07_4_0x338
 */
typedef union {
  struct {
    UINT32 start_sel : 4;
    /* start_sel - Bits[3:0], RWS_L, default = 4'b1010 
       Selects the source which causes the activation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Response never occurs
       1011: Response occurs immediately
       1100-1111: Reserved
     */
    UINT32 stop_sel : 4;
    /* stop_sel - Bits[7:4], RWS_L, default = 4'b1100 
       Selects the source which causes the deactivation of the response in the cluster.
       0000: Global Event 0 (GE[0])
       0001: Global Event 1 (GE[1])
       0010: Global Event 2 (GE[2])
       0011: Global Event 3 (GE[3])
       0100: Artificial Starvation Counter 0 (ASC[0])
       0101: Artificial Starvation Counter 1 (ASC[1])
       0110: Artificial Starvation Counter 2 (ASC[2])
       0111: Artificial Starvation Counter 3 (ASC[3])
       1000: Global Event 4 (GE[4])
       1001: Global Event 5 (GE[5])
       1010: Deactivate one clock after activation. Error injection on one transaction 
       will occur on the interface that is enabled. 
       1011: Response is never deactivated
       1100: Deactivate the response when the activating signal becomes false.
       1101-1111: Reserved
     */
    UINT32 bit_sel : 4;
    /* bit_sel - Bits[11:8], RWS_L, default = 4'b1111 
       Select which bits to inject parity on. Default is all 4.
     */
    UINT32 rsvd : 20;
    /* rsvd - Bits[31:12], n/a, default = n/a 
       Padding added by header generation tool.
     */
  } Bits;
  UINT32 Data;
} IIRPRTHRPARITY_IIO_DFX_VTD_STRUCT;




#endif /* IIO_DFX_VTD_h */
