#
# This file contains 'Framework Code' and is licensed as such
# under the terms of your license agreement with Intel or your
# vendor.  This file may not be modified, except as allowed by
# additional terms of your license agreement.
#
## @file  CpPlatPkg.dec
#
#Copyright (c) 2014 - 2016, Intel Corporation. All rights reserved.
#This software and associated documentation (if any) is furnished
#under a license and may only be used or copied in accordance
#with the terms of the license. Except as permitted by such
#license, no part of this software or documentation may be
#reproduced, stored in a retrieval system, or transmitted in any
#form or by any means without the express written consent of
#Intel Corporation.
#
##


[Defines]
  DEC_SPECIFICATION              = 0x00010005
  PACKAGE_NAME                   = CpPlatPkg
  PACKAGE_GUID                   = F37747FB-C62B-49C6-8138-3A86201F64FD
  PACKAGE_VERSION                = 0.1

[Includes]
  Include

[LibraryClasses]
  ##  @libraryclass  Provides Platform Beep Map library.
  PlatformBeepMapLib|Include/Library/PlatformStatusCodes.h

  ##  @libraryclass  Provides Platform PostCode Map library.
  PlatformPostCodeMapLib|Include/Library/PlatformStatusCodes.h

[Ppis]
# APTIOV_SERVER_OVERRIDE_RC_START
#  gPeiIpmiTransportPpiGuid          = { 0x7bf5fecc, 0xc5b5, 0x4b25, { 0x81, 0x1b, 0xb4, 0xb5, 0xb, 0x28, 0x79, 0xf7 } } 
# APTIOV_SERVER_OVERRIDE_RC_END
  gUbaConfigDatabasePpiGuid         = { 0xc1176733, 0x159f, 0x42d5, { 0xbc, 0xb9, 0x32, 0x6, 0x60, 0xb1, 0x73, 0x10 } }

[Protocols]
  gEfiSmmFirmwareVolumeBlockProtocolGuid = { 0xd326d041, 0xbd31, 0x4c01, { 0xb5, 0xa8, 0x62, 0x8b, 0xe8, 0x7f, 0x6, 0x53 }}
  gEfiBmcAcpiSwChildPolicyProtocolGuid  =  { 0x89843c0b, 0x5701, 0x4ff6, { 0xa4, 0x73, 0x65, 0x75, 0x99, 0x04, 0xf7, 0x35 } }
  gEfiGenericElogProtocolGuid       = { 0x59d02fcd, 0x9233, 0x4d34, { 0xbc, 0xfe, 0x87, 0xca, 0x81, 0xd3, 0xdd, 0xa7 } }
  gEfiRedirElogProtocolGuid         = { 0x16d11030, 0x71ba, 0x4e5e, { 0xa9, 0xf9, 0xb4, 0x75, 0xa5, 0x49, 0x4, 0x8a } }
  gSmmGenericElogProtocolGuid       = { 0x664ef1f6, 0x19bf, 0x4498, { 0xab, 0x6a, 0xfc, 0x05, 0x72, 0xfb, 0x98, 0x51 } }
  gSmmRedirElogProtocolGuid         = { 0x79ac2d9c, 0x9216, 0x43c5, { 0xa0, 0x74, 0x0b, 0x45, 0xc7, 0x64, 0x22, 0xc1 } }
  gEfiIpmiSolStatusProtocolGuid     = { 0xe790848e, 0xb6ab, 0x44ab, { 0x84, 0x91, 0xdc, 0xa5, 0xc, 0x39, 0x7, 0xc6 } }
  gEfiBmcLanProtocolGuid            = { 0x989d5548, 0xac40, 0x45f3, { 0xad, 0xf5, 0xd0, 0x5f, 0x94, 0xa8, 0x91, 0xae } }
  gEfiRedirFruProtocolGuid          = { 0x28638cfa, 0xea88, 0x456c, { 0x92, 0xa5, 0xf2, 0x49, 0xca, 0x48, 0x85, 0x35 } }
  gEfiGenericFruProtocolGuid        = { 0xc8eebf0e, 0x0e10, 0x47f7, { 0x81, 0xbd, 0x39, 0xdb, 0x75, 0xca, 0x93, 0x9f } }
  gEfiSmBmcVariableGuid             = { 0x5b525f29, 0x827d, 0x4ca3, { 0xbe, 0xb5, 0x89, 0x54, 0xb5, 0x6c, 0x5, 0x73 } }
  gEfiIpmiTransportProtocolGuid     = { 0x6bb945e8, 0x3743, 0x433e, { 0xb9, 0xe, 0x29, 0xb3, 0xd, 0x5d, 0xc6, 0x30 } }
  gSmmIpmiTransportProtocolGuid     = { 0x8bb070f1, 0xa8f3, 0x471d, { 0x86, 0x16, 0x77, 0x4b, 0xa3, 0xf4, 0x30, 0xa0 } }
  gEfiOsWdtPolicyProtocolGuid       = { 0x0a77e089, 0x1590, 0x4442, { 0xbb, 0xea, 0x11, 0x5e, 0x19, 0xe6, 0x35, 0x8a } }
  gEfiFrbCodeProtocolGuid           = { 0xbc5f861c, 0x86ed, 0x417e, { 0xbb, 0x7b, 0x6c, 0x2, 0x6b, 0xcd, 0x75, 0x5b } }
  gUbaConfigDatabaseProtocolGuid    = { 0xe03e0d46, 0x5263, 0x4845, { 0xb0, 0xa4, 0x58, 0xd5, 0x7b, 0x31, 0x77, 0xe2 } }
# APTIOV_SERVER_OVERRIDE_RC_START
# gLegacyBridgeProtocolGuid         = { 0x56546975, 0xc450, 0x44b2, { 0x9d, 0x25, 0xce, 0x83, 0xc5, 0x82, 0x1, 0x61 } }
# gUefiBootMarkerProtocolGuid       = { 0xbe6b4f66, 0x5b89, 0x4dc2, { 0x91, 0x2, 0xa1, 0x78, 0xc8, 0x62, 0x1c, 0xf2 } }
# gUefiLegacyBootMarkerGuid         = { 0xea50c2b,  0x4c0d, 0x4ca3, { 0x97, 0xc1, 0x0, 0x14, 0xdb, 0x75, 0x44, 0x73 } }
# gUefiWindowsInt10Workaround       = { 0x22951f5e, 0x4f7b, 0x405b, { 0x8a, 0xda, 0xec, 0xdc, 0x43, 0x1c, 0x61, 0x6f } }
# gFvbInitilizedGuid                = { 0xfa0f4b4f, 0xd6ef, 0x40e7, { 0xbc, 0x1b, 0x29, 0x24, 0x5c, 0xa0, 0x3b, 0xc2 } }
# APTIOV_SERVER_OVERRIDE_RC_END
  #
  # WHEA Support
  #
  gEfiWheaSupportProtocolGuid            = { 0xeee07404, 0x26ee, 0x43c9, { 0x90, 0x71, 0x4e, 0x48, 0x00, 0x8c, 0x46, 0x91 }}
  gEfiWheaPlatformSupportProtocolGuid    = { 0x6c09c5b9, 0xbf3f, 0x46d2, { 0x91, 0x98, 0x4a, 0x06, 0x48, 0x26, 0xf4, 0x14 }}
  gEfiIsPlatformSupportWheaProtocolGuid  = { 0x71c4c155, 0xd54b, 0x4d59, { 0xa2, 0xc1, 0xf9, 0xa5, 0x72, 0x3c, 0x65, 0xa8 }}
  gEfiWheaBootProtocolGuid               = { 0x4a0266fe, 0xfe57, 0x4738, { 0x80, 0xab, 0x14, 0x6e, 0x46, 0xf0, 0x3a, 0x65 }}


[Guids]
  ## Include/Guid/CpPlatPkgTokenSpace.h
  gCpPlatTokenSpaceGuid  = { 0xc9c39664, 0x96dd, 0x4c5c, { 0xaf, 0xd7, 0xcd, 0x65, 0x76, 0x29, 0xcf, 0xb0 }}
# APTIOV_SERVER_OVERRIDE_RC_START
#  gEfiServerMgmtSetupVariableGuid = { 0x1239999, 0xfc0e, 0x4b6e, { 0x9e, 0x79, 0xd5, 0x4d, 0x5d, 0xb6, 0xcd, 0x20 } }
#  gCpPlatIpmiTokenSpaceGuid = { 0xd1112ebf, 0xd82, 0x4071, { 0x96, 0x7c, 0xe1, 0x69, 0x23, 0x27, 0x40, 0xba } }
# APTIOV_SERVER_OVERRIDE_RC_END
  gEfiSetupEnterGuid        = { 0x71202EEE, 0x5F53, 0x40d9, {0xAB, 0x3D, 0x9E, 0x0C, 0x26, 0xD9, 0x66, 0x57 }}

  #
  # WHEA Support
  #
  gEfiWheaProcessorGenericErrorSectionGuid    = { 0x9876ccad, 0x47b4, 0x4bdb, { 0xb6, 0x5e, 0x16, 0xf1, 0x93, 0xc4, 0xf3, 0xdb }}
  gEfiWheaProcessorSpecificErrorSectionGuid   = { 0xdc3ea0b0, 0xa144, 0x4797, { 0xb5, 0x5b, 0x53, 0xfa, 0x24, 0x2b, 0x6e, 0x1d }}
  gEfiWheaPlatformMemoryErrorSectionGuid      = { 0xa5bc1114, 0x6f64, 0x4ede, { 0xb8, 0x63, 0x3e, 0x83, 0xed, 0x7c, 0x83, 0xb1 }}
  gEfiWheaPcieErrorSectionGuid                = { 0xd995e954, 0xbbc1, 0x430f, { 0xad, 0x91, 0xb4, 0x4d, 0xcb, 0x3c, 0x6f, 0x35 }}
  gEfiWheaPciBusErrorSectionGuid              = { 0xc5753963, 0x3b84, 0x4095, { 0xbf, 0x78, 0xed, 0xda, 0xd3, 0xf9, 0xc9, 0xdd }}
  gEfiWheaPciDevErrorSectionGuid              = { 0xeb5e4685, 0xca66, 0x4769, { 0xb6, 0xa2, 0x26, 0x06, 0x8b, 0x00, 0x13, 0x26 }}
  gEfiWheaFirmwareErrorSectionGuid            = { 0x81212a96, 0x09ed, 0x4996, { 0x94, 0x71, 0x8d, 0x72, 0x9c, 0x8e, 0x69, 0xed }}
  gEfiWheaPlatformNonStandardErrorSectionGuid = { 0x1b9cd864, 0xda7c, 0x483e, { 0x8d, 0x69, 0xd3, 0x5c, 0xb4, 0xad, 0x27, 0xc9 }}
  gEfiWheaElogFvGuid                          = { 0xd6a1cd70, 0x4b33, 0x4994, { 0xa6, 0xea, 0x37, 0x5f, 0x2c, 0xcc, 0x54, 0x37 }}
  gOutOfBandGuid                              = { 0xbac76586, 0x3515, 0x420b, { 0xa1, 0xb7, 0x23, 0x5a, 0x71, 0x6e, 0xca, 0xad }}

[PcdsFixedAtBuild]
# APTIOV_SERVER_OVERRIDE_RC_START
#  gCpPlatTokenSpaceGuid.PcdMaxSOLChannels|0x3|UINT8|0x40000009 
# APTIOV_SERVER_OVERRIDE_RC_END
#APTIOV_SERVER_OVERRIDE_RC_START : To include PcdsDynamic in PcdsDynamicEx
[PcdsDynamic, PcdsDynamicEx]
#APTIOV_SERVER_OVERRIDE_RC_END : To include PcdsDynamic in PcdsDynamicEx
[PcdsFixedAtBuild, PcdsPatchableInModule, PcdsDynamic, PcdsDynamicEx]
  gServerCommonTokenSpaceGuid.PcdWheaLogFvBase|0xFFEA0000|UINT32|0x40000007

[PcdsDynamic, PcdsDynamicEx] 
  gCpPlatIpmiTokenSpaceGuid.PcdSioMailboxBaseAddress|0x600|UINT32|0x10000021
# APTIOV_SERVER_OVERRIDE_RC_START
#  gCpPlatIpmiTokenSpaceGuid.PcdIpmiIoBaseAddress|0xCA2|UINT16|0x10000022
#  gCpPlatIpmiTokenSpaceGuid.PcdIpmiSmmIoBaseAddress|0xCA4|UINT16|0x10000023
#  gCpPlatIpmiTokenSpaceGuid.PcdFRB2EnabledFlag|TRUE|BOOLEAN|0x10000030
#  gCpPlatTokenSpaceGuid.PcdUefiOptimizedBootEx|FALSE|BOOLEAN|0x10000024
#  gCpPlatTokenSpaceGuid.PcdUefiWindowsInt10Workaround|FALSE|BOOLEAN|0x10000025
# APTIOV_SERVER_OVERRIDE_RC_END